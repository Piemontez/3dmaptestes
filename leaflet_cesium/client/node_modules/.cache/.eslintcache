[{"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/index.js":"1","/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/views/index.jsx":"2","/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx":"3","/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map.jsx":"4","/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx":"5"},{"size":208,"mtime":1615309347518,"results":"6","hashOfConfig":"7"},{"size":442,"mtime":1616700046378,"results":"8","hashOfConfig":"7"},{"size":3448,"mtime":1616702527054,"results":"9","hashOfConfig":"7"},{"size":862,"mtime":1616698724565,"results":"10","hashOfConfig":"7"},{"size":4672,"mtime":1616695586026,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"o16x57",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/index.js",[],[],"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/views/index.jsx",["25","26"],"import React from 'react';\nimport Map from '../map/map'\nimport Map3D from '../map/map3d';\nimport DrawableMap3D from '../map/drawable_map3d';\n\nclass Index extends React.Component {\n  render() {\n    return <>\n      {/* <div className=\"App\">\n        <Map/>\n      </div> */}\n      <div className=\"nice\">\n        <Map3D/>\n      </div>\n      {/* <div className=\"nice\">\n        <DrawableMap3D/>\n      </div> */}\n    </>\n  }\n}\n\nexport default Index;\n","/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx",[],"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map.jsx",[],"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx",["27"],"import * as Cesium from 'cesium';\nimport React from 'react';\n\nconst positionArray = [\n    [-21.938068, 64.128000],\n    [-21.938268, 64.128100],\n    [-21.938468, 64.128300],\n    [-21.938568, 64.128700],\n    [-21.938968, 64.129700],\n    [-21.938768, 64.129700],\n    [-21.938568, 64.129600],\n    [-21.938268, 64.129300],\n    [-21.937868, 64.128600],\n    [-21.938468, 64.128000],\n  ]\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n            terrainProvider: Cesium.createWorldTerrain(),\n        });    \n\n        viewer.shadows = true;\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n        });\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n        );\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n\n        function createPoint(worldPosition) {\n            return viewer.entities.add({\n                position: worldPosition,\n                point: {\n                    color: Cesium.Color.WHITE,\n                    pixelSize: 5,\n                    heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                },\n            });\n        }\n\n        function drawShape(positionData) {\n            return viewer.entities.add({\n                polyline: {\n                    positions: positionData,\n                    clampToGround: true,\n                    width: 3,\n                },\n            });\n        }\n\n        var activeShapePoints = [];\n        var floatingPoint;\n        var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n\n\n       /*  positionArray.forEach(\n            (e) => {\n                if (activeShapePoints.length === 0) {\n                    floatingPoint = createPoint({x: e[0], y: e[1]});\n                    activeShapePoints.push({x: e[0], y: e[1]});\n                    var dynamicPositions = new Cesium.CallbackProperty(function () {\n                        return activeShapePoints;\n                    }, false);\n                    drawShape(dynamicPositions);\n                }\n                activeShapePoints.push({x: e[0], y: e[1]});\n                createPoint({x: e[0], y: e[1]});\n            }\n        );\n        terminateShape(); */\n\n\n        function drawEarthShape(position){\n            var earthPosition = viewer.scene.pickPosition(position);\n            console.log(activeShapePoints)\n            if (Cesium.defined(earthPosition)) {\n                if (activeShapePoints.length === 0) {\n                    floatingPoint = createPoint(earthPosition);\n                    activeShapePoints.push(earthPosition);\n                    var dynamicPositions = new Cesium.CallbackProperty(function () {\n                        return activeShapePoints;\n                    }, false);\n                    drawShape(dynamicPositions);\n                }\n                activeShapePoints.push(earthPosition);\n                createPoint(earthPosition);\n            }\n        }\n        \n        function terminateShape() {\n            activeShapePoints.pop();\n            drawShape(activeShapePoints);\n            viewer.entities.remove(floatingPoint);\n            floatingPoint = undefined;\n            activeShapePoints = [];\n        }\n\n        //bind mouse move\n        handler.setInputAction(function (event) {\n            if (Cesium.defined(floatingPoint)) {\n                var newPosition = viewer.scene.pickPosition(event.endPosition);\n                if (Cesium.defined(newPosition)) {\n                    floatingPoint.position.setValue(newPosition);\n                    activeShapePoints.pop();\n                    activeShapePoints.push(newPosition);\n                }\n            }\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        \n        //bind left click\n        handler.setInputAction(function (event) {\n            drawEarthShape(event.position)\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n        //bind right click\n        handler.setInputAction(function () {\n            terminateShape();\n        }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}",{"ruleId":"28","severity":1,"message":"29","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":11},{"ruleId":"28","severity":1,"message":"32","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":21},{"ruleId":"28","severity":1,"message":"33","line":4,"column":7,"nodeType":"30","messageId":"31","endLine":4,"endColumn":20},"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'DrawableMap3D' is defined but never used.","'positionArray' is assigned a value but never used."]