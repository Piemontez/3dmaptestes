{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400) //orientation : {\n      //  heading : Cesium.Math.toRadians(0.0),\n      //  pitch : Cesium.Math.toRadians(-15.0),\n      //}\n\n    }); //teste fromid - funciona, mas depende do website\n\n    Cesium.IonResource.fromAssetId(353567).then(function (resource) {\n      viewer.entities.add({\n        position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n        model: {\n          uri: resource,\n          scale: 10.0,\n          color: '#ff0000'\n        }\n      });\n    }); //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n\n    var position = Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100);\n    var heading = Cesium.Math.toRadians(135);\n    var pitch = 0;\n    var roll = 0;\n    var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n    var orientation = Cesium.Transforms.headingPitchRollQuaternion(position, hpr);\n    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\n    var model = viewer.scene.primitives.add(Cesium.Model.fromGltf({\n      url: 'http://localhost:3000/object/cow.glb',\n      modelMatrix: modelMatrix,\n      scale: 2e7\n    }));\n    viewer.entities.add({\n      name: 'nice',\n      position: position,\n      orientation: orientation,\n      model: {\n        uri: 'http://localhost:3000/object/cow.glb',\n        scale: 10.0\n      }\n    }); //viewer.entities.add({\n    //  position: Cesium.Cartesian3.fromDegrees(-21.937068, 64.128000, 100),\n    //  model: {\n    //    url: '../../../server/obj/teapot.gltf',\n    //    minimumPixelSize: 128,\n    //    maximumScale: 20000,\n    //  }\n    //}); \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx"],"names":["React","Map3D","Component","componentDidMount","Cesium","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","IonResource","fromAssetId","then","resource","entities","position","model","uri","scale","color","heading","Math","toRadians","pitch","roll","hpr","HeadingPitchRoll","orientation","Transforms","headingPitchRollQuaternion","modelMatrix","eastNorthUpToFixedFrame","Model","fromGltf","url","name","render","height","width"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n          terrainProvider: Cesium.createWorldTerrain()\n        });    \n\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n          //orientation : {\n          //  heading : Cesium.Math.toRadians(0.0),\n          //  pitch : Cesium.Math.toRadians(-15.0),\n          //}\n        });\n\n        //teste fromid - funciona, mas depende do website\n        Cesium.IonResource.fromAssetId(353567)\n          .then(function (resource) {\n            viewer.entities.add({\n              position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n              model: {\n                uri: resource,\n                scale: 10.0,\n                color: '#ff0000'\n              },\n            });\n          })\n\n        //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n        var position = Cesium.Cartesian3.fromDegrees(\n          -21.938068, \n          64.128000,\n          100\n        );\n        var heading = Cesium.Math.toRadians(135);\n        var pitch = 0;\n        var roll = 0;\n        var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n        var orientation = Cesium.Transforms.headingPitchRollQuaternion(\n          position,\n          hpr\n        );\n        \n        var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\n\n        var model = viewer.scene.primitives.add(Cesium.Model.fromGltf({\n          url : 'http://localhost:3000/object/cow.glb',\n          modelMatrix : modelMatrix,\n          scale: 2e7\n        }));\n\n        viewer.entities.add({\n          name: 'nice',\n          position: position,\n          orientation: orientation,\n          model: {\n            uri: 'http://localhost:3000/object/cow.glb',\n            scale: 10.0\n          },\n        });\n\n        //viewer.entities.add({\n        //  position: Cesium.Cartesian3.fromDegrees(-21.937068, 64.128000, 100),\n        //  model: {\n        //    url: '../../../server/obj/teapot.gltf',\n        //    minimumPixelSize: 128,\n        //    maximumScale: 20000,\n        //  }\n        //}); \n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}