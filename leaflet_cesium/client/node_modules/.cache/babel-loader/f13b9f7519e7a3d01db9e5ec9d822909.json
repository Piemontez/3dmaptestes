{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.shadows = true;\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400) //orientation : {\n      //  heading : Cesium.Math.toRadians(0.0),\n      //  pitch : Cesium.Math.toRadians(-15.0),\n      //}\n\n    });\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n    function createPoint(worldPosition) {\n      return viewer.entities.add({\n        position: worldPosition,\n        point: {\n          color: Cesium.Color.WHITE,\n          pixelSize: 5,\n          heightReference: Cesium.HeightReference.CLAMP_TO_GROUND\n        }\n      });\n    }\n\n    function drawShape(positionData) {\n      return viewer.entities.add({\n        polyline: {\n          positions: positionData,\n          clampToGround: true,\n          width: 3\n        }\n      });\n    }\n\n    var activeShapePoints = [];\n    var floatingPoint;\n    var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n    handler.setInputAction(function (event) {\n      var earthPosition = viewer.scene.pickPosition(event.position);\n      console.log(earthPosition);\n\n      if (Cesium.defined(earthPosition)) {\n        if (activeShapePoints.length === 0) {\n          floatingPoint = createPoint(earthPosition);\n          activeShapePoints.push(earthPosition);\n          var dynamicPositions = new Cesium.CallbackProperty(function () {\n            return activeShapePoints;\n          }, false);\n          drawShape(dynamicPositions);\n        }\n\n        activeShapePoints.push(earthPosition);\n        createPoint(earthPosition);\n      }\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n    handler.setInputAction(function (event) {\n      if (Cesium.defined(floatingPoint)) {\n        var newPosition = viewer.scene.pickPosition(event.endPosition);\n\n        if (Cesium.defined(newPosition)) {\n          floatingPoint.position.setValue(newPosition);\n          activeShapePoints.pop();\n          activeShapePoints.push(newPosition);\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n\n    function terminateShape() {\n      activeShapePoints.pop();\n      drawShape(activeShapePoints);\n      viewer.entities.remove(floatingPoint);\n      viewer.entities.remove(activeShape);\n      floatingPoint = undefined;\n      activeShape = undefined;\n      activeShapePoints = [];\n    }\n\n    handler.setInputAction(function (event) {\n      terminateShape();\n    }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx"],"names":["React","Map3D","Component","componentDidMount","Cesium","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","shadows","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","cesiumWidget","screenSpaceEventHandler","removeInputAction","ScreenSpaceEventType","LEFT_DOUBLE_CLICK","LEFT_CLICK","createPoint","worldPosition","entities","position","point","color","Color","WHITE","pixelSize","heightReference","HeightReference","CLAMP_TO_GROUND","drawShape","positionData","polyline","positions","clampToGround","width","activeShapePoints","floatingPoint","handler","ScreenSpaceEventHandler","canvas","setInputAction","event","earthPosition","pickPosition","console","log","defined","length","push","dynamicPositions","CallbackProperty","newPosition","endPosition","setValue","pop","MOUSE_MOVE","terminateShape","remove","activeShape","undefined","RIGHT_CLICK","render","height"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n          terrainProvider: Cesium.createWorldTerrain()\n        });    \n\n        viewer.shadows = true;\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n          //orientation : {\n          //  heading : Cesium.Math.toRadians(0.0),\n          //  pitch : Cesium.Math.toRadians(-15.0),\n          //}\n        });\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n        );\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n\n        function createPoint(worldPosition) {\n            return viewer.entities.add({\n                position: worldPosition,\n                point: {\n                    color: Cesium.Color.WHITE,\n                    pixelSize: 5,\n                    heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                },\n            });\n        }\n        \n\n        function drawShape(positionData) {\n            return viewer.entities.add({\n                polyline: {\n                    positions: positionData,\n                    clampToGround: true,\n                    width: 3,\n                },\n            });\n        }\n\n        var activeShapePoints = [];\n        var floatingPoint;\n        var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n\n        handler.setInputAction(function (event) {\n          var earthPosition = viewer.scene.pickPosition(event.position);\n          console.log(earthPosition)\n          if (Cesium.defined(earthPosition)) {\n            if (activeShapePoints.length === 0) {\n              floatingPoint = createPoint(earthPosition);\n              activeShapePoints.push(earthPosition);\n              var dynamicPositions = new Cesium.CallbackProperty(function () {\n                return activeShapePoints;\n              }, false);\n              drawShape(dynamicPositions);\n            }\n            activeShapePoints.push(earthPosition);\n            createPoint(earthPosition);\n          }\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n        handler.setInputAction(function (event) {\n          if (Cesium.defined(floatingPoint)) {\n            var newPosition = viewer.scene.pickPosition(event.endPosition);\n            if (Cesium.defined(newPosition)) {\n              floatingPoint.position.setValue(newPosition);\n              activeShapePoints.pop();\n              activeShapePoints.push(newPosition);\n            }\n          }\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        \n        function terminateShape() {\n            activeShapePoints.pop();\n            drawShape(activeShapePoints);\n            viewer.entities.remove(floatingPoint);\n            viewer.entities.remove(activeShape);\n            floatingPoint = undefined;\n            activeShape = undefined;\n            activeShapePoints = [];\n          }\n          handler.setInputAction(function (event) {\n            terminateShape();\n          }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}