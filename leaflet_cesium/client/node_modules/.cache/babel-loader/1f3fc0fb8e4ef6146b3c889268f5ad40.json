{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMapFace from \"./CubeMapFace.js\";\nimport MipmapHint from \"./MipmapHint.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport Sampler from \"./Sampler.js\";\nimport TextureMagnificationFilter from \"./TextureMagnificationFilter.js\";\nimport TextureMinificationFilter from \"./TextureMinificationFilter.js\";\n/**\n * @private\n */\n\nfunction CubeMap(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT); //>>includeStart('debug', pragmas.debug);\n\n  Check.defined(\"options.context\", options.context); //>>includeEnd('debug');\n\n  var context = options.context;\n  var source = options.source;\n  var width;\n  var height;\n\n  if (defined(source)) {\n    var faces = [source.positiveX, source.negativeX, source.positiveY, source.negativeY, source.positiveZ, source.negativeZ]; //>>includeStart('debug', pragmas.debug);\n\n    if (!faces[0] || !faces[1] || !faces[2] || !faces[3] || !faces[4] || !faces[5]) {\n      throw new DeveloperError(\"options.source requires positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ faces.\");\n    } //>>includeEnd('debug');\n\n\n    width = faces[0].width;\n    height = faces[0].height; //>>includeStart('debug', pragmas.debug);\n\n    for (var i = 1; i < 6; ++i) {\n      if (Number(faces[i].width) !== width || Number(faces[i].height) !== height) {\n        throw new DeveloperError(\"Each face in options.source must have the same width and height.\");\n      }\n    } //>>includeEnd('debug');\n\n  } else {\n    width = options.width;\n    height = options.height;\n  }\n\n  var size = width;\n  var pixelDatatype = defaultValue(options.pixelDatatype, PixelDatatype.UNSIGNED_BYTE);\n  var pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGBA);\n  var internalFormat = PixelFormat.toInternalFormat(pixelFormat, pixelDatatype, context); //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(width) || !defined(height)) {\n    throw new DeveloperError(\"options requires a source field to create an initialized cube map or width and height fields to create a blank cube map.\");\n  }\n\n  if (width !== height) {\n    throw new DeveloperError(\"Width must equal height.\");\n  }\n\n  if (size <= 0) {\n    throw new DeveloperError(\"Width and height must be greater than zero.\");\n  }\n\n  if (size > ContextLimits.maximumCubeMapSize) {\n    throw new DeveloperError(\"Width and height must be less than or equal to the maximum cube map size (\" + ContextLimits.maximumCubeMapSize + \").  Check maximumCubeMapSize.\");\n  }\n\n  if (!PixelFormat.validate(pixelFormat)) {\n    throw new DeveloperError(\"Invalid options.pixelFormat.\");\n  }\n\n  if (PixelFormat.isDepthFormat(pixelFormat)) {\n    throw new DeveloperError(\"options.pixelFormat cannot be DEPTH_COMPONENT or DEPTH_STENCIL.\");\n  }\n\n  if (!PixelDatatype.validate(pixelDatatype)) {\n    throw new DeveloperError(\"Invalid options.pixelDatatype.\");\n  }\n\n  if (pixelDatatype === PixelDatatype.FLOAT && !context.floatingPointTexture) {\n    throw new DeveloperError(\"When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.\");\n  }\n\n  if (pixelDatatype === PixelDatatype.HALF_FLOAT && !context.halfFloatingPointTexture) {\n    throw new DeveloperError(\"When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension.\");\n  } //>>includeEnd('debug');\n\n\n  var sizeInBytes = PixelFormat.textureSizeInBytes(pixelFormat, pixelDatatype, size, size) * 6; // Use premultiplied alpha for opaque textures should perform better on Chrome:\n  // http://media.tojicode.com/webglCamp4/#20\n\n  var preMultiplyAlpha = options.preMultiplyAlpha || pixelFormat === PixelFormat.RGB || pixelFormat === PixelFormat.LUMINANCE;\n  var flipY = defaultValue(options.flipY, true);\n  var gl = context._gl;\n  var textureTarget = gl.TEXTURE_CUBE_MAP;\n  var texture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(textureTarget, texture);\n\n  function createFace(target, sourceFace, preMultiplyAlpha, flipY) {\n    var arrayBufferView = sourceFace.arrayBufferView;\n\n    if (!defined(arrayBufferView)) {\n      arrayBufferView = sourceFace.bufferView;\n    }\n\n    var unpackAlignment = 4;\n\n    if (defined(arrayBufferView)) {\n      unpackAlignment = PixelFormat.alignmentInBytes(pixelFormat, pixelDatatype, width);\n    }\n\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n    if (defined(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = PixelFormat.flipY(arrayBufferView, pixelFormat, pixelDatatype, size, size);\n      }\n\n      gl.texImage2D(target, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), arrayBufferView);\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY); // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n\n      gl.texImage2D(target, 0, internalFormat, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), sourceFace);\n    }\n  }\n\n  if (defined(source)) {\n    createFace(gl.TEXTURE_CUBE_MAP_POSITIVE_X, source.positiveX, preMultiplyAlpha, flipY);\n    createFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, source.negativeX, preMultiplyAlpha, flipY);\n    createFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, source.positiveY, preMultiplyAlpha, flipY);\n    createFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, source.negativeY, preMultiplyAlpha, flipY);\n    createFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, source.positiveZ, preMultiplyAlpha, flipY);\n    createFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, source.negativeZ, preMultiplyAlpha, flipY);\n  } else {\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n    gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, internalFormat, size, size, 0, pixelFormat, PixelDatatype.toWebGLConstant(pixelDatatype, context), null);\n  }\n\n  gl.bindTexture(textureTarget, null);\n  this._context = context;\n  this._textureFilterAnisotropic = context._textureFilterAnisotropic;\n  this._textureTarget = textureTarget;\n  this._texture = texture;\n  this._pixelFormat = pixelFormat;\n  this._pixelDatatype = pixelDatatype;\n  this._size = size;\n  this._hasMipmap = false;\n  this._sizeInBytes = sizeInBytes;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._sampler = undefined;\n  var initialized = defined(source);\n  this._positiveX = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_POSITIVE_X, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this._negativeX = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this._positiveY = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this._negativeY = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this._positiveZ = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this._negativeZ = new CubeMapFace(context, texture, textureTarget, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, internalFormat, pixelFormat, pixelDatatype, size, preMultiplyAlpha, flipY, initialized);\n  this.sampler = defined(options.sampler) ? options.sampler : new Sampler();\n}\n\nObject.defineProperties(CubeMap.prototype, {\n  positiveX: {\n    get: function () {\n      return this._positiveX;\n    }\n  },\n  negativeX: {\n    get: function () {\n      return this._negativeX;\n    }\n  },\n  positiveY: {\n    get: function () {\n      return this._positiveY;\n    }\n  },\n  negativeY: {\n    get: function () {\n      return this._negativeY;\n    }\n  },\n  positiveZ: {\n    get: function () {\n      return this._positiveZ;\n    }\n  },\n  negativeZ: {\n    get: function () {\n      return this._negativeZ;\n    }\n  },\n  sampler: {\n    get: function () {\n      return this._sampler;\n    },\n    set: function (sampler) {\n      var minificationFilter = sampler.minificationFilter;\n      var magnificationFilter = sampler.magnificationFilter;\n      var mipmap = minificationFilter === TextureMinificationFilter.NEAREST_MIPMAP_NEAREST || minificationFilter === TextureMinificationFilter.NEAREST_MIPMAP_LINEAR || minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_NEAREST || minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR;\n      var context = this._context;\n      var pixelDatatype = this._pixelDatatype; // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler's settings\n\n      if (pixelDatatype === PixelDatatype.FLOAT && !context.textureFloatLinear || pixelDatatype === PixelDatatype.HALF_FLOAT && !context.textureHalfFloatLinear) {\n        minificationFilter = mipmap ? TextureMinificationFilter.NEAREST_MIPMAP_NEAREST : TextureMinificationFilter.NEAREST;\n        magnificationFilter = TextureMagnificationFilter.NEAREST;\n      }\n\n      var gl = context._gl;\n      var target = this._textureTarget;\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(target, this._texture);\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, minificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, magnificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, sampler.wrapS);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, sampler.wrapT);\n\n      if (defined(this._textureFilterAnisotropic)) {\n        gl.texParameteri(target, this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, sampler.maximumAnisotropy);\n      }\n\n      gl.bindTexture(target, null);\n      this._sampler = sampler;\n    }\n  },\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    }\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    }\n  },\n  width: {\n    get: function () {\n      return this._size;\n    }\n  },\n  height: {\n    get: function () {\n      return this._size;\n    }\n  },\n  sizeInBytes: {\n    get: function () {\n      if (this._hasMipmap) {\n        return Math.floor(this._sizeInBytes * 4 / 3);\n      }\n\n      return this._sizeInBytes;\n    }\n  },\n  preMultiplyAlpha: {\n    get: function () {\n      return this._preMultiplyAlpha;\n    }\n  },\n  flipY: {\n    get: function () {\n      return this._flipY;\n    }\n  },\n  _target: {\n    get: function () {\n      return this._textureTarget;\n    }\n  }\n});\n/**\n * Generates a complete mipmap chain for each cubemap face.\n *\n * @param {MipmapHint} [hint=MipmapHint.DONT_CARE] A performance vs. quality hint.\n *\n * @exception {DeveloperError} hint is invalid.\n * @exception {DeveloperError} This CubeMap's width must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap's height must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Generate mipmaps, and then set the sampler so mipmaps are used for\n * // minification when the cube map is sampled.\n * cubeMap.generateMipmap();\n * cubeMap.sampler = new Sampler({\n *   minificationFilter : Cesium.TextureMinificationFilter.NEAREST_MIPMAP_LINEAR\n * });\n */\n\nCubeMap.prototype.generateMipmap = function (hint) {\n  hint = defaultValue(hint, MipmapHint.DONT_CARE); //>>includeStart('debug', pragmas.debug);\n\n  if (this._size > 1 && !CesiumMath.isPowerOfTwo(this._size)) {\n    throw new DeveloperError(\"width and height must be a power of two to call generateMipmap().\");\n  }\n\n  if (!MipmapHint.validate(hint)) {\n    throw new DeveloperError(\"hint is invalid.\");\n  } //>>includeEnd('debug');\n\n\n  this._hasMipmap = true;\n  var gl = this._context._gl;\n  var target = this._textureTarget;\n  gl.hint(gl.GENERATE_MIPMAP_HINT, hint);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.generateMipmap(target);\n  gl.bindTexture(target, null);\n};\n\nCubeMap.prototype.isDestroyed = function () {\n  return false;\n};\n\nCubeMap.prototype.destroy = function () {\n  this._context._gl.deleteTexture(this._texture);\n\n  this._positiveX = destroyObject(this._positiveX);\n  this._negativeX = destroyObject(this._negativeX);\n  this._positiveY = destroyObject(this._positiveY);\n  this._negativeY = destroyObject(this._negativeY);\n  this._positiveZ = destroyObject(this._positiveZ);\n  this._negativeZ = destroyObject(this._negativeZ);\n  return destroyObject(this);\n};\n\nexport default CubeMap;","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/node_modules/cesium/Source/Renderer/CubeMap.js"],"names":["Check","defaultValue","defined","destroyObject","DeveloperError","CesiumMath","PixelFormat","ContextLimits","CubeMapFace","MipmapHint","PixelDatatype","Sampler","TextureMagnificationFilter","TextureMinificationFilter","CubeMap","options","EMPTY_OBJECT","context","source","width","height","faces","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","i","Number","size","pixelDatatype","UNSIGNED_BYTE","pixelFormat","RGBA","internalFormat","toInternalFormat","maximumCubeMapSize","validate","isDepthFormat","FLOAT","floatingPointTexture","HALF_FLOAT","halfFloatingPointTexture","sizeInBytes","textureSizeInBytes","preMultiplyAlpha","RGB","LUMINANCE","flipY","gl","_gl","textureTarget","TEXTURE_CUBE_MAP","texture","createTexture","activeTexture","TEXTURE0","bindTexture","createFace","target","sourceFace","arrayBufferView","bufferView","unpackAlignment","alignmentInBytes","pixelStorei","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","toWebGLConstant","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","_context","_textureFilterAnisotropic","_textureTarget","_texture","_pixelFormat","_pixelDatatype","_size","_hasMipmap","_sizeInBytes","_preMultiplyAlpha","_flipY","_sampler","undefined","initialized","_positiveX","_negativeX","_positiveY","_negativeY","_positiveZ","_negativeZ","sampler","Object","defineProperties","prototype","get","set","minificationFilter","magnificationFilter","mipmap","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","textureFloatLinear","textureHalfFloatLinear","NEAREST","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","wrapS","TEXTURE_WRAP_T","wrapT","TEXTURE_MAX_ANISOTROPY_EXT","maximumAnisotropy","Math","floor","_target","generateMipmap","hint","DONT_CARE","isPowerOfTwo","GENERATE_MIPMAP_HINT","isDestroyed","destroy","deleteTexture"],"mappings":"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","sourcesContent":["import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMapFace from \"./CubeMapFace.js\";\nimport MipmapHint from \"./MipmapHint.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport Sampler from \"./Sampler.js\";\nimport TextureMagnificationFilter from \"./TextureMagnificationFilter.js\";\nimport TextureMinificationFilter from \"./TextureMinificationFilter.js\";\n\n/**\n * @private\n */\nfunction CubeMap(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  var context = options.context;\n  var source = options.source;\n  var width;\n  var height;\n\n  if (defined(source)) {\n    var faces = [\n      source.positiveX,\n      source.negativeX,\n      source.positiveY,\n      source.negativeY,\n      source.positiveZ,\n      source.negativeZ,\n    ];\n\n    //>>includeStart('debug', pragmas.debug);\n    if (\n      !faces[0] ||\n      !faces[1] ||\n      !faces[2] ||\n      !faces[3] ||\n      !faces[4] ||\n      !faces[5]\n    ) {\n      throw new DeveloperError(\n        \"options.source requires positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ faces.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    width = faces[0].width;\n    height = faces[0].height;\n\n    //>>includeStart('debug', pragmas.debug);\n    for (var i = 1; i < 6; ++i) {\n      if (\n        Number(faces[i].width) !== width ||\n        Number(faces[i].height) !== height\n      ) {\n        throw new DeveloperError(\n          \"Each face in options.source must have the same width and height.\"\n        );\n      }\n    }\n    //>>includeEnd('debug');\n  } else {\n    width = options.width;\n    height = options.height;\n  }\n\n  var size = width;\n  var pixelDatatype = defaultValue(\n    options.pixelDatatype,\n    PixelDatatype.UNSIGNED_BYTE\n  );\n  var pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGBA);\n  var internalFormat = PixelFormat.toInternalFormat(\n    pixelFormat,\n    pixelDatatype,\n    context\n  );\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(width) || !defined(height)) {\n    throw new DeveloperError(\n      \"options requires a source field to create an initialized cube map or width and height fields to create a blank cube map.\"\n    );\n  }\n\n  if (width !== height) {\n    throw new DeveloperError(\"Width must equal height.\");\n  }\n\n  if (size <= 0) {\n    throw new DeveloperError(\"Width and height must be greater than zero.\");\n  }\n\n  if (size > ContextLimits.maximumCubeMapSize) {\n    throw new DeveloperError(\n      \"Width and height must be less than or equal to the maximum cube map size (\" +\n        ContextLimits.maximumCubeMapSize +\n        \").  Check maximumCubeMapSize.\"\n    );\n  }\n\n  if (!PixelFormat.validate(pixelFormat)) {\n    throw new DeveloperError(\"Invalid options.pixelFormat.\");\n  }\n\n  if (PixelFormat.isDepthFormat(pixelFormat)) {\n    throw new DeveloperError(\n      \"options.pixelFormat cannot be DEPTH_COMPONENT or DEPTH_STENCIL.\"\n    );\n  }\n\n  if (!PixelDatatype.validate(pixelDatatype)) {\n    throw new DeveloperError(\"Invalid options.pixelDatatype.\");\n  }\n\n  if (pixelDatatype === PixelDatatype.FLOAT && !context.floatingPointTexture) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.\"\n    );\n  }\n\n  if (\n    pixelDatatype === PixelDatatype.HALF_FLOAT &&\n    !context.halfFloatingPointTexture\n  ) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  var sizeInBytes =\n    PixelFormat.textureSizeInBytes(pixelFormat, pixelDatatype, size, size) * 6;\n\n  // Use premultiplied alpha for opaque textures should perform better on Chrome:\n  // http://media.tojicode.com/webglCamp4/#20\n  var preMultiplyAlpha =\n    options.preMultiplyAlpha ||\n    pixelFormat === PixelFormat.RGB ||\n    pixelFormat === PixelFormat.LUMINANCE;\n  var flipY = defaultValue(options.flipY, true);\n\n  var gl = context._gl;\n  var textureTarget = gl.TEXTURE_CUBE_MAP;\n  var texture = gl.createTexture();\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(textureTarget, texture);\n\n  function createFace(target, sourceFace, preMultiplyAlpha, flipY) {\n    var arrayBufferView = sourceFace.arrayBufferView;\n    if (!defined(arrayBufferView)) {\n      arrayBufferView = sourceFace.bufferView;\n    }\n\n    var unpackAlignment = 4;\n    if (defined(arrayBufferView)) {\n      unpackAlignment = PixelFormat.alignmentInBytes(\n        pixelFormat,\n        pixelDatatype,\n        width\n      );\n    }\n\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n    if (defined(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = PixelFormat.flipY(\n          arrayBufferView,\n          pixelFormat,\n          pixelDatatype,\n          size,\n          size\n        );\n      }\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        size,\n        size,\n        0,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        arrayBufferView\n      );\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        sourceFace\n      );\n    }\n  }\n\n  if (defined(source)) {\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      source.positiveX,\n      preMultiplyAlpha,\n      flipY\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      source.negativeX,\n      preMultiplyAlpha,\n      flipY\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      source.positiveY,\n      preMultiplyAlpha,\n      flipY\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      source.negativeY,\n      preMultiplyAlpha,\n      flipY\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      source.positiveZ,\n      preMultiplyAlpha,\n      flipY\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      source.negativeZ,\n      preMultiplyAlpha,\n      flipY\n    );\n  } else {\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n  }\n  gl.bindTexture(textureTarget, null);\n\n  this._context = context;\n  this._textureFilterAnisotropic = context._textureFilterAnisotropic;\n  this._textureTarget = textureTarget;\n  this._texture = texture;\n  this._pixelFormat = pixelFormat;\n  this._pixelDatatype = pixelDatatype;\n  this._size = size;\n  this._hasMipmap = false;\n  this._sizeInBytes = sizeInBytes;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._sampler = undefined;\n\n  var initialized = defined(source);\n  this._positiveX = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeX = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._positiveY = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeY = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._positiveZ = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeZ = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n\n  this.sampler = defined(options.sampler) ? options.sampler : new Sampler();\n}\n\nObject.defineProperties(CubeMap.prototype, {\n  positiveX: {\n    get: function () {\n      return this._positiveX;\n    },\n  },\n  negativeX: {\n    get: function () {\n      return this._negativeX;\n    },\n  },\n  positiveY: {\n    get: function () {\n      return this._positiveY;\n    },\n  },\n  negativeY: {\n    get: function () {\n      return this._negativeY;\n    },\n  },\n  positiveZ: {\n    get: function () {\n      return this._positiveZ;\n    },\n  },\n  negativeZ: {\n    get: function () {\n      return this._negativeZ;\n    },\n  },\n  sampler: {\n    get: function () {\n      return this._sampler;\n    },\n    set: function (sampler) {\n      var minificationFilter = sampler.minificationFilter;\n      var magnificationFilter = sampler.magnificationFilter;\n\n      var mipmap =\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_NEAREST ||\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_LINEAR ||\n        minificationFilter ===\n          TextureMinificationFilter.LINEAR_MIPMAP_NEAREST ||\n        minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR;\n\n      var context = this._context;\n      var pixelDatatype = this._pixelDatatype;\n\n      // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler's settings\n      if (\n        (pixelDatatype === PixelDatatype.FLOAT &&\n          !context.textureFloatLinear) ||\n        (pixelDatatype === PixelDatatype.HALF_FLOAT &&\n          !context.textureHalfFloatLinear)\n      ) {\n        minificationFilter = mipmap\n          ? TextureMinificationFilter.NEAREST_MIPMAP_NEAREST\n          : TextureMinificationFilter.NEAREST;\n        magnificationFilter = TextureMagnificationFilter.NEAREST;\n      }\n\n      var gl = context._gl;\n      var target = this._textureTarget;\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(target, this._texture);\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, minificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, magnificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, sampler.wrapS);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, sampler.wrapT);\n      if (defined(this._textureFilterAnisotropic)) {\n        gl.texParameteri(\n          target,\n          this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,\n          sampler.maximumAnisotropy\n        );\n      }\n      gl.bindTexture(target, null);\n\n      this._sampler = sampler;\n    },\n  },\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    },\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    },\n  },\n  width: {\n    get: function () {\n      return this._size;\n    },\n  },\n  height: {\n    get: function () {\n      return this._size;\n    },\n  },\n  sizeInBytes: {\n    get: function () {\n      if (this._hasMipmap) {\n        return Math.floor((this._sizeInBytes * 4) / 3);\n      }\n      return this._sizeInBytes;\n    },\n  },\n  preMultiplyAlpha: {\n    get: function () {\n      return this._preMultiplyAlpha;\n    },\n  },\n  flipY: {\n    get: function () {\n      return this._flipY;\n    },\n  },\n\n  _target: {\n    get: function () {\n      return this._textureTarget;\n    },\n  },\n});\n\n/**\n * Generates a complete mipmap chain for each cubemap face.\n *\n * @param {MipmapHint} [hint=MipmapHint.DONT_CARE] A performance vs. quality hint.\n *\n * @exception {DeveloperError} hint is invalid.\n * @exception {DeveloperError} This CubeMap's width must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap's height must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Generate mipmaps, and then set the sampler so mipmaps are used for\n * // minification when the cube map is sampled.\n * cubeMap.generateMipmap();\n * cubeMap.sampler = new Sampler({\n *   minificationFilter : Cesium.TextureMinificationFilter.NEAREST_MIPMAP_LINEAR\n * });\n */\nCubeMap.prototype.generateMipmap = function (hint) {\n  hint = defaultValue(hint, MipmapHint.DONT_CARE);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (this._size > 1 && !CesiumMath.isPowerOfTwo(this._size)) {\n    throw new DeveloperError(\n      \"width and height must be a power of two to call generateMipmap().\"\n    );\n  }\n  if (!MipmapHint.validate(hint)) {\n    throw new DeveloperError(\"hint is invalid.\");\n  }\n  //>>includeEnd('debug');\n\n  this._hasMipmap = true;\n\n  var gl = this._context._gl;\n  var target = this._textureTarget;\n  gl.hint(gl.GENERATE_MIPMAP_HINT, hint);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.generateMipmap(target);\n  gl.bindTexture(target, null);\n};\n\nCubeMap.prototype.isDestroyed = function () {\n  return false;\n};\n\nCubeMap.prototype.destroy = function () {\n  this._context._gl.deleteTexture(this._texture);\n  this._positiveX = destroyObject(this._positiveX);\n  this._negativeX = destroyObject(this._negativeX);\n  this._positiveY = destroyObject(this._positiveY);\n  this._negativeY = destroyObject(this._negativeY);\n  this._positiveZ = destroyObject(this._positiveZ);\n  this._negativeZ = destroyObject(this._negativeZ);\n  return destroyObject(this);\n};\nexport default CubeMap;\n"]},"metadata":{},"sourceType":"module"}