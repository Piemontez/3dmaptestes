{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.shadows = true;\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400) //orientation : {\n      //  heading : Cesium.Math.toRadians(0.0),\n      //  pitch : Cesium.Math.toRadians(-15.0),\n      //}\n\n    });\n\n    if (!viewer.scene.pickPositionSupported) {\n      window.alert(\"This browser does not support pickPosition.\");\n    }\n\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n\n    function createPoint(worldPosition) {\n      var point = viewer.entities.add({\n        position: worldPosition,\n        point: {\n          color: Cesium.Color.WHITE,\n          pixelSize: 5,\n          heightReference: Cesium.HeightReference.CLAMP_TO_GROUND\n        }\n      });\n      return point;\n    }\n\n    var drawingMode = \"line\";\n\n    function drawShape(positionData) {\n      console.log(positionData);\n      var shape;\n\n      if (drawingMode === \"line\") {\n        shape = viewer.entities.add({\n          polyline: {\n            positions: positionData,\n            clampToGround: true,\n            width: 3\n          }\n        });\n      }\n\n      return shape;\n    }\n\n    var activeShapePoints = [];\n    var activeShape;\n    var floatingPoint;\n    var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n    handler.setInputAction(function (event) {\n      console.log(event.position);\n      var earthPosition = viewer.scene.pickPosition(event.position);\n\n      if (Cesium.defined(earthPosition)) {\n        if (activeShapePoints.length === 0) {\n          floatingPoint = createPoint(earthPosition);\n          activeShapePoints.push(earthPosition);\n          var dynamicPositions = new Cesium.CallbackProperty(function () {\n            return activeShapePoints;\n          }, false);\n          activeShape = drawShape(dynamicPositions);\n        }\n\n        activeShapePoints.push(earthPosition);\n        createPoint(earthPosition);\n      }\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n    handler.setInputAction(function (event) {\n      if (Cesium.defined(floatingPoint)) {\n        var newPosition = viewer.scene.pickPosition(event.endPosition);\n\n        if (Cesium.defined(newPosition)) {\n          floatingPoint.position.setValue(newPosition);\n          activeShapePoints.pop();\n          activeShapePoints.push(newPosition);\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx"],"names":["React","Map3D","Component","componentDidMount","Cesium","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","shadows","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","pickPositionSupported","window","alert","cesiumWidget","screenSpaceEventHandler","removeInputAction","ScreenSpaceEventType","LEFT_DOUBLE_CLICK","createPoint","worldPosition","point","entities","position","color","Color","WHITE","pixelSize","heightReference","HeightReference","CLAMP_TO_GROUND","drawingMode","drawShape","positionData","console","log","shape","polyline","positions","clampToGround","width","activeShapePoints","activeShape","floatingPoint","handler","ScreenSpaceEventHandler","canvas","setInputAction","event","earthPosition","pickPosition","defined","length","push","dynamicPositions","CallbackProperty","LEFT_CLICK","newPosition","endPosition","setValue","pop","MOUSE_MOVE","render","height"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n          terrainProvider: Cesium.createWorldTerrain()\n        });    \n\n        viewer.shadows = true;\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n          //orientation : {\n          //  heading : Cesium.Math.toRadians(0.0),\n          //  pitch : Cesium.Math.toRadians(-15.0),\n          //}\n        });\n\n        if (!viewer.scene.pickPositionSupported) {\n          window.alert(\"This browser does not support pickPosition.\");\n        }\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n          Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n        );\n\n        function createPoint(worldPosition) {\n            var point = viewer.entities.add({\n                position: worldPosition,\n                point: {\n                    color: Cesium.Color.WHITE,\n                    pixelSize: 5,\n                    heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                },\n            });\n            return point;\n        }\n        \n        var drawingMode = \"line\";\n\n        function drawShape(positionData) {\n            console.log(positionData)\n            var shape;\n            if (drawingMode === \"line\") {\n                shape = viewer.entities.add({\n                    polyline: {\n                        positions: positionData,\n                        clampToGround: true,\n                        width: 3,\n                    },\n                });\n            }\n            return shape;\n        }\n\n        var activeShapePoints = [];\n        var activeShape;\n        var floatingPoint;\n        var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n        handler.setInputAction(function (event) {\n            console.log(event.position)\n          var earthPosition = viewer.scene.pickPosition(event.position);\n          if (Cesium.defined(earthPosition)) {\n            if (activeShapePoints.length === 0) {\n              floatingPoint = createPoint(earthPosition);\n              activeShapePoints.push(earthPosition);\n              var dynamicPositions = new Cesium.CallbackProperty(function () {\n                return activeShapePoints;\n              }, false);\n              activeShape = drawShape(dynamicPositions);\n            }\n            activeShapePoints.push(earthPosition);\n            createPoint(earthPosition);\n          }\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n        handler.setInputAction(function (event) {\n          if (Cesium.defined(floatingPoint)) {\n            var newPosition = viewer.scene.pickPosition(event.endPosition);\n            if (Cesium.defined(newPosition)) {\n              floatingPoint.position.setValue(newPosition);\n              activeShapePoints.pop();\n              activeShapePoints.push(newPosition);\n            }\n          }\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}