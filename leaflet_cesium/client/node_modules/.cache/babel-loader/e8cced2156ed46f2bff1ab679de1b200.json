{"ast":null,"code":"import BoundingSphere from \"../../Core/BoundingSphere.js\";\nimport Cartesian3 from \"../../Core/Cartesian3.js\";\nimport Cartographic from \"../../Core/Cartographic.js\";\nimport Clock from \"../../Core/Clock.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Event from \"../../Core/Event.js\";\nimport EventHelper from \"../../Core/EventHelper.js\";\nimport HeadingPitchRange from \"../../Core/HeadingPitchRange.js\";\nimport Matrix4 from \"../../Core/Matrix4.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport BoundingSphereState from \"../../DataSources/BoundingSphereState.js\";\nimport ConstantPositionProperty from \"../../DataSources/ConstantPositionProperty.js\";\nimport DataSourceCollection from \"../../DataSources/DataSourceCollection.js\";\nimport DataSourceDisplay from \"../../DataSources/DataSourceDisplay.js\";\nimport Entity from \"../../DataSources/Entity.js\";\nimport EntityView from \"../../DataSources/EntityView.js\";\nimport Property from \"../../DataSources/Property.js\";\nimport Cesium3DTileset from \"../../Scene/Cesium3DTileset.js\";\nimport computeFlyToLocationForRectangle from \"../../Scene/computeFlyToLocationForRectangle.js\";\nimport ImageryLayer from \"../../Scene/ImageryLayer.js\";\nimport SceneMode from \"../../Scene/SceneMode.js\";\nimport TimeDynamicPointCloud from \"../../Scene/TimeDynamicPointCloud.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport when from \"../../ThirdParty/when.js\";\nimport Animation from \"../Animation/Animation.js\";\nimport AnimationViewModel from \"../Animation/AnimationViewModel.js\";\nimport BaseLayerPicker from \"../BaseLayerPicker/BaseLayerPicker.js\";\nimport createDefaultImageryProviderViewModels from \"../BaseLayerPicker/createDefaultImageryProviderViewModels.js\";\nimport createDefaultTerrainProviderViewModels from \"../BaseLayerPicker/createDefaultTerrainProviderViewModels.js\";\nimport CesiumWidget from \"../CesiumWidget/CesiumWidget.js\";\nimport ClockViewModel from \"../ClockViewModel.js\";\nimport FullscreenButton from \"../FullscreenButton/FullscreenButton.js\";\nimport Geocoder from \"../Geocoder/Geocoder.js\";\nimport getElement from \"../getElement.js\";\nimport HomeButton from \"../HomeButton/HomeButton.js\";\nimport InfoBox from \"../InfoBox/InfoBox.js\";\nimport NavigationHelpButton from \"../NavigationHelpButton/NavigationHelpButton.js\";\nimport ProjectionPicker from \"../ProjectionPicker/ProjectionPicker.js\";\nimport SceneModePicker from \"../SceneModePicker/SceneModePicker.js\";\nimport SelectionIndicator from \"../SelectionIndicator/SelectionIndicator.js\";\nimport subscribeAndEvaluate from \"../subscribeAndEvaluate.js\";\nimport Timeline from \"../Timeline/Timeline.js\";\nimport VRButton from \"../VRButton/VRButton.js\";\nimport Cesium3DTileFeature from \"../../Scene/Cesium3DTileFeature.js\";\nvar boundingSphereScratch = new BoundingSphere();\n\nfunction onTimelineScrubfunction(e) {\n  var clock = e.clock;\n  clock.currentTime = e.timeJulian;\n  clock.shouldAnimate = false;\n}\n\nfunction getCesium3DTileFeatureDescription(feature) {\n  var propertyNames = feature.getPropertyNames();\n  var html = \"\";\n  propertyNames.forEach(function (propertyName) {\n    var value = feature.getProperty(propertyName);\n\n    if (defined(value)) {\n      html += \"<tr><th>\" + propertyName + \"</th><td>\" + value + \"</td></tr>\";\n    }\n  });\n\n  if (html.length > 0) {\n    html = '<table class=\"cesium-infoBox-defaultTable\"><tbody>' + html + \"</tbody></table>\";\n  }\n\n  return html;\n}\n\nfunction getCesium3DTileFeatureName(feature) {\n  // We need to iterate all property names to find potential\n  // candidates, but since we prefer some property names\n  // over others, we store them in an indexed array\n  // and then use the first defined element in the array\n  // as the preferred choice.\n  var i;\n  var possibleNames = [];\n  var propertyNames = feature.getPropertyNames();\n\n  for (i = 0; i < propertyNames.length; i++) {\n    var propertyName = propertyNames[i];\n\n    if (/^name$/i.test(propertyName)) {\n      possibleNames[0] = feature.getProperty(propertyName);\n    } else if (/name/i.test(propertyName)) {\n      possibleNames[1] = feature.getProperty(propertyName);\n    } else if (/^title$/i.test(propertyName)) {\n      possibleNames[2] = feature.getProperty(propertyName);\n    } else if (/^(id|identifier)$/i.test(propertyName)) {\n      possibleNames[3] = feature.getProperty(propertyName);\n    } else if (/element/i.test(propertyName)) {\n      possibleNames[4] = feature.getProperty(propertyName);\n    } else if (/(id|identifier)$/i.test(propertyName)) {\n      possibleNames[5] = feature.getProperty(propertyName);\n    }\n  }\n\n  var length = possibleNames.length;\n\n  for (i = 0; i < length; i++) {\n    var item = possibleNames[i];\n\n    if (defined(item) && item !== \"\") {\n      return item;\n    }\n  }\n\n  return \"Unnamed Feature\";\n}\n\nfunction pickEntity(viewer, e) {\n  var picked = viewer.scene.pick(e.position);\n\n  if (defined(picked)) {\n    var id = defaultValue(picked.id, picked.primitive.id);\n\n    if (id instanceof Entity) {\n      return id;\n    }\n\n    if (picked instanceof Cesium3DTileFeature) {\n      return new Entity({\n        name: getCesium3DTileFeatureName(picked),\n        description: getCesium3DTileFeatureDescription(picked),\n        feature: picked\n      });\n    }\n  } // No regular entity picked.  Try picking features from imagery layers.\n\n\n  if (defined(viewer.scene.globe)) {\n    return pickImageryLayerFeature(viewer, e.position);\n  }\n}\n\nfunction trackDataSourceClock(timeline, clock, dataSource) {\n  if (defined(dataSource)) {\n    var dataSourceClock = dataSource.clock;\n\n    if (defined(dataSourceClock)) {\n      dataSourceClock.getValue(clock);\n\n      if (defined(timeline)) {\n        timeline.updateFromClock();\n        timeline.zoomTo(dataSourceClock.startTime, dataSourceClock.stopTime);\n      }\n    }\n  }\n}\n\nvar cartesian3Scratch = new Cartesian3();\n\nfunction pickImageryLayerFeature(viewer, windowPosition) {\n  var scene = viewer.scene;\n  var pickRay = scene.camera.getPickRay(windowPosition);\n  var imageryLayerFeaturePromise = scene.imageryLayers.pickImageryLayerFeatures(pickRay, scene);\n\n  if (!defined(imageryLayerFeaturePromise)) {\n    return;\n  } // Imagery layer feature picking is asynchronous, so put up a message while loading.\n\n\n  var loadingMessage = new Entity({\n    id: \"Loading...\",\n    description: \"Loading feature information...\"\n  });\n  when(imageryLayerFeaturePromise, function (features) {\n    // Has this async pick been superseded by a later one?\n    if (viewer.selectedEntity !== loadingMessage) {\n      return;\n    }\n\n    if (!defined(features) || features.length === 0) {\n      viewer.selectedEntity = createNoFeaturesEntity();\n      return;\n    } // Select the first feature.\n\n\n    var feature = features[0];\n    var entity = new Entity({\n      id: feature.name,\n      description: feature.description\n    });\n\n    if (defined(feature.position)) {\n      var ecfPosition = viewer.scene.globe.ellipsoid.cartographicToCartesian(feature.position, cartesian3Scratch);\n      entity.position = new ConstantPositionProperty(ecfPosition);\n    }\n\n    viewer.selectedEntity = entity;\n  }, function () {\n    // Has this async pick been superseded by a later one?\n    if (viewer.selectedEntity !== loadingMessage) {\n      return;\n    }\n\n    viewer.selectedEntity = createNoFeaturesEntity();\n  });\n  return loadingMessage;\n}\n\nfunction createNoFeaturesEntity() {\n  return new Entity({\n    id: \"None\",\n    description: \"No features found.\"\n  });\n}\n\nfunction enableVRUI(viewer, enabled) {\n  var geocoder = viewer._geocoder;\n  var homeButton = viewer._homeButton;\n  var sceneModePicker = viewer._sceneModePicker;\n  var projectionPicker = viewer._projectionPicker;\n  var baseLayerPicker = viewer._baseLayerPicker;\n  var animation = viewer._animation;\n  var timeline = viewer._timeline;\n  var fullscreenButton = viewer._fullscreenButton;\n  var infoBox = viewer._infoBox;\n  var selectionIndicator = viewer._selectionIndicator;\n  var visibility = enabled ? \"hidden\" : \"visible\";\n\n  if (defined(geocoder)) {\n    geocoder.container.style.visibility = visibility;\n  }\n\n  if (defined(homeButton)) {\n    homeButton.container.style.visibility = visibility;\n  }\n\n  if (defined(sceneModePicker)) {\n    sceneModePicker.container.style.visibility = visibility;\n  }\n\n  if (defined(projectionPicker)) {\n    projectionPicker.container.style.visibility = visibility;\n  }\n\n  if (defined(baseLayerPicker)) {\n    baseLayerPicker.container.style.visibility = visibility;\n  }\n\n  if (defined(animation)) {\n    animation.container.style.visibility = visibility;\n  }\n\n  if (defined(timeline)) {\n    timeline.container.style.visibility = visibility;\n  }\n\n  if (defined(fullscreenButton) && fullscreenButton.viewModel.isFullscreenEnabled) {\n    fullscreenButton.container.style.visibility = visibility;\n  }\n\n  if (defined(infoBox)) {\n    infoBox.container.style.visibility = visibility;\n  }\n\n  if (defined(selectionIndicator)) {\n    selectionIndicator.container.style.visibility = visibility;\n  }\n\n  if (viewer._container) {\n    var right = enabled || !defined(fullscreenButton) ? 0 : fullscreenButton.container.clientWidth;\n    viewer._vrButton.container.style.right = right + \"px\";\n    viewer.forceResize();\n  }\n}\n/**\n * @typedef {Object} Viewer.ConstructorOptions\n *\n * Initialization options for the Viewer constructor\n *\n * @property {Boolean} [animation=true] If set to false, the Animation widget will not be created.\n * @property {Boolean} [baseLayerPicker=true] If set to false, the BaseLayerPicker widget will not be created.\n * @property {Boolean} [fullscreenButton=true] If set to false, the FullscreenButton widget will not be created.\n * @property {Boolean} [vrButton=false] If set to true, the VRButton widget will be created.\n * @property {Boolean|GeocoderService[]} [geocoder=true] If set to false, the Geocoder widget will not be created.\n * @property {Boolean} [homeButton=true] If set to false, the HomeButton widget will not be created.\n * @property {Boolean} [infoBox=true] If set to false, the InfoBox widget will not be created.\n * @property {Boolean} [sceneModePicker=true] If set to false, the SceneModePicker widget will not be created.\n * @property {Boolean} [selectionIndicator=true] If set to false, the SelectionIndicator widget will not be created.\n * @property {Boolean} [timeline=true] If set to false, the Timeline widget will not be created.\n * @property {Boolean} [navigationHelpButton=true] If set to false, the navigation help button will not be created.\n * @property {Boolean} [navigationInstructionsInitiallyVisible=true] True if the navigation instructions should initially be visible, or false if the should not be shown until the user explicitly clicks the button.\n * @property {Boolean} [scene3DOnly=false] When <code>true</code>, each geometry instance will only be rendered in 3D to save GPU memory.\n * @property {Boolean} [shouldAnimate=false] <code>true</code> if the clock should attempt to advance simulation time by default, <code>false</code> otherwise.  This option takes precedence over setting {@link Viewer#clockViewModel}.\n * @property {ClockViewModel} [clockViewModel=new ClockViewModel(clock)] The clock view model to use to control current time.\n * @property {ProviderViewModel} [selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available base layer is used.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel[]} [imageryProviderViewModels=createDefaultImageryProviderViewModels()] The array of ProviderViewModels to be selectable from the BaseLayerPicker.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel} [selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available base layer is used.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel[]} [terrainProviderViewModels=createDefaultTerrainProviderViewModels()] The array of ProviderViewModels to be selectable from the BaseLayerPicker.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ImageryProvider} [imageryProvider=createWorldImagery()] The imagery provider to use.  This value is only valid if `baseLayerPicker` is set to false.\n * @property {TerrainProvider} [terrainProvider=new EllipsoidTerrainProvider()] The terrain provider to use\n * @property {SkyBox|false} [skyBox] The skybox used to render the stars.  When <code>undefined</code>, the default stars are used. If set to <code>false</code>, no skyBox, Sun, or Moon will be added.\n * @property {SkyAtmosphere|false} [skyAtmosphere] Blue sky, and the glow around the Earth's limb.  Set to <code>false</code> to turn it off.\n * @property {Element|String} [fullscreenElement=document.body] The element or id to be placed into fullscreen mode when the full screen button is pressed.\n * @property {Boolean} [useDefaultRenderLoop=true] True if this widget should control the render loop, false otherwise.\n * @property {Number} [targetFrameRate] The target frame rate when using the default render loop.\n * @property {Boolean} [showRenderLoopErrors=true] If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.\n * @property {Boolean} [useBrowserRecommendedResolution=true] If true, render at the browser's recommended resolution and ignore <code>window.devicePixelRatio</code>.\n * @property {Boolean} [automaticallyTrackDataSourceClocks=true] If true, this widget will automatically track the clock settings of newly added DataSources, updating if the DataSource's clock changes.  Set this to false if you want to configure the clock independently.\n * @property {Object} [contextOptions] Context and WebGL creation properties corresponding to <code>options</code> passed to {@link Scene}.\n * @property {SceneMode} [sceneMode=SceneMode.SCENE3D] The initial scene mode.\n * @property {MapProjection} [mapProjection=new GeographicProjection()] The map projection to use in 2D and Columbus View modes.\n * @property {Globe|false} [globe=new Globe(mapProjection.ellipsoid)] The globe to use in the scene.  If set to <code>false</code>, no globe will be added.\n * @property {Boolean} [orderIndependentTranslucency=true] If true and the configuration supports it, use order independent translucency.\n * @property {Element|String} [creditContainer] The DOM element or ID that will contain the {@link CreditDisplay}.  If not specified, the credits are added to the bottom of the widget itself.\n * @property {Element|String} [creditViewport] The DOM element or ID that will contain the credit pop up created by the {@link CreditDisplay}.  If not specified, it will appear over the widget itself.\n * @property {DataSourceCollection} [dataSources=new DataSourceCollection()] The collection of data sources visualized by the widget.  If this parameter is provided,\n *                               the instance is assumed to be owned by the caller and will not be destroyed when the viewer is destroyed.\n * @property {Number} [terrainExaggeration=1.0] A scalar used to exaggerate the terrain. Note that terrain exaggeration will not modify any other primitive as they are positioned relative to the ellipsoid.\n * @property {Boolean} [shadows=false] Determines if shadows are cast by light sources.\n * @property {ShadowMode} [terrainShadows=ShadowMode.RECEIVE_ONLY] Determines if the terrain casts or receives shadows from light sources.\n * @property {MapMode2D} [mapMode2D=MapMode2D.INFINITE_SCROLL] Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.\n * @property {Boolean} [projectionPicker=false] If set to true, the ProjectionPicker widget will be created.\n * @property {Boolean} [requestRenderMode=false] If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling reduces the CPU/GPU usage of your application and uses less battery on mobile, but requires using {@link Scene#requestRender} to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n * @property {Number} [maximumRenderTimeChange=0.0] If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n */\n\n/**\n * A base widget for building applications.  It composites all of the standard Cesium widgets into one reusable package.\n * The widget can always be extended by using mixins, which add functionality useful for a variety of applications.\n *\n * @alias Viewer\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Viewer.ConstructorOptions} [options] Object describing initialization options\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n * @exception {DeveloperError} options.selectedImageryProviderViewModel is not available when not using the BaseLayerPicker widget, specify options.imageryProvider instead.\n * @exception {DeveloperError} options.selectedTerrainProviderViewModel is not available when not using the BaseLayerPicker widget, specify options.terrainProvider instead.\n *\n * @see Animation\n * @see BaseLayerPicker\n * @see CesiumWidget\n * @see FullscreenButton\n * @see HomeButton\n * @see SceneModePicker\n * @see Timeline\n * @see viewerDragDropMixin\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Hello%20World.html|Cesium Sandcastle Hello World Demo}\n *\n * @example\n * //Initialize the viewer widget with several custom options and mixins.\n * var viewer = new Cesium.Viewer('cesiumContainer', {\n *     //Start in Columbus Viewer\n *     sceneMode : Cesium.SceneMode.COLUMBUS_VIEW,\n *     //Use Cesium World Terrain\n *     terrainProvider : Cesium.createWorldTerrain(),\n *     //Hide the base layer picker\n *     baseLayerPicker : false,\n *     //Use OpenStreetMaps\n *     imageryProvider : new Cesium.OpenStreetMapImageryProvider({\n *         url : 'https://a.tile.openstreetmap.org/'\n *     }),\n *     skyBox : new Cesium.SkyBox({\n *         sources : {\n *           positiveX : 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\n *           negativeX : 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\n *           positiveY : 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\n *           negativeY : 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\n *           positiveZ : 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\n *           negativeZ : 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\n *         }\n *     }),\n *     // Show Columbus View map with Web Mercator projection\n *     mapProjection : new Cesium.WebMercatorProjection()\n * });\n *\n * //Add basic drag and drop functionality\n * viewer.extend(Cesium.viewerDragDropMixin);\n *\n * //Show a pop-up alert if we encounter an error when processing a dropped file\n * viewer.dropError.addEventListener(function(dropHandler, name, error) {\n *     console.log(error);\n *     window.alert(error);\n * });\n */\n\n\nfunction Viewer(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  } //>>includeEnd('debug');\n\n\n  container = getElement(container);\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var createBaseLayerPicker = (!defined(options.globe) || options.globe !== false) && (!defined(options.baseLayerPicker) || options.baseLayerPicker !== false); //>>includeStart('debug', pragmas.debug);\n  // If not using BaseLayerPicker, selectedImageryProviderViewModel is an invalid option\n\n  if (!createBaseLayerPicker && defined(options.selectedImageryProviderViewModel)) {\n    throw new DeveloperError(\"options.selectedImageryProviderViewModel is not available when not using the BaseLayerPicker widget. \\\nEither specify options.imageryProvider instead or set options.baseLayerPicker to true.\");\n  } // If not using BaseLayerPicker, selectedTerrainProviderViewModel is an invalid option\n\n\n  if (!createBaseLayerPicker && defined(options.selectedTerrainProviderViewModel)) {\n    throw new DeveloperError(\"options.selectedTerrainProviderViewModel is not available when not using the BaseLayerPicker widget. \\\nEither specify options.terrainProvider instead or set options.baseLayerPicker to true.\");\n  } //>>includeEnd('debug')\n\n\n  var that = this;\n  var viewerContainer = document.createElement(\"div\");\n  viewerContainer.className = \"cesium-viewer\";\n  container.appendChild(viewerContainer); // Cesium widget container\n\n  var cesiumWidgetContainer = document.createElement(\"div\");\n  cesiumWidgetContainer.className = \"cesium-viewer-cesiumWidgetContainer\";\n  viewerContainer.appendChild(cesiumWidgetContainer); // Bottom container\n\n  var bottomContainer = document.createElement(\"div\");\n  bottomContainer.className = \"cesium-viewer-bottom\";\n  viewerContainer.appendChild(bottomContainer);\n  var scene3DOnly = defaultValue(options.scene3DOnly, false);\n  var clock;\n  var clockViewModel;\n  var destroyClockViewModel = false;\n\n  if (defined(options.clockViewModel)) {\n    clockViewModel = options.clockViewModel;\n    clock = clockViewModel.clock;\n  } else {\n    clock = new Clock();\n    clockViewModel = new ClockViewModel(clock);\n    destroyClockViewModel = true;\n  }\n\n  if (defined(options.shouldAnimate)) {\n    clock.shouldAnimate = options.shouldAnimate;\n  } // Cesium widget\n\n\n  var cesiumWidget = new CesiumWidget(cesiumWidgetContainer, {\n    imageryProvider: createBaseLayerPicker || defined(options.imageryProvider) ? false : undefined,\n    clock: clock,\n    skyBox: options.skyBox,\n    skyAtmosphere: options.skyAtmosphere,\n    sceneMode: options.sceneMode,\n    mapProjection: options.mapProjection,\n    globe: options.globe,\n    orderIndependentTranslucency: options.orderIndependentTranslucency,\n    contextOptions: options.contextOptions,\n    useDefaultRenderLoop: options.useDefaultRenderLoop,\n    targetFrameRate: options.targetFrameRate,\n    showRenderLoopErrors: options.showRenderLoopErrors,\n    useBrowserRecommendedResolution: options.useBrowserRecommendedResolution,\n    creditContainer: defined(options.creditContainer) ? options.creditContainer : bottomContainer,\n    creditViewport: options.creditViewport,\n    scene3DOnly: scene3DOnly,\n    terrainExaggeration: options.terrainExaggeration,\n    shadows: options.shadows,\n    terrainShadows: options.terrainShadows,\n    mapMode2D: options.mapMode2D,\n    requestRenderMode: options.requestRenderMode,\n    maximumRenderTimeChange: options.maximumRenderTimeChange\n  });\n  var dataSourceCollection = options.dataSources;\n  var destroyDataSourceCollection = false;\n\n  if (!defined(dataSourceCollection)) {\n    dataSourceCollection = new DataSourceCollection();\n    destroyDataSourceCollection = true;\n  }\n\n  var scene = cesiumWidget.scene;\n  var dataSourceDisplay = new DataSourceDisplay({\n    scene: scene,\n    dataSourceCollection: dataSourceCollection\n  });\n  var eventHelper = new EventHelper();\n  eventHelper.add(clock.onTick, Viewer.prototype._onTick, this);\n  eventHelper.add(scene.morphStart, Viewer.prototype._clearTrackedObject, this); // Selection Indicator\n\n  var selectionIndicator;\n\n  if (!defined(options.selectionIndicator) || options.selectionIndicator !== false) {\n    var selectionIndicatorContainer = document.createElement(\"div\");\n    selectionIndicatorContainer.className = \"cesium-viewer-selectionIndicatorContainer\";\n    viewerContainer.appendChild(selectionIndicatorContainer);\n    selectionIndicator = new SelectionIndicator(selectionIndicatorContainer, scene);\n  } // Info Box\n\n\n  var infoBox;\n\n  if (!defined(options.infoBox) || options.infoBox !== false) {\n    var infoBoxContainer = document.createElement(\"div\");\n    infoBoxContainer.className = \"cesium-viewer-infoBoxContainer\";\n    viewerContainer.appendChild(infoBoxContainer);\n    infoBox = new InfoBox(infoBoxContainer);\n    var infoBoxViewModel = infoBox.viewModel;\n    eventHelper.add(infoBoxViewModel.cameraClicked, Viewer.prototype._onInfoBoxCameraClicked, this);\n    eventHelper.add(infoBoxViewModel.closeClicked, Viewer.prototype._onInfoBoxClockClicked, this);\n  } // Main Toolbar\n\n\n  var toolbar = document.createElement(\"div\");\n  toolbar.className = \"cesium-viewer-toolbar\";\n  viewerContainer.appendChild(toolbar); // Geocoder\n\n  var geocoder;\n\n  if (!defined(options.geocoder) || options.geocoder !== false) {\n    var geocoderContainer = document.createElement(\"div\");\n    geocoderContainer.className = \"cesium-viewer-geocoderContainer\";\n    toolbar.appendChild(geocoderContainer);\n    var geocoderService;\n\n    if (defined(options.geocoder) && typeof options.geocoder !== \"boolean\") {\n      geocoderService = Array.isArray(options.geocoder) ? options.geocoder : [options.geocoder];\n    }\n\n    geocoder = new Geocoder({\n      container: geocoderContainer,\n      geocoderServices: geocoderService,\n      scene: scene\n    }); // Subscribe to search so that we can clear the trackedEntity when it is clicked.\n\n    eventHelper.add(geocoder.viewModel.search.beforeExecute, Viewer.prototype._clearObjects, this);\n  } // HomeButton\n\n\n  var homeButton;\n\n  if (!defined(options.homeButton) || options.homeButton !== false) {\n    homeButton = new HomeButton(toolbar, scene);\n\n    if (defined(geocoder)) {\n      eventHelper.add(homeButton.viewModel.command.afterExecute, function () {\n        var viewModel = geocoder.viewModel;\n        viewModel.searchText = \"\";\n\n        if (viewModel.isSearchInProgress) {\n          viewModel.search();\n        }\n      });\n    } // Subscribe to the home button beforeExecute event so that we can clear the trackedEntity.\n\n\n    eventHelper.add(homeButton.viewModel.command.beforeExecute, Viewer.prototype._clearTrackedObject, this);\n  } // SceneModePicker\n  // By default, we silently disable the scene mode picker if scene3DOnly is true,\n  // but if sceneModePicker is explicitly set to true, throw an error.\n  //>>includeStart('debug', pragmas.debug);\n\n\n  if (options.sceneModePicker === true && scene3DOnly) {\n    throw new DeveloperError(\"options.sceneModePicker is not available when options.scene3DOnly is set to true.\");\n  } //>>includeEnd('debug');\n\n\n  var sceneModePicker;\n\n  if (!scene3DOnly && (!defined(options.sceneModePicker) || options.sceneModePicker !== false)) {\n    sceneModePicker = new SceneModePicker(toolbar, scene);\n  }\n\n  var projectionPicker;\n\n  if (options.projectionPicker) {\n    projectionPicker = new ProjectionPicker(toolbar, scene);\n  } // BaseLayerPicker\n\n\n  var baseLayerPicker;\n  var baseLayerPickerDropDown;\n\n  if (createBaseLayerPicker) {\n    var imageryProviderViewModels = defaultValue(options.imageryProviderViewModels, createDefaultImageryProviderViewModels());\n    var terrainProviderViewModels = defaultValue(options.terrainProviderViewModels, createDefaultTerrainProviderViewModels());\n    baseLayerPicker = new BaseLayerPicker(toolbar, {\n      globe: scene.globe,\n      imageryProviderViewModels: imageryProviderViewModels,\n      selectedImageryProviderViewModel: options.selectedImageryProviderViewModel,\n      terrainProviderViewModels: terrainProviderViewModels,\n      selectedTerrainProviderViewModel: options.selectedTerrainProviderViewModel\n    }); //Grab the dropdown for resize code.\n\n    var elements = toolbar.getElementsByClassName(\"cesium-baseLayerPicker-dropDown\");\n    baseLayerPickerDropDown = elements[0];\n  } // These need to be set after the BaseLayerPicker is created in order to take effect\n\n\n  if (defined(options.imageryProvider) && options.imageryProvider !== false) {\n    if (createBaseLayerPicker) {\n      baseLayerPicker.viewModel.selectedImagery = undefined;\n    }\n\n    scene.imageryLayers.removeAll();\n    scene.imageryLayers.addImageryProvider(options.imageryProvider);\n  }\n\n  if (defined(options.terrainProvider)) {\n    if (createBaseLayerPicker) {\n      baseLayerPicker.viewModel.selectedTerrain = undefined;\n    }\n\n    scene.terrainProvider = options.terrainProvider;\n  } // Navigation Help Button\n\n\n  var navigationHelpButton;\n\n  if (!defined(options.navigationHelpButton) || options.navigationHelpButton !== false) {\n    var showNavHelp = true;\n\n    try {\n      //window.localStorage is null if disabled in Firefox or undefined in browsers with implementation\n      if (defined(window.localStorage)) {\n        var hasSeenNavHelp = window.localStorage.getItem(\"cesium-hasSeenNavHelp\");\n\n        if (defined(hasSeenNavHelp) && Boolean(hasSeenNavHelp)) {\n          showNavHelp = false;\n        } else {\n          window.localStorage.setItem(\"cesium-hasSeenNavHelp\", \"true\");\n        }\n      }\n    } catch (e) {//Accessing window.localStorage throws if disabled in Chrome\n      //window.localStorage.setItem throws if in Safari private browsing mode or in any browser if we are over quota.\n    }\n\n    navigationHelpButton = new NavigationHelpButton({\n      container: toolbar,\n      instructionsInitiallyVisible: defaultValue(options.navigationInstructionsInitiallyVisible, showNavHelp)\n    });\n  } // Animation\n\n\n  var animation;\n\n  if (!defined(options.animation) || options.animation !== false) {\n    var animationContainer = document.createElement(\"div\");\n    animationContainer.className = \"cesium-viewer-animationContainer\";\n    viewerContainer.appendChild(animationContainer);\n    animation = new Animation(animationContainer, new AnimationViewModel(clockViewModel));\n  } // Timeline\n\n\n  var timeline;\n\n  if (!defined(options.timeline) || options.timeline !== false) {\n    var timelineContainer = document.createElement(\"div\");\n    timelineContainer.className = \"cesium-viewer-timelineContainer\";\n    viewerContainer.appendChild(timelineContainer);\n    timeline = new Timeline(timelineContainer, clock);\n    timeline.addEventListener(\"settime\", onTimelineScrubfunction, false);\n    timeline.zoomTo(clock.startTime, clock.stopTime);\n  } // Fullscreen\n\n\n  var fullscreenButton;\n  var fullscreenSubscription;\n  var fullscreenContainer;\n\n  if (!defined(options.fullscreenButton) || options.fullscreenButton !== false) {\n    fullscreenContainer = document.createElement(\"div\");\n    fullscreenContainer.className = \"cesium-viewer-fullscreenContainer\";\n    viewerContainer.appendChild(fullscreenContainer);\n    fullscreenButton = new FullscreenButton(fullscreenContainer, options.fullscreenElement); //Subscribe to fullscreenButton.viewModel.isFullscreenEnabled so\n    //that we can hide/show the button as well as size the timeline.\n\n    fullscreenSubscription = subscribeAndEvaluate(fullscreenButton.viewModel, \"isFullscreenEnabled\", function (isFullscreenEnabled) {\n      fullscreenContainer.style.display = isFullscreenEnabled ? \"block\" : \"none\";\n\n      if (defined(timeline)) {\n        timeline.container.style.right = fullscreenContainer.clientWidth + \"px\";\n        timeline.resize();\n      }\n    });\n  } // VR\n\n\n  var vrButton;\n  var vrSubscription;\n  var vrModeSubscription;\n\n  if (options.vrButton) {\n    var vrContainer = document.createElement(\"div\");\n    vrContainer.className = \"cesium-viewer-vrContainer\";\n    viewerContainer.appendChild(vrContainer);\n    vrButton = new VRButton(vrContainer, scene, options.fullScreenElement);\n    vrSubscription = subscribeAndEvaluate(vrButton.viewModel, \"isVREnabled\", function (isVREnabled) {\n      vrContainer.style.display = isVREnabled ? \"block\" : \"none\";\n\n      if (defined(fullscreenButton)) {\n        vrContainer.style.right = fullscreenContainer.clientWidth + \"px\";\n      }\n\n      if (defined(timeline)) {\n        timeline.container.style.right = vrContainer.clientWidth + \"px\";\n        timeline.resize();\n      }\n    });\n    vrModeSubscription = subscribeAndEvaluate(vrButton.viewModel, \"isVRMode\", function (isVRMode) {\n      enableVRUI(that, isVRMode);\n    });\n  } //Assign all properties to this instance.  No \"this\" assignments should\n  //take place above this line.\n\n\n  this._baseLayerPickerDropDown = baseLayerPickerDropDown;\n  this._fullscreenSubscription = fullscreenSubscription;\n  this._vrSubscription = vrSubscription;\n  this._vrModeSubscription = vrModeSubscription;\n  this._dataSourceChangedListeners = {};\n  this._automaticallyTrackDataSourceClocks = defaultValue(options.automaticallyTrackDataSourceClocks, true);\n  this._container = container;\n  this._bottomContainer = bottomContainer;\n  this._element = viewerContainer;\n  this._cesiumWidget = cesiumWidget;\n  this._selectionIndicator = selectionIndicator;\n  this._infoBox = infoBox;\n  this._dataSourceCollection = dataSourceCollection;\n  this._destroyDataSourceCollection = destroyDataSourceCollection;\n  this._dataSourceDisplay = dataSourceDisplay;\n  this._clockViewModel = clockViewModel;\n  this._destroyClockViewModel = destroyClockViewModel;\n  this._toolbar = toolbar;\n  this._homeButton = homeButton;\n  this._sceneModePicker = sceneModePicker;\n  this._projectionPicker = projectionPicker;\n  this._baseLayerPicker = baseLayerPicker;\n  this._navigationHelpButton = navigationHelpButton;\n  this._animation = animation;\n  this._timeline = timeline;\n  this._fullscreenButton = fullscreenButton;\n  this._vrButton = vrButton;\n  this._geocoder = geocoder;\n  this._eventHelper = eventHelper;\n  this._lastWidth = 0;\n  this._lastHeight = 0;\n  this._allowDataSourcesToSuspendAnimation = true;\n  this._entityView = undefined;\n  this._enableInfoOrSelection = defined(infoBox) || defined(selectionIndicator);\n  this._clockTrackedDataSource = undefined;\n  this._trackedEntity = undefined;\n  this._needTrackedEntityUpdate = false;\n  this._selectedEntity = undefined;\n  this._clockTrackedDataSource = undefined;\n  this._zoomIsFlight = false;\n  this._zoomTarget = undefined;\n  this._zoomPromise = undefined;\n  this._zoomOptions = undefined;\n  this._selectedEntityChanged = new Event();\n  this._trackedEntityChanged = new Event();\n  knockout.track(this, [\"_trackedEntity\", \"_selectedEntity\", \"_clockTrackedDataSource\"]); //Listen to data source events in order to track clock changes.\n\n  eventHelper.add(dataSourceCollection.dataSourceAdded, Viewer.prototype._onDataSourceAdded, this);\n  eventHelper.add(dataSourceCollection.dataSourceRemoved, Viewer.prototype._onDataSourceRemoved, this); // Prior to each render, check if anything needs to be resized.\n\n  eventHelper.add(scene.postUpdate, Viewer.prototype.resize, this);\n  eventHelper.add(scene.postRender, Viewer.prototype._postRender, this); // We need to subscribe to the data sources and collections so that we can clear the\n  // tracked object when it is removed from the scene.\n  // Subscribe to current data sources\n\n  var dataSourceLength = dataSourceCollection.length;\n\n  for (var i = 0; i < dataSourceLength; i++) {\n    this._dataSourceAdded(dataSourceCollection, dataSourceCollection.get(i));\n  }\n\n  this._dataSourceAdded(undefined, dataSourceDisplay.defaultDataSource); // Hook up events so that we can subscribe to future sources.\n\n\n  eventHelper.add(dataSourceCollection.dataSourceAdded, Viewer.prototype._dataSourceAdded, this);\n  eventHelper.add(dataSourceCollection.dataSourceRemoved, Viewer.prototype._dataSourceRemoved, this); // Subscribe to left clicks and zoom to the picked object.\n\n  function pickAndTrackObject(e) {\n    var entity = pickEntity(that, e);\n\n    if (defined(entity)) {\n      //Only track the entity if it has a valid position at the current time.\n      if (Property.getValueOrUndefined(entity.position, that.clock.currentTime)) {\n        that.trackedEntity = entity;\n      } else {\n        that.zoomTo(entity);\n      }\n    } else if (defined(that.trackedEntity)) {\n      that.trackedEntity = undefined;\n    }\n  }\n\n  function pickAndSelectObject(e) {\n    that.selectedEntity = pickEntity(that, e);\n  }\n\n  cesiumWidget.screenSpaceEventHandler.setInputAction(pickAndSelectObject, ScreenSpaceEventType.LEFT_CLICK);\n  cesiumWidget.screenSpaceEventHandler.setInputAction(pickAndTrackObject, ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n}\n\nObject.defineProperties(Viewer.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof Viewer.prototype\n   * @type {Element}\n   * @readonly\n   */\n  container: {\n    get: function () {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the DOM element for the area at the bottom of the window containing the\n   * {@link CreditDisplay} and potentially other things.\n   * @memberof Viewer.prototype\n   * @type {Element}\n   * @readonly\n   */\n  bottomContainer: {\n    get: function () {\n      return this._bottomContainer;\n    }\n  },\n\n  /**\n   * Gets the CesiumWidget.\n   * @memberof Viewer.prototype\n   * @type {CesiumWidget}\n   * @readonly\n   */\n  cesiumWidget: {\n    get: function () {\n      return this._cesiumWidget;\n    }\n  },\n\n  /**\n   * Gets the selection indicator.\n   * @memberof Viewer.prototype\n   * @type {SelectionIndicator}\n   * @readonly\n   */\n  selectionIndicator: {\n    get: function () {\n      return this._selectionIndicator;\n    }\n  },\n\n  /**\n   * Gets the info box.\n   * @memberof Viewer.prototype\n   * @type {InfoBox}\n   * @readonly\n   */\n  infoBox: {\n    get: function () {\n      return this._infoBox;\n    }\n  },\n\n  /**\n   * Gets the Geocoder.\n   * @memberof Viewer.prototype\n   * @type {Geocoder}\n   * @readonly\n   */\n  geocoder: {\n    get: function () {\n      return this._geocoder;\n    }\n  },\n\n  /**\n   * Gets the HomeButton.\n   * @memberof Viewer.prototype\n   * @type {HomeButton}\n   * @readonly\n   */\n  homeButton: {\n    get: function () {\n      return this._homeButton;\n    }\n  },\n\n  /**\n   * Gets the SceneModePicker.\n   * @memberof Viewer.prototype\n   * @type {SceneModePicker}\n   * @readonly\n   */\n  sceneModePicker: {\n    get: function () {\n      return this._sceneModePicker;\n    }\n  },\n\n  /**\n   * Gets the ProjectionPicker.\n   * @memberof Viewer.prototype\n   * @type {ProjectionPicker}\n   * @readonly\n   */\n  projectionPicker: {\n    get: function () {\n      return this._projectionPicker;\n    }\n  },\n\n  /**\n   * Gets the BaseLayerPicker.\n   * @memberof Viewer.prototype\n   * @type {BaseLayerPicker}\n   * @readonly\n   */\n  baseLayerPicker: {\n    get: function () {\n      return this._baseLayerPicker;\n    }\n  },\n\n  /**\n   * Gets the NavigationHelpButton.\n   * @memberof Viewer.prototype\n   * @type {NavigationHelpButton}\n   * @readonly\n   */\n  navigationHelpButton: {\n    get: function () {\n      return this._navigationHelpButton;\n    }\n  },\n\n  /**\n   * Gets the Animation widget.\n   * @memberof Viewer.prototype\n   * @type {Animation}\n   * @readonly\n   */\n  animation: {\n    get: function () {\n      return this._animation;\n    }\n  },\n\n  /**\n   * Gets the Timeline widget.\n   * @memberof Viewer.prototype\n   * @type {Timeline}\n   * @readonly\n   */\n  timeline: {\n    get: function () {\n      return this._timeline;\n    }\n  },\n\n  /**\n   * Gets the FullscreenButton.\n   * @memberof Viewer.prototype\n   * @type {FullscreenButton}\n   * @readonly\n   */\n  fullscreenButton: {\n    get: function () {\n      return this._fullscreenButton;\n    }\n  },\n\n  /**\n   * Gets the VRButton.\n   * @memberof Viewer.prototype\n   * @type {VRButton}\n   * @readonly\n   */\n  vrButton: {\n    get: function () {\n      return this._vrButton;\n    }\n  },\n\n  /**\n   * Gets the display used for {@link DataSource} visualization.\n   * @memberof Viewer.prototype\n   * @type {DataSourceDisplay}\n   * @readonly\n   */\n  dataSourceDisplay: {\n    get: function () {\n      return this._dataSourceDisplay;\n    }\n  },\n\n  /**\n   * Gets the collection of entities not tied to a particular data source.\n   * This is a shortcut to [dataSourceDisplay.defaultDataSource.entities]{@link Viewer#dataSourceDisplay}.\n   * @memberof Viewer.prototype\n   * @type {EntityCollection}\n   * @readonly\n   */\n  entities: {\n    get: function () {\n      return this._dataSourceDisplay.defaultDataSource.entities;\n    }\n  },\n\n  /**\n   * Gets the set of {@link DataSource} instances to be visualized.\n   * @memberof Viewer.prototype\n   * @type {DataSourceCollection}\n   * @readonly\n   */\n  dataSources: {\n    get: function () {\n      return this._dataSourceCollection;\n    }\n  },\n\n  /**\n   * Gets the canvas.\n   * @memberof Viewer.prototype\n   * @type {HTMLCanvasElement}\n   * @readonly\n   */\n  canvas: {\n    get: function () {\n      return this._cesiumWidget.canvas;\n    }\n  },\n\n  /**\n   * Gets the scene.\n   * @memberof Viewer.prototype\n   * @type {Scene}\n   * @readonly\n   */\n  scene: {\n    get: function () {\n      return this._cesiumWidget.scene;\n    }\n  },\n\n  /**\n   * Determines if shadows are cast by light sources.\n   * @memberof Viewer.prototype\n   * @type {Boolean}\n   */\n  shadows: {\n    get: function () {\n      return this.scene.shadowMap.enabled;\n    },\n    set: function (value) {\n      this.scene.shadowMap.enabled = value;\n    }\n  },\n\n  /**\n   * Determines if the terrain casts or shadows from light sources.\n   * @memberof Viewer.prototype\n   * @type {ShadowMode}\n   */\n  terrainShadows: {\n    get: function () {\n      return this.scene.globe.shadows;\n    },\n    set: function (value) {\n      this.scene.globe.shadows = value;\n    }\n  },\n\n  /**\n   * Get the scene's shadow map\n   * @memberof Viewer.prototype\n   * @type {ShadowMap}\n   * @readonly\n   */\n  shadowMap: {\n    get: function () {\n      return this.scene.shadowMap;\n    }\n  },\n\n  /**\n   * Gets the collection of image layers that will be rendered on the globe.\n   * @memberof Viewer.prototype\n   *\n   * @type {ImageryLayerCollection}\n   * @readonly\n   */\n  imageryLayers: {\n    get: function () {\n      return this.scene.imageryLayers;\n    }\n  },\n\n  /**\n   * The terrain provider providing surface geometry for the globe.\n   * @memberof Viewer.prototype\n   *\n   * @type {TerrainProvider}\n   */\n  terrainProvider: {\n    get: function () {\n      return this.scene.terrainProvider;\n    },\n    set: function (terrainProvider) {\n      this.scene.terrainProvider = terrainProvider;\n    }\n  },\n\n  /**\n   * Gets the camera.\n   * @memberof Viewer.prototype\n   *\n   * @type {Camera}\n   * @readonly\n   */\n  camera: {\n    get: function () {\n      return this.scene.camera;\n    }\n  },\n\n  /**\n   * Gets the post-process stages.\n   * @memberof Viewer.prototype\n   *\n   * @type {PostProcessStageCollection}\n   * @readonly\n   */\n  postProcessStages: {\n    get: function () {\n      return this.scene.postProcessStages;\n    }\n  },\n\n  /**\n   * Gets the clock.\n   * @memberof Viewer.prototype\n   * @type {Clock}\n   * @readonly\n   */\n  clock: {\n    get: function () {\n      return this._clockViewModel.clock;\n    }\n  },\n\n  /**\n   * Gets the clock view model.\n   * @memberof Viewer.prototype\n   * @type {ClockViewModel}\n   * @readonly\n   */\n  clockViewModel: {\n    get: function () {\n      return this._clockViewModel;\n    }\n  },\n\n  /**\n   * Gets the screen space event handler.\n   * @memberof Viewer.prototype\n   * @type {ScreenSpaceEventHandler}\n   * @readonly\n   */\n  screenSpaceEventHandler: {\n    get: function () {\n      return this._cesiumWidget.screenSpaceEventHandler;\n    }\n  },\n\n  /**\n   * Gets or sets the target frame rate of the widget when <code>useDefaultRenderLoop</code>\n   * is true. If undefined, the browser's {@link requestAnimationFrame} implementation\n   * determines the frame rate.  If defined, this value must be greater than 0.  A value higher\n   * than the underlying requestAnimationFrame implementation will have no effect.\n   * @memberof Viewer.prototype\n   *\n   * @type {Number}\n   */\n  targetFrameRate: {\n    get: function () {\n      return this._cesiumWidget.targetFrameRate;\n    },\n    set: function (value) {\n      this._cesiumWidget.targetFrameRate = value;\n    }\n  },\n\n  /**\n   * Gets or sets whether or not this widget should control the render loop.\n   * If set to true the widget will use {@link requestAnimationFrame} to\n   * perform rendering and resizing of the widget, as well as drive the\n   * simulation clock. If set to false, you must manually call the\n   * <code>resize</code>, <code>render</code> methods\n   * as part of a custom render loop.  If an error occurs during rendering, {@link Scene}'s\n   * <code>renderError</code> event will be raised and this property\n   * will be set to false.  It must be set back to true to continue rendering\n   * after the error.\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   */\n  useDefaultRenderLoop: {\n    get: function () {\n      return this._cesiumWidget.useDefaultRenderLoop;\n    },\n    set: function (value) {\n      this._cesiumWidget.useDefaultRenderLoop = value;\n    }\n  },\n\n  /**\n   * Gets or sets a scaling factor for rendering resolution.  Values less than 1.0 can improve\n   * performance on less powerful devices while values greater than 1.0 will render at a higher\n   * resolution and then scale down, resulting in improved visual fidelity.\n   * For example, if the widget is laid out at a size of 640x480, setting this value to 0.5\n   * will cause the scene to be rendered at 320x240 and then scaled up while setting\n   * it to 2.0 will cause the scene to be rendered at 1280x960 and then scaled down.\n   * @memberof Viewer.prototype\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  resolutionScale: {\n    get: function () {\n      return this._cesiumWidget.resolutionScale;\n    },\n    set: function (value) {\n      this._cesiumWidget.resolutionScale = value;\n    }\n  },\n\n  /**\n   * Boolean flag indicating if the browser's recommended resolution is used.\n   * If true, the browser's device pixel ratio is ignored and 1.0 is used instead,\n   * effectively rendering based on CSS pixels instead of device pixels. This can improve\n   * performance on less powerful devices that have high pixel density. When false, rendering\n   * will be in device pixels. {@link Viewer#resolutionScale} will still take effect whether\n   * this flag is true or false.\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  useBrowserRecommendedResolution: {\n    get: function () {\n      return this._cesiumWidget.useBrowserRecommendedResolution;\n    },\n    set: function (value) {\n      this._cesiumWidget.useBrowserRecommendedResolution = value;\n    }\n  },\n\n  /**\n   * Gets or sets whether or not data sources can temporarily pause\n   * animation in order to avoid showing an incomplete picture to the user.\n   * For example, if asynchronous primitives are being processed in the\n   * background, the clock will not advance until the geometry is ready.\n   *\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   */\n  allowDataSourcesToSuspendAnimation: {\n    get: function () {\n      return this._allowDataSourcesToSuspendAnimation;\n    },\n    set: function (value) {\n      this._allowDataSourcesToSuspendAnimation = value;\n    }\n  },\n\n  /**\n   * Gets or sets the Entity instance currently being tracked by the camera.\n   * @memberof Viewer.prototype\n   * @type {Entity | undefined}\n   */\n  trackedEntity: {\n    get: function () {\n      return this._trackedEntity;\n    },\n    set: function (value) {\n      if (this._trackedEntity !== value) {\n        this._trackedEntity = value; //Cancel any pending zoom\n\n        cancelZoom(this);\n        var scene = this.scene;\n        var sceneMode = scene.mode; //Stop tracking\n\n        if (!defined(value) || !defined(value.position)) {\n          this._needTrackedEntityUpdate = false;\n\n          if (sceneMode === SceneMode.COLUMBUS_VIEW || sceneMode === SceneMode.SCENE2D) {\n            scene.screenSpaceCameraController.enableTranslate = true;\n          }\n\n          if (sceneMode === SceneMode.COLUMBUS_VIEW || sceneMode === SceneMode.SCENE3D) {\n            scene.screenSpaceCameraController.enableTilt = true;\n          }\n\n          this._entityView = undefined;\n          this.camera.lookAtTransform(Matrix4.IDENTITY);\n        } else {\n          //We can't start tracking immediately, so we set a flag and start tracking\n          //when the bounding sphere is ready (most likely next frame).\n          this._needTrackedEntityUpdate = true;\n        }\n\n        this._trackedEntityChanged.raiseEvent(value);\n\n        this.scene.requestRender();\n      }\n    }\n  },\n\n  /**\n   * Gets or sets the object instance for which to display a selection indicator.\n   *\n   * If a user interactively picks a Cesium3DTilesFeature instance, then this property\n   * will contain a transient Entity instance with a property named \"feature\" that is\n   * the instance that was picked.\n   * @memberof Viewer.prototype\n   * @type {Entity | undefined}\n   */\n  selectedEntity: {\n    get: function () {\n      return this._selectedEntity;\n    },\n    set: function (value) {\n      if (this._selectedEntity !== value) {\n        this._selectedEntity = value;\n        var selectionIndicatorViewModel = defined(this._selectionIndicator) ? this._selectionIndicator.viewModel : undefined;\n\n        if (defined(value)) {\n          if (defined(selectionIndicatorViewModel)) {\n            selectionIndicatorViewModel.animateAppear();\n          }\n        } else if (defined(selectionIndicatorViewModel)) {\n          // Leave the info text in place here, it is needed during the exit animation.\n          selectionIndicatorViewModel.animateDepart();\n        }\n\n        this._selectedEntityChanged.raiseEvent(value);\n      }\n    }\n  },\n\n  /**\n   * Gets the event that is raised when the selected entity changes.\n   * @memberof Viewer.prototype\n   * @type {Event}\n   * @readonly\n   */\n  selectedEntityChanged: {\n    get: function () {\n      return this._selectedEntityChanged;\n    }\n  },\n\n  /**\n   * Gets the event that is raised when the tracked entity changes.\n   * @memberof Viewer.prototype\n   * @type {Event}\n   * @readonly\n   */\n  trackedEntityChanged: {\n    get: function () {\n      return this._trackedEntityChanged;\n    }\n  },\n\n  /**\n   * Gets or sets the data source to track with the viewer's clock.\n   * @memberof Viewer.prototype\n   * @type {DataSource}\n   */\n  clockTrackedDataSource: {\n    get: function () {\n      return this._clockTrackedDataSource;\n    },\n    set: function (value) {\n      if (this._clockTrackedDataSource !== value) {\n        this._clockTrackedDataSource = value;\n        trackDataSourceClock(this._timeline, this.clock, value);\n      }\n    }\n  }\n});\n/**\n * Extends the base viewer functionality with the provided mixin.\n * A mixin may add additional properties, functions, or other behavior\n * to the provided viewer instance.\n *\n * @param {Viewer.ViewerMixin} mixin The Viewer mixin to add to this instance.\n * @param {Object} [options] The options object to be passed to the mixin function.\n *\n * @see viewerDragDropMixin\n */\n\nViewer.prototype.extend = function (mixin, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(mixin)) {\n    throw new DeveloperError(\"mixin is required.\");\n  } //>>includeEnd('debug')\n\n\n  mixin(this, options);\n};\n/**\n * Resizes the widget to match the container size.\n * This function is called automatically as needed unless\n * <code>useDefaultRenderLoop</code> is set to false.\n */\n\n\nViewer.prototype.resize = function () {\n  var cesiumWidget = this._cesiumWidget;\n  var container = this._container;\n  var width = container.clientWidth;\n  var height = container.clientHeight;\n  var animationExists = defined(this._animation);\n  var timelineExists = defined(this._timeline);\n  cesiumWidget.resize();\n\n  if (width === this._lastWidth && height === this._lastHeight) {\n    return;\n  }\n\n  var panelMaxHeight = height - 125;\n  var baseLayerPickerDropDown = this._baseLayerPickerDropDown;\n\n  if (defined(baseLayerPickerDropDown)) {\n    baseLayerPickerDropDown.style.maxHeight = panelMaxHeight + \"px\";\n  }\n\n  if (defined(this._geocoder)) {\n    var geocoderSuggestions = this._geocoder.searchSuggestionsContainer;\n    geocoderSuggestions.style.maxHeight = panelMaxHeight + \"px\";\n  }\n\n  if (defined(this._infoBox)) {\n    this._infoBox.viewModel.maxHeight = panelMaxHeight;\n  }\n\n  var timeline = this._timeline;\n  var animationContainer;\n  var animationWidth = 0;\n  var creditLeft = 0;\n  var creditBottom = 0;\n\n  if (animationExists && window.getComputedStyle(this._animation.container).visibility !== \"hidden\") {\n    var lastWidth = this._lastWidth;\n    animationContainer = this._animation.container;\n\n    if (width > 900) {\n      animationWidth = 169;\n\n      if (lastWidth <= 900) {\n        animationContainer.style.width = \"169px\";\n        animationContainer.style.height = \"112px\";\n\n        this._animation.resize();\n      }\n    } else if (width >= 600) {\n      animationWidth = 136;\n\n      if (lastWidth < 600 || lastWidth > 900) {\n        animationContainer.style.width = \"136px\";\n        animationContainer.style.height = \"90px\";\n\n        this._animation.resize();\n      }\n    } else {\n      animationWidth = 106;\n\n      if (lastWidth > 600 || lastWidth === 0) {\n        animationContainer.style.width = \"106px\";\n        animationContainer.style.height = \"70px\";\n\n        this._animation.resize();\n      }\n    }\n\n    creditLeft = animationWidth + 5;\n  }\n\n  if (timelineExists && window.getComputedStyle(this._timeline.container).visibility !== \"hidden\") {\n    var fullscreenButton = this._fullscreenButton;\n    var vrButton = this._vrButton;\n    var timelineContainer = timeline.container;\n    var timelineStyle = timelineContainer.style;\n    creditBottom = timelineContainer.clientHeight + 3;\n    timelineStyle.left = animationWidth + \"px\";\n    var pixels = 0;\n\n    if (defined(fullscreenButton)) {\n      pixels += fullscreenButton.container.clientWidth;\n    }\n\n    if (defined(vrButton)) {\n      pixels += vrButton.container.clientWidth;\n    }\n\n    timelineStyle.right = pixels + \"px\";\n    timeline.resize();\n  }\n\n  this._bottomContainer.style.left = creditLeft + \"px\";\n  this._bottomContainer.style.bottom = creditBottom + \"px\";\n  this._lastWidth = width;\n  this._lastHeight = height;\n};\n/**\n * This forces the widget to re-think its layout, including\n * widget sizes and credit placement.\n */\n\n\nViewer.prototype.forceResize = function () {\n  this._lastWidth = 0;\n  this.resize();\n};\n/**\n * Renders the scene.  This function is called automatically\n * unless <code>useDefaultRenderLoop</code> is set to false;\n */\n\n\nViewer.prototype.render = function () {\n  this._cesiumWidget.render();\n};\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\n\nViewer.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nViewer.prototype.destroy = function () {\n  var i;\n  this.screenSpaceEventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n  this.screenSpaceEventHandler.removeInputAction(ScreenSpaceEventType.LEFT_DOUBLE_CLICK); // Unsubscribe from data sources\n\n  var dataSources = this.dataSources;\n  var dataSourceLength = dataSources.length;\n\n  for (i = 0; i < dataSourceLength; i++) {\n    this._dataSourceRemoved(dataSources, dataSources.get(i));\n  }\n\n  this._dataSourceRemoved(undefined, this._dataSourceDisplay.defaultDataSource);\n\n  this._container.removeChild(this._element);\n\n  this._element.removeChild(this._toolbar);\n\n  this._eventHelper.removeAll();\n\n  if (defined(this._geocoder)) {\n    this._geocoder = this._geocoder.destroy();\n  }\n\n  if (defined(this._homeButton)) {\n    this._homeButton = this._homeButton.destroy();\n  }\n\n  if (defined(this._sceneModePicker)) {\n    this._sceneModePicker = this._sceneModePicker.destroy();\n  }\n\n  if (defined(this._projectionPicker)) {\n    this._projectionPicker = this._projectionPicker.destroy();\n  }\n\n  if (defined(this._baseLayerPicker)) {\n    this._baseLayerPicker = this._baseLayerPicker.destroy();\n  }\n\n  if (defined(this._animation)) {\n    this._element.removeChild(this._animation.container);\n\n    this._animation = this._animation.destroy();\n  }\n\n  if (defined(this._timeline)) {\n    this._timeline.removeEventListener(\"settime\", onTimelineScrubfunction, false);\n\n    this._element.removeChild(this._timeline.container);\n\n    this._timeline = this._timeline.destroy();\n  }\n\n  if (defined(this._fullscreenButton)) {\n    this._fullscreenSubscription.dispose();\n\n    this._element.removeChild(this._fullscreenButton.container);\n\n    this._fullscreenButton = this._fullscreenButton.destroy();\n  }\n\n  if (defined(this._vrButton)) {\n    this._vrSubscription.dispose();\n\n    this._vrModeSubscription.dispose();\n\n    this._element.removeChild(this._vrButton.container);\n\n    this._vrButton = this._vrButton.destroy();\n  }\n\n  if (defined(this._infoBox)) {\n    this._element.removeChild(this._infoBox.container);\n\n    this._infoBox = this._infoBox.destroy();\n  }\n\n  if (defined(this._selectionIndicator)) {\n    this._element.removeChild(this._selectionIndicator.container);\n\n    this._selectionIndicator = this._selectionIndicator.destroy();\n  }\n\n  if (this._destroyClockViewModel) {\n    this._clockViewModel = this._clockViewModel.destroy();\n  }\n\n  this._dataSourceDisplay = this._dataSourceDisplay.destroy();\n  this._cesiumWidget = this._cesiumWidget.destroy();\n\n  if (this._destroyDataSourceCollection) {\n    this._dataSourceCollection = this._dataSourceCollection.destroy();\n  }\n\n  return destroyObject(this);\n};\n/**\n * @private\n */\n\n\nViewer.prototype._dataSourceAdded = function (dataSourceCollection, dataSource) {\n  var entityCollection = dataSource.entities;\n  entityCollection.collectionChanged.addEventListener(Viewer.prototype._onEntityCollectionChanged, this);\n};\n/**\n * @private\n */\n\n\nViewer.prototype._dataSourceRemoved = function (dataSourceCollection, dataSource) {\n  var entityCollection = dataSource.entities;\n  entityCollection.collectionChanged.removeEventListener(Viewer.prototype._onEntityCollectionChanged, this);\n\n  if (defined(this.trackedEntity)) {\n    if (entityCollection.getById(this.trackedEntity.id) === this.trackedEntity) {\n      this.trackedEntity = undefined;\n    }\n  }\n\n  if (defined(this.selectedEntity)) {\n    if (entityCollection.getById(this.selectedEntity.id) === this.selectedEntity) {\n      this.selectedEntity = undefined;\n    }\n  }\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onTick = function (clock) {\n  var time = clock.currentTime;\n\n  var isUpdated = this._dataSourceDisplay.update(time);\n\n  if (this._allowDataSourcesToSuspendAnimation) {\n    this._clockViewModel.canAnimate = isUpdated;\n  }\n\n  var entityView = this._entityView;\n\n  if (defined(entityView)) {\n    var trackedEntity = this._trackedEntity;\n\n    var trackedState = this._dataSourceDisplay.getBoundingSphere(trackedEntity, false, boundingSphereScratch);\n\n    if (trackedState === BoundingSphereState.DONE) {\n      entityView.update(time, boundingSphereScratch);\n    }\n  }\n\n  var position;\n  var enableCamera = false;\n  var selectedEntity = this.selectedEntity;\n\n  var showSelection = defined(selectedEntity) && this._enableInfoOrSelection;\n\n  if (showSelection && selectedEntity.isShowing && selectedEntity.isAvailable(time)) {\n    var state = this._dataSourceDisplay.getBoundingSphere(selectedEntity, true, boundingSphereScratch);\n\n    if (state !== BoundingSphereState.FAILED) {\n      position = boundingSphereScratch.center;\n    } else if (defined(selectedEntity.position)) {\n      position = selectedEntity.position.getValue(time, position);\n    }\n\n    enableCamera = defined(position);\n  }\n\n  var selectionIndicatorViewModel = defined(this._selectionIndicator) ? this._selectionIndicator.viewModel : undefined;\n\n  if (defined(selectionIndicatorViewModel)) {\n    selectionIndicatorViewModel.position = Cartesian3.clone(position, selectionIndicatorViewModel.position);\n    selectionIndicatorViewModel.showSelection = showSelection && enableCamera;\n    selectionIndicatorViewModel.update();\n  }\n\n  var infoBoxViewModel = defined(this._infoBox) ? this._infoBox.viewModel : undefined;\n\n  if (defined(infoBoxViewModel)) {\n    infoBoxViewModel.showInfo = showSelection;\n    infoBoxViewModel.enableCamera = enableCamera;\n    infoBoxViewModel.isCameraTracking = this.trackedEntity === this.selectedEntity;\n\n    if (showSelection) {\n      infoBoxViewModel.titleText = defaultValue(selectedEntity.name, selectedEntity.id);\n      infoBoxViewModel.description = Property.getValueOrDefault(selectedEntity.description, time, \"\");\n    } else {\n      infoBoxViewModel.titleText = \"\";\n      infoBoxViewModel.description = \"\";\n    }\n  }\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onEntityCollectionChanged = function (collection, added, removed) {\n  var length = removed.length;\n\n  for (var i = 0; i < length; i++) {\n    var removedObject = removed[i];\n\n    if (this.trackedEntity === removedObject) {\n      this.trackedEntity = undefined;\n    }\n\n    if (this.selectedEntity === removedObject) {\n      this.selectedEntity = undefined;\n    }\n  }\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onInfoBoxCameraClicked = function (infoBoxViewModel) {\n  if (infoBoxViewModel.isCameraTracking && this.trackedEntity === this.selectedEntity) {\n    this.trackedEntity = undefined;\n  } else {\n    var selectedEntity = this.selectedEntity;\n    var position = selectedEntity.position;\n\n    if (defined(position)) {\n      this.trackedEntity = this.selectedEntity;\n    } else {\n      this.zoomTo(this.selectedEntity);\n    }\n  }\n};\n/**\n * @private\n */\n\n\nViewer.prototype._clearTrackedObject = function () {\n  this.trackedEntity = undefined;\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onInfoBoxClockClicked = function (infoBoxViewModel) {\n  this.selectedEntity = undefined;\n};\n/**\n * @private\n */\n\n\nViewer.prototype._clearObjects = function () {\n  this.trackedEntity = undefined;\n  this.selectedEntity = undefined;\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onDataSourceChanged = function (dataSource) {\n  if (this.clockTrackedDataSource === dataSource) {\n    trackDataSourceClock(this.timeline, this.clock, dataSource);\n  }\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onDataSourceAdded = function (dataSourceCollection, dataSource) {\n  if (this._automaticallyTrackDataSourceClocks) {\n    this.clockTrackedDataSource = dataSource;\n  }\n\n  var id = dataSource.entities.id;\n\n  var removalFunc = this._eventHelper.add(dataSource.changedEvent, Viewer.prototype._onDataSourceChanged, this);\n\n  this._dataSourceChangedListeners[id] = removalFunc;\n};\n/**\n * @private\n */\n\n\nViewer.prototype._onDataSourceRemoved = function (dataSourceCollection, dataSource) {\n  var resetClock = this.clockTrackedDataSource === dataSource;\n  var id = dataSource.entities.id;\n\n  this._dataSourceChangedListeners[id]();\n\n  this._dataSourceChangedListeners[id] = undefined;\n\n  if (resetClock) {\n    var numDataSources = dataSourceCollection.length;\n\n    if (this._automaticallyTrackDataSourceClocks && numDataSources > 0) {\n      this.clockTrackedDataSource = dataSourceCollection.get(numDataSources - 1);\n    } else {\n      this.clockTrackedDataSource = undefined;\n    }\n  }\n};\n/**\n * Asynchronously sets the camera to view the provided entity, entities, or data source.\n * If the data source is still in the process of loading or the visualization is otherwise still loading,\n * this method waits for the data to be ready before performing the zoom.\n *\n * <p>The offset is heading/pitch/range in the local east-north-up reference frame centered at the center of the bounding sphere.\n * The heading and the pitch angles are defined in the local east-north-up reference frame.\n * The heading is the angle from y axis and increasing towards the x axis. Pitch is the rotation from the xy-plane. Positive pitch\n * angles are above the plane. Negative pitch angles are below the plane. The range is the distance from the center. If the range is\n * zero, a range will be computed such that the whole bounding sphere is visible.</p>\n *\n * <p>In 2D, there must be a top down view. The camera will be placed above the target looking down. The height above the\n * target will be the range. The heading will be determined from the offset. If the heading cannot be\n * determined from the offset, the heading will be north.</p>\n *\n * @param {Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud|Promise.<Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud>} target The entity, array of entities, entity collection, data source, Cesium3DTileset, point cloud, or imagery layer to view. You can also pass a promise that resolves to one of the previously mentioned types.\n * @param {HeadingPitchRange} [offset] The offset from the center of the entity in the local east-north-up reference frame.\n * @returns {Promise.<Boolean>} A Promise that resolves to true if the zoom was successful or false if the target is not currently visualized in the scene or the zoom was cancelled.\n */\n\n\nViewer.prototype.zoomTo = function (target, offset) {\n  var options = {\n    offset: offset\n  };\n  return zoomToOrFly(this, target, options, false);\n};\n/**\n * Flies the camera to the provided entity, entities, or data source.\n * If the data source is still in the process of loading or the visualization is otherwise still loading,\n * this method waits for the data to be ready before performing the flight.\n *\n * <p>The offset is heading/pitch/range in the local east-north-up reference frame centered at the center of the bounding sphere.\n * The heading and the pitch angles are defined in the local east-north-up reference frame.\n * The heading is the angle from y axis and increasing towards the x axis. Pitch is the rotation from the xy-plane. Positive pitch\n * angles are above the plane. Negative pitch angles are below the plane. The range is the distance from the center. If the range is\n * zero, a range will be computed such that the whole bounding sphere is visible.</p>\n *\n * <p>In 2D, there must be a top down view. The camera will be placed above the target looking down. The height above the\n * target will be the range. The heading will be determined from the offset. If the heading cannot be\n * determined from the offset, the heading will be north.</p>\n *\n * @param {Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud|Promise.<Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud>} target The entity, array of entities, entity collection, data source, Cesium3DTileset, point cloud, or imagery layer to view. You can also pass a promise that resolves to one of the previously mentioned types.\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.duration=3.0] The duration of the flight in seconds.\n * @param {Number} [options.maximumHeight] The maximum height at the peak of the flight.\n * @param {HeadingPitchRange} [options.offset] The offset from the target in the local east-north-up reference frame centered at the target.\n * @returns {Promise.<Boolean>} A Promise that resolves to true if the flight was successful or false if the target is not currently visualized in the scene or the flight was cancelled. //TODO: Cleanup entity mentions\n */\n\n\nViewer.prototype.flyTo = function (target, options) {\n  return zoomToOrFly(this, target, options, true);\n};\n\nfunction zoomToOrFly(that, zoomTarget, options, isFlight) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(zoomTarget)) {\n    throw new DeveloperError(\"zoomTarget is required.\");\n  } //>>includeEnd('debug');\n\n\n  cancelZoom(that); //We can't actually perform the zoom until all visualization is ready and\n  //bounding spheres have been computed.  Therefore we create and return\n  //a deferred which will be resolved as part of the post-render step in the\n  //frame that actually performs the zoom\n\n  var zoomPromise = when.defer();\n  that._zoomPromise = zoomPromise;\n  that._zoomIsFlight = isFlight;\n  that._zoomOptions = options;\n  when(zoomTarget, function (zoomTarget) {\n    //Only perform the zoom if it wasn't cancelled before the promise resolved.\n    if (that._zoomPromise !== zoomPromise) {\n      return;\n    } //If the zoom target is a rectangular imagery in an ImageLayer\n\n\n    if (zoomTarget instanceof ImageryLayer) {\n      zoomTarget.getViewableRectangle().then(function (rectangle) {\n        return computeFlyToLocationForRectangle(rectangle, that.scene);\n      }).then(function (position) {\n        //Only perform the zoom if it wasn't cancelled before the promise was resolved\n        if (that._zoomPromise === zoomPromise) {\n          that._zoomTarget = position;\n        }\n      });\n      return;\n    } //If the zoom target is a Cesium3DTileset\n\n\n    if (zoomTarget instanceof Cesium3DTileset) {\n      that._zoomTarget = zoomTarget;\n      return;\n    } //If the zoom target is a TimeDynamicPointCloud\n\n\n    if (zoomTarget instanceof TimeDynamicPointCloud) {\n      that._zoomTarget = zoomTarget;\n      return;\n    } //If the zoom target is a data source, and it's in the middle of loading, wait for it to finish loading.\n\n\n    if (zoomTarget.isLoading && defined(zoomTarget.loadingEvent)) {\n      var removeEvent = zoomTarget.loadingEvent.addEventListener(function () {\n        removeEvent(); //Only perform the zoom if it wasn't cancelled before the data source finished.\n\n        if (that._zoomPromise === zoomPromise) {\n          that._zoomTarget = zoomTarget.entities.values.slice(0);\n        }\n      });\n      return;\n    } //Zoom target is already an array, just copy it and return.\n\n\n    if (Array.isArray(zoomTarget)) {\n      that._zoomTarget = zoomTarget.slice(0);\n      return;\n    } //If zoomTarget is an EntityCollection, this will retrieve the array\n\n\n    zoomTarget = defaultValue(zoomTarget.values, zoomTarget); //If zoomTarget is a DataSource, this will retrieve the array.\n\n    if (defined(zoomTarget.entities)) {\n      zoomTarget = zoomTarget.entities.values;\n    } //Zoom target is already an array, just copy it and return.\n\n\n    if (Array.isArray(zoomTarget)) {\n      that._zoomTarget = zoomTarget.slice(0);\n    } else {\n      //Single entity\n      that._zoomTarget = [zoomTarget];\n    }\n  });\n  that.scene.requestRender();\n  return zoomPromise.promise;\n}\n\nfunction clearZoom(viewer) {\n  viewer._zoomPromise = undefined;\n  viewer._zoomTarget = undefined;\n  viewer._zoomOptions = undefined;\n}\n\nfunction cancelZoom(viewer) {\n  var zoomPromise = viewer._zoomPromise;\n\n  if (defined(zoomPromise)) {\n    clearZoom(viewer);\n    zoomPromise.resolve(false);\n  }\n}\n/**\n * @private\n */\n\n\nViewer.prototype._postRender = function () {\n  updateZoomTarget(this);\n  updateTrackedEntity(this);\n};\n\nfunction updateZoomTarget(viewer) {\n  var target = viewer._zoomTarget;\n\n  if (!defined(target) || viewer.scene.mode === SceneMode.MORPHING) {\n    return;\n  }\n\n  var scene = viewer.scene;\n  var camera = scene.camera;\n  var zoomPromise = viewer._zoomPromise;\n  var zoomOptions = defaultValue(viewer._zoomOptions, {});\n  var options;\n  var boundingSphere; // If zoomTarget was Cesium3DTileset\n\n  if (target instanceof Cesium3DTileset) {\n    return target.readyPromise.then(function () {\n      var boundingSphere = target.boundingSphere; // If offset was originally undefined then give it base value instead of empty object\n\n      if (!defined(zoomOptions.offset)) {\n        zoomOptions.offset = new HeadingPitchRange(0.0, -0.5, boundingSphere.radius);\n      }\n\n      options = {\n        offset: zoomOptions.offset,\n        duration: zoomOptions.duration,\n        maximumHeight: zoomOptions.maximumHeight,\n        complete: function () {\n          zoomPromise.resolve(true);\n        },\n        cancel: function () {\n          zoomPromise.resolve(false);\n        }\n      };\n\n      if (viewer._zoomIsFlight) {\n        camera.flyToBoundingSphere(target.boundingSphere, options);\n      } else {\n        camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n        camera.lookAtTransform(Matrix4.IDENTITY); // Finish the promise\n\n        zoomPromise.resolve(true);\n      }\n\n      clearZoom(viewer);\n    });\n  } // If zoomTarget was TimeDynamicPointCloud\n\n\n  if (target instanceof TimeDynamicPointCloud) {\n    return target.readyPromise.then(function () {\n      var boundingSphere = target.boundingSphere; // If offset was originally undefined then give it base value instead of empty object\n\n      if (!defined(zoomOptions.offset)) {\n        zoomOptions.offset = new HeadingPitchRange(0.0, -0.5, boundingSphere.radius);\n      }\n\n      options = {\n        offset: zoomOptions.offset,\n        duration: zoomOptions.duration,\n        maximumHeight: zoomOptions.maximumHeight,\n        complete: function () {\n          zoomPromise.resolve(true);\n        },\n        cancel: function () {\n          zoomPromise.resolve(false);\n        }\n      };\n\n      if (viewer._zoomIsFlight) {\n        camera.flyToBoundingSphere(boundingSphere, options);\n      } else {\n        camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n        camera.lookAtTransform(Matrix4.IDENTITY); // Finish the promise\n\n        zoomPromise.resolve(true);\n      }\n\n      clearZoom(viewer);\n    });\n  } // If zoomTarget was an ImageryLayer\n\n\n  if (target instanceof Cartographic) {\n    options = {\n      destination: scene.mapProjection.ellipsoid.cartographicToCartesian(target),\n      duration: zoomOptions.duration,\n      maximumHeight: zoomOptions.maximumHeight,\n      complete: function () {\n        zoomPromise.resolve(true);\n      },\n      cancel: function () {\n        zoomPromise.resolve(false);\n      }\n    };\n\n    if (viewer._zoomIsFlight) {\n      camera.flyTo(options);\n    } else {\n      camera.setView(options);\n      zoomPromise.resolve(true);\n    }\n\n    clearZoom(viewer);\n    return;\n  }\n\n  var entities = target;\n  var boundingSpheres = [];\n\n  for (var i = 0, len = entities.length; i < len; i++) {\n    var state = viewer._dataSourceDisplay.getBoundingSphere(entities[i], false, boundingSphereScratch);\n\n    if (state === BoundingSphereState.PENDING) {\n      return;\n    } else if (state !== BoundingSphereState.FAILED) {\n      boundingSpheres.push(BoundingSphere.clone(boundingSphereScratch));\n    }\n  }\n\n  if (boundingSpheres.length === 0) {\n    cancelZoom(viewer);\n    return;\n  } //Stop tracking the current entity.\n\n\n  viewer.trackedEntity = undefined;\n  boundingSphere = BoundingSphere.fromBoundingSpheres(boundingSpheres);\n\n  if (!viewer._zoomIsFlight) {\n    camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n    camera.lookAtTransform(Matrix4.IDENTITY);\n    clearZoom(viewer);\n    zoomPromise.resolve(true);\n  } else {\n    clearZoom(viewer);\n    camera.flyToBoundingSphere(boundingSphere, {\n      duration: zoomOptions.duration,\n      maximumHeight: zoomOptions.maximumHeight,\n      complete: function () {\n        zoomPromise.resolve(true);\n      },\n      cancel: function () {\n        zoomPromise.resolve(false);\n      },\n      offset: zoomOptions.offset\n    });\n  }\n}\n\nfunction updateTrackedEntity(viewer) {\n  if (!viewer._needTrackedEntityUpdate) {\n    return;\n  }\n\n  var trackedEntity = viewer._trackedEntity;\n  var currentTime = viewer.clock.currentTime; //Verify we have a current position at this time. This is only triggered if a position\n  //has become undefined after trackedEntity is set but before the boundingSphere has been\n  //computed. In this case, we will track the entity once it comes back into existence.\n\n  var currentPosition = Property.getValueOrUndefined(trackedEntity.position, currentTime);\n\n  if (!defined(currentPosition)) {\n    return;\n  }\n\n  var scene = viewer.scene;\n\n  var state = viewer._dataSourceDisplay.getBoundingSphere(trackedEntity, false, boundingSphereScratch);\n\n  if (state === BoundingSphereState.PENDING) {\n    return;\n  }\n\n  var sceneMode = scene.mode;\n\n  if (sceneMode === SceneMode.COLUMBUS_VIEW || sceneMode === SceneMode.SCENE2D) {\n    scene.screenSpaceCameraController.enableTranslate = false;\n  }\n\n  if (sceneMode === SceneMode.COLUMBUS_VIEW || sceneMode === SceneMode.SCENE3D) {\n    scene.screenSpaceCameraController.enableTilt = false;\n  }\n\n  var bs = state !== BoundingSphereState.FAILED ? boundingSphereScratch : undefined;\n  viewer._entityView = new EntityView(trackedEntity, scene, scene.mapProjection.ellipsoid);\n\n  viewer._entityView.update(currentTime, bs);\n\n  viewer._needTrackedEntityUpdate = false;\n}\n/**\n * A function that augments a Viewer instance with additional functionality.\n * @callback Viewer.ViewerMixin\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} options Options object to be passed to the mixin function.\n *\n * @see Viewer#extend\n */\n\n\nexport default Viewer;","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/node_modules/cesium/Source/Widgets/Viewer/Viewer.js"],"names":["BoundingSphere","Cartesian3","Cartographic","Clock","defaultValue","defined","destroyObject","DeveloperError","Event","EventHelper","HeadingPitchRange","Matrix4","ScreenSpaceEventType","BoundingSphereState","ConstantPositionProperty","DataSourceCollection","DataSourceDisplay","Entity","EntityView","Property","Cesium3DTileset","computeFlyToLocationForRectangle","ImageryLayer","SceneMode","TimeDynamicPointCloud","knockout","when","Animation","AnimationViewModel","BaseLayerPicker","createDefaultImageryProviderViewModels","createDefaultTerrainProviderViewModels","CesiumWidget","ClockViewModel","FullscreenButton","Geocoder","getElement","HomeButton","InfoBox","NavigationHelpButton","ProjectionPicker","SceneModePicker","SelectionIndicator","subscribeAndEvaluate","Timeline","VRButton","Cesium3DTileFeature","boundingSphereScratch","onTimelineScrubfunction","e","clock","currentTime","timeJulian","shouldAnimate","getCesium3DTileFeatureDescription","feature","propertyNames","getPropertyNames","html","forEach","propertyName","value","getProperty","length","getCesium3DTileFeatureName","i","possibleNames","test","item","pickEntity","viewer","picked","scene","pick","position","id","primitive","name","description","globe","pickImageryLayerFeature","trackDataSourceClock","timeline","dataSource","dataSourceClock","getValue","updateFromClock","zoomTo","startTime","stopTime","cartesian3Scratch","windowPosition","pickRay","camera","getPickRay","imageryLayerFeaturePromise","imageryLayers","pickImageryLayerFeatures","loadingMessage","features","selectedEntity","createNoFeaturesEntity","entity","ecfPosition","ellipsoid","cartographicToCartesian","enableVRUI","enabled","geocoder","_geocoder","homeButton","_homeButton","sceneModePicker","_sceneModePicker","projectionPicker","_projectionPicker","baseLayerPicker","_baseLayerPicker","animation","_animation","_timeline","fullscreenButton","_fullscreenButton","infoBox","_infoBox","selectionIndicator","_selectionIndicator","visibility","container","style","viewModel","isFullscreenEnabled","_container","right","clientWidth","_vrButton","forceResize","Viewer","options","EMPTY_OBJECT","createBaseLayerPicker","selectedImageryProviderViewModel","selectedTerrainProviderViewModel","that","viewerContainer","document","createElement","className","appendChild","cesiumWidgetContainer","bottomContainer","scene3DOnly","clockViewModel","destroyClockViewModel","cesiumWidget","imageryProvider","undefined","skyBox","skyAtmosphere","sceneMode","mapProjection","orderIndependentTranslucency","contextOptions","useDefaultRenderLoop","targetFrameRate","showRenderLoopErrors","useBrowserRecommendedResolution","creditContainer","creditViewport","terrainExaggeration","shadows","terrainShadows","mapMode2D","requestRenderMode","maximumRenderTimeChange","dataSourceCollection","dataSources","destroyDataSourceCollection","dataSourceDisplay","eventHelper","add","onTick","prototype","_onTick","morphStart","_clearTrackedObject","selectionIndicatorContainer","infoBoxContainer","infoBoxViewModel","cameraClicked","_onInfoBoxCameraClicked","closeClicked","_onInfoBoxClockClicked","toolbar","geocoderContainer","geocoderService","Array","isArray","geocoderServices","search","beforeExecute","_clearObjects","command","afterExecute","searchText","isSearchInProgress","baseLayerPickerDropDown","imageryProviderViewModels","terrainProviderViewModels","elements","getElementsByClassName","selectedImagery","removeAll","addImageryProvider","terrainProvider","selectedTerrain","navigationHelpButton","showNavHelp","window","localStorage","hasSeenNavHelp","getItem","Boolean","setItem","instructionsInitiallyVisible","navigationInstructionsInitiallyVisible","animationContainer","timelineContainer","addEventListener","fullscreenSubscription","fullscreenContainer","fullscreenElement","display","resize","vrButton","vrSubscription","vrModeSubscription","vrContainer","fullScreenElement","isVREnabled","isVRMode","_baseLayerPickerDropDown","_fullscreenSubscription","_vrSubscription","_vrModeSubscription","_dataSourceChangedListeners","_automaticallyTrackDataSourceClocks","automaticallyTrackDataSourceClocks","_bottomContainer","_element","_cesiumWidget","_dataSourceCollection","_destroyDataSourceCollection","_dataSourceDisplay","_clockViewModel","_destroyClockViewModel","_toolbar","_navigationHelpButton","_eventHelper","_lastWidth","_lastHeight","_allowDataSourcesToSuspendAnimation","_entityView","_enableInfoOrSelection","_clockTrackedDataSource","_trackedEntity","_needTrackedEntityUpdate","_selectedEntity","_zoomIsFlight","_zoomTarget","_zoomPromise","_zoomOptions","_selectedEntityChanged","_trackedEntityChanged","track","dataSourceAdded","_onDataSourceAdded","dataSourceRemoved","_onDataSourceRemoved","postUpdate","postRender","_postRender","dataSourceLength","_dataSourceAdded","get","defaultDataSource","_dataSourceRemoved","pickAndTrackObject","getValueOrUndefined","trackedEntity","pickAndSelectObject","screenSpaceEventHandler","setInputAction","LEFT_CLICK","LEFT_DOUBLE_CLICK","Object","defineProperties","entities","canvas","shadowMap","set","postProcessStages","resolutionScale","allowDataSourcesToSuspendAnimation","cancelZoom","mode","COLUMBUS_VIEW","SCENE2D","screenSpaceCameraController","enableTranslate","SCENE3D","enableTilt","lookAtTransform","IDENTITY","raiseEvent","requestRender","selectionIndicatorViewModel","animateAppear","animateDepart","selectedEntityChanged","trackedEntityChanged","clockTrackedDataSource","extend","mixin","width","height","clientHeight","animationExists","timelineExists","panelMaxHeight","maxHeight","geocoderSuggestions","searchSuggestionsContainer","animationWidth","creditLeft","creditBottom","getComputedStyle","lastWidth","timelineStyle","left","pixels","bottom","render","isDestroyed","destroy","removeInputAction","removeChild","removeEventListener","dispose","entityCollection","collectionChanged","_onEntityCollectionChanged","getById","time","isUpdated","update","canAnimate","entityView","trackedState","getBoundingSphere","DONE","enableCamera","showSelection","isShowing","isAvailable","state","FAILED","center","clone","showInfo","isCameraTracking","titleText","getValueOrDefault","collection","added","removed","removedObject","_onDataSourceChanged","removalFunc","changedEvent","resetClock","numDataSources","target","offset","zoomToOrFly","flyTo","zoomTarget","isFlight","zoomPromise","defer","getViewableRectangle","then","rectangle","isLoading","loadingEvent","removeEvent","values","slice","promise","clearZoom","resolve","updateZoomTarget","updateTrackedEntity","MORPHING","zoomOptions","boundingSphere","readyPromise","radius","duration","maximumHeight","complete","cancel","flyToBoundingSphere","viewBoundingSphere","destination","setView","boundingSpheres","len","PENDING","push","fromBoundingSpheres","currentPosition","bs"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,wBAAP,MAAqC,+CAArC;AACA,OAAOC,oBAAP,MAAiC,2CAAjC;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gCAAP,MAA6C,iDAA7C;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,sCAAP,MAAmD,8DAAnD;AACA,OAAOC,sCAAP,MAAmD,8DAAnD;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,oBAAP,MAAiC,iDAAjC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,IAAIC,qBAAqB,GAAG,IAAI/C,cAAJ,EAA5B;;AAEA,SAASgD,uBAAT,CAAiCC,CAAjC,EAAoC;AAClC,MAAIC,KAAK,GAAGD,CAAC,CAACC,KAAd;AACAA,EAAAA,KAAK,CAACC,WAAN,GAAoBF,CAAC,CAACG,UAAtB;AACAF,EAAAA,KAAK,CAACG,aAAN,GAAsB,KAAtB;AACD;;AAED,SAASC,iCAAT,CAA2CC,OAA3C,EAAoD;AAClD,MAAIC,aAAa,GAAGD,OAAO,CAACE,gBAAR,EAApB;AAEA,MAAIC,IAAI,GAAG,EAAX;AACAF,EAAAA,aAAa,CAACG,OAAd,CAAsB,UAAUC,YAAV,EAAwB;AAC5C,QAAIC,KAAK,GAAGN,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAZ;;AACA,QAAIvD,OAAO,CAACwD,KAAD,CAAX,EAAoB;AAClBH,MAAAA,IAAI,IAAI,aAAaE,YAAb,GAA4B,WAA5B,GAA0CC,KAA1C,GAAkD,YAA1D;AACD;AACF,GALD;;AAOA,MAAIH,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACnBL,IAAAA,IAAI,GACF,uDACAA,IADA,GAEA,kBAHF;AAID;;AAED,SAAOA,IAAP;AACD;;AAED,SAASM,0BAAT,CAAoCT,OAApC,EAA6C;AAC3C;AACA;AACA;AACA;AACA;AAEA,MAAIU,CAAJ;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIV,aAAa,GAAGD,OAAO,CAACE,gBAAR,EAApB;;AACA,OAAKQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGT,aAAa,CAACO,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzC,QAAIL,YAAY,GAAGJ,aAAa,CAACS,CAAD,CAAhC;;AACA,QAAI,UAAUE,IAAV,CAAeP,YAAf,CAAJ,EAAkC;AAChCM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD,KAFD,MAEO,IAAI,QAAQO,IAAR,CAAaP,YAAb,CAAJ,EAAgC;AACrCM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD,KAFM,MAEA,IAAI,WAAWO,IAAX,CAAgBP,YAAhB,CAAJ,EAAmC;AACxCM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD,KAFM,MAEA,IAAI,qBAAqBO,IAArB,CAA0BP,YAA1B,CAAJ,EAA6C;AAClDM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD,KAFM,MAEA,IAAI,WAAWO,IAAX,CAAgBP,YAAhB,CAAJ,EAAmC;AACxCM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD,KAFM,MAEA,IAAI,oBAAoBO,IAApB,CAAyBP,YAAzB,CAAJ,EAA4C;AACjDM,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBX,OAAO,CAACO,WAAR,CAAoBF,YAApB,CAAnB;AACD;AACF;;AAED,MAAIG,MAAM,GAAGG,aAAa,CAACH,MAA3B;;AACA,OAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,MAAhB,EAAwBE,CAAC,EAAzB,EAA6B;AAC3B,QAAIG,IAAI,GAAGF,aAAa,CAACD,CAAD,CAAxB;;AACA,QAAI5D,OAAO,CAAC+D,IAAD,CAAP,IAAiBA,IAAI,KAAK,EAA9B,EAAkC;AAChC,aAAOA,IAAP;AACD;AACF;;AACD,SAAO,iBAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,MAApB,EAA4BrB,CAA5B,EAA+B;AAC7B,MAAIsB,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkBxB,CAAC,CAACyB,QAApB,CAAb;;AACA,MAAIrE,OAAO,CAACkE,MAAD,CAAX,EAAqB;AACnB,QAAII,EAAE,GAAGvE,YAAY,CAACmE,MAAM,CAACI,EAAR,EAAYJ,MAAM,CAACK,SAAP,CAAiBD,EAA7B,CAArB;;AACA,QAAIA,EAAE,YAAY1D,MAAlB,EAA0B;AACxB,aAAO0D,EAAP;AACD;;AAED,QAAIJ,MAAM,YAAYzB,mBAAtB,EAA2C;AACzC,aAAO,IAAI7B,MAAJ,CAAW;AAChB4D,QAAAA,IAAI,EAAEb,0BAA0B,CAACO,MAAD,CADhB;AAEhBO,QAAAA,WAAW,EAAExB,iCAAiC,CAACiB,MAAD,CAF9B;AAGhBhB,QAAAA,OAAO,EAAEgB;AAHO,OAAX,CAAP;AAKD;AACF,GAf4B,CAiB7B;;;AACA,MAAIlE,OAAO,CAACiE,MAAM,CAACE,KAAP,CAAaO,KAAd,CAAX,EAAiC;AAC/B,WAAOC,uBAAuB,CAACV,MAAD,EAASrB,CAAC,CAACyB,QAAX,CAA9B;AACD;AACF;;AAED,SAASO,oBAAT,CAA8BC,QAA9B,EAAwChC,KAAxC,EAA+CiC,UAA/C,EAA2D;AACzD,MAAI9E,OAAO,CAAC8E,UAAD,CAAX,EAAyB;AACvB,QAAIC,eAAe,GAAGD,UAAU,CAACjC,KAAjC;;AACA,QAAI7C,OAAO,CAAC+E,eAAD,CAAX,EAA8B;AAC5BA,MAAAA,eAAe,CAACC,QAAhB,CAAyBnC,KAAzB;;AACA,UAAI7C,OAAO,CAAC6E,QAAD,CAAX,EAAuB;AACrBA,QAAAA,QAAQ,CAACI,eAAT;AACAJ,QAAAA,QAAQ,CAACK,MAAT,CAAgBH,eAAe,CAACI,SAAhC,EAA2CJ,eAAe,CAACK,QAA3D;AACD;AACF;AACF;AACF;;AAED,IAAIC,iBAAiB,GAAG,IAAIzF,UAAJ,EAAxB;;AAEA,SAAS+E,uBAAT,CAAiCV,MAAjC,EAAyCqB,cAAzC,EAAyD;AACvD,MAAInB,KAAK,GAAGF,MAAM,CAACE,KAAnB;AACA,MAAIoB,OAAO,GAAGpB,KAAK,CAACqB,MAAN,CAAaC,UAAb,CAAwBH,cAAxB,CAAd;AACA,MAAII,0BAA0B,GAAGvB,KAAK,CAACwB,aAAN,CAAoBC,wBAApB,CAC/BL,OAD+B,EAE/BpB,KAF+B,CAAjC;;AAIA,MAAI,CAACnE,OAAO,CAAC0F,0BAAD,CAAZ,EAA0C;AACxC;AACD,GATsD,CAWvD;;;AACA,MAAIG,cAAc,GAAG,IAAIjF,MAAJ,CAAW;AAC9B0D,IAAAA,EAAE,EAAE,YAD0B;AAE9BG,IAAAA,WAAW,EAAE;AAFiB,GAAX,CAArB;AAKApD,EAAAA,IAAI,CACFqE,0BADE,EAEF,UAAUI,QAAV,EAAoB;AAClB;AACA,QAAI7B,MAAM,CAAC8B,cAAP,KAA0BF,cAA9B,EAA8C;AAC5C;AACD;;AAED,QAAI,CAAC7F,OAAO,CAAC8F,QAAD,CAAR,IAAsBA,QAAQ,CAACpC,MAAT,KAAoB,CAA9C,EAAiD;AAC/CO,MAAAA,MAAM,CAAC8B,cAAP,GAAwBC,sBAAsB,EAA9C;AACA;AACD,KATiB,CAWlB;;;AACA,QAAI9C,OAAO,GAAG4C,QAAQ,CAAC,CAAD,CAAtB;AAEA,QAAIG,MAAM,GAAG,IAAIrF,MAAJ,CAAW;AACtB0D,MAAAA,EAAE,EAAEpB,OAAO,CAACsB,IADU;AAEtBC,MAAAA,WAAW,EAAEvB,OAAO,CAACuB;AAFC,KAAX,CAAb;;AAKA,QAAIzE,OAAO,CAACkD,OAAO,CAACmB,QAAT,CAAX,EAA+B;AAC7B,UAAI6B,WAAW,GAAGjC,MAAM,CAACE,KAAP,CAAaO,KAAb,CAAmByB,SAAnB,CAA6BC,uBAA7B,CAChBlD,OAAO,CAACmB,QADQ,EAEhBgB,iBAFgB,CAAlB;AAIAY,MAAAA,MAAM,CAAC5B,QAAP,GAAkB,IAAI5D,wBAAJ,CAA6ByF,WAA7B,CAAlB;AACD;;AAEDjC,IAAAA,MAAM,CAAC8B,cAAP,GAAwBE,MAAxB;AACD,GA9BC,EA+BF,YAAY;AACV;AACA,QAAIhC,MAAM,CAAC8B,cAAP,KAA0BF,cAA9B,EAA8C;AAC5C;AACD;;AACD5B,IAAAA,MAAM,CAAC8B,cAAP,GAAwBC,sBAAsB,EAA9C;AACD,GArCC,CAAJ;AAwCA,SAAOH,cAAP;AACD;;AAED,SAASG,sBAAT,GAAkC;AAChC,SAAO,IAAIpF,MAAJ,CAAW;AAChB0D,IAAAA,EAAE,EAAE,MADY;AAEhBG,IAAAA,WAAW,EAAE;AAFG,GAAX,CAAP;AAID;;AAED,SAAS4B,UAAT,CAAoBpC,MAApB,EAA4BqC,OAA5B,EAAqC;AACnC,MAAIC,QAAQ,GAAGtC,MAAM,CAACuC,SAAtB;AACA,MAAIC,UAAU,GAAGxC,MAAM,CAACyC,WAAxB;AACA,MAAIC,eAAe,GAAG1C,MAAM,CAAC2C,gBAA7B;AACA,MAAIC,gBAAgB,GAAG5C,MAAM,CAAC6C,iBAA9B;AACA,MAAIC,eAAe,GAAG9C,MAAM,CAAC+C,gBAA7B;AACA,MAAIC,SAAS,GAAGhD,MAAM,CAACiD,UAAvB;AACA,MAAIrC,QAAQ,GAAGZ,MAAM,CAACkD,SAAtB;AACA,MAAIC,gBAAgB,GAAGnD,MAAM,CAACoD,iBAA9B;AACA,MAAIC,OAAO,GAAGrD,MAAM,CAACsD,QAArB;AACA,MAAIC,kBAAkB,GAAGvD,MAAM,CAACwD,mBAAhC;AAEA,MAAIC,UAAU,GAAGpB,OAAO,GAAG,QAAH,GAAc,SAAtC;;AAEA,MAAItG,OAAO,CAACuG,QAAD,CAAX,EAAuB;AACrBA,IAAAA,QAAQ,CAACoB,SAAT,CAAmBC,KAAnB,CAAyBF,UAAzB,GAAsCA,UAAtC;AACD;;AACD,MAAI1H,OAAO,CAACyG,UAAD,CAAX,EAAyB;AACvBA,IAAAA,UAAU,CAACkB,SAAX,CAAqBC,KAArB,CAA2BF,UAA3B,GAAwCA,UAAxC;AACD;;AACD,MAAI1H,OAAO,CAAC2G,eAAD,CAAX,EAA8B;AAC5BA,IAAAA,eAAe,CAACgB,SAAhB,CAA0BC,KAA1B,CAAgCF,UAAhC,GAA6CA,UAA7C;AACD;;AACD,MAAI1H,OAAO,CAAC6G,gBAAD,CAAX,EAA+B;AAC7BA,IAAAA,gBAAgB,CAACc,SAAjB,CAA2BC,KAA3B,CAAiCF,UAAjC,GAA8CA,UAA9C;AACD;;AACD,MAAI1H,OAAO,CAAC+G,eAAD,CAAX,EAA8B;AAC5BA,IAAAA,eAAe,CAACY,SAAhB,CAA0BC,KAA1B,CAAgCF,UAAhC,GAA6CA,UAA7C;AACD;;AACD,MAAI1H,OAAO,CAACiH,SAAD,CAAX,EAAwB;AACtBA,IAAAA,SAAS,CAACU,SAAV,CAAoBC,KAApB,CAA0BF,UAA1B,GAAuCA,UAAvC;AACD;;AACD,MAAI1H,OAAO,CAAC6E,QAAD,CAAX,EAAuB;AACrBA,IAAAA,QAAQ,CAAC8C,SAAT,CAAmBC,KAAnB,CAAyBF,UAAzB,GAAsCA,UAAtC;AACD;;AACD,MACE1H,OAAO,CAACoH,gBAAD,CAAP,IACAA,gBAAgB,CAACS,SAAjB,CAA2BC,mBAF7B,EAGE;AACAV,IAAAA,gBAAgB,CAACO,SAAjB,CAA2BC,KAA3B,CAAiCF,UAAjC,GAA8CA,UAA9C;AACD;;AACD,MAAI1H,OAAO,CAACsH,OAAD,CAAX,EAAsB;AACpBA,IAAAA,OAAO,CAACK,SAAR,CAAkBC,KAAlB,CAAwBF,UAAxB,GAAqCA,UAArC;AACD;;AACD,MAAI1H,OAAO,CAACwH,kBAAD,CAAX,EAAiC;AAC/BA,IAAAA,kBAAkB,CAACG,SAAnB,CAA6BC,KAA7B,CAAmCF,UAAnC,GAAgDA,UAAhD;AACD;;AAED,MAAIzD,MAAM,CAAC8D,UAAX,EAAuB;AACrB,QAAIC,KAAK,GACP1B,OAAO,IAAI,CAACtG,OAAO,CAACoH,gBAAD,CAAnB,GACI,CADJ,GAEIA,gBAAgB,CAACO,SAAjB,CAA2BM,WAHjC;AAIAhE,IAAAA,MAAM,CAACiE,SAAP,CAAiBP,SAAjB,CAA2BC,KAA3B,CAAiCI,KAAjC,GAAyCA,KAAK,GAAG,IAAjD;AAEA/D,IAAAA,MAAM,CAACkgBT,SAAhB,EAA2BU,OAA3B,EAAoC;AAClC;AACA,MAAI,CAACrI,OAAO,CAAC2H,SAAD,CAAZ,EAAyB;AACvB,UAAM,IAAIzH,cAAJ,CAAmB,wBAAnB,CAAN;AACD,GAJiC,CAKlC;;;AAEAyH,EAAAA,SAAS,GAAG5F,UAAU,CAAC4F,SAAD,CAAtB;AACAU,EAAAA,OAAO,GAAGtI,YAAY,CAACsI,OAAD,EAAUtI,YAAY,CAACuI,YAAvB,CAAtB;AAEA,MAAIC,qBAAqB,GACvB,CAAC,CAACvI,OAAO,CAACqI,OAAO,CAAC3D,KAAT,CAAR,IAA2B2D,OAAO,CAAC3D,KAAR,KAAkB,KAA9C,MACC,CAAC1E,OAAO,CAACqI,OAAO,CAACtB,eAAT,CAAR,IAAqCsB,OAAO,CAACtB,eAAR,KAA4B,KADlE,CADF,CAVkC,CAclC;AACA;;AACA,MACE,CAACwB,qBAAD,IACAvI,OAAO,CAACqI,OAAO,CAACG,gCAAT,CAFT,EAGE;AACA,UAAM,IAAItI,cAAJ,CACJ;AACN,uFAFU,CAAN;AAID,GAxBiC,CA0BlC;;;AACA,MACE,CAACqI,qBAAD,IACAvI,OAAO,CAACqI,OAAO,CAACI,gCAAT,CAFT,EAGE;AACA,UAAM,IAAIvI,cAAJ,CACJ;AACN,uFAFU,CAAN;AAID,GAnCiC,CAoClC;;;AAEA,MAAIwI,IAAI,GAAG,IAAX;AAEA,MAAIC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAF,EAAAA,eAAe,CAACG,SAAhB,GAA4B,eAA5B;AACAnB,EAAAA,SAAS,CAACoB,WAAV,CAAsBJ,eAAtB,EA1CkC,CA4ClC;;AACA,MAAIK,qBAAqB,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAA5B;AACAG,EAAAA,qBAAqB,CAACF,SAAtB,GAAkC,qCAAlC;AACAH,EAAAA,eAAe,CAACI,WAAhB,CAA4BC,qBAA5B,EA/CkC,CAiDlC;;AACA,MAAIC,eAAe,GAAGL,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAI,EAAAA,eAAe,CAACH,SAAhB,GAA4B,sBAA5B;AAEAH,EAAAA,eAAe,CAACI,WAAhB,CAA4BE,eAA5B;AAEA,MAAIC,WAAW,GAAGnJ,YAAY,CAACsI,OAAO,CAACa,WAAT,EAAsB,KAAtB,CAA9B;AAEA,MAAIrG,KAAJ;AACA,MAAIsG,cAAJ;AACA,MAAIC,qBAAqB,GAAG,KAA5B;;AACA,MAAIpJ,OAAO,CAACqI,OAAO,CAACc,cAAT,CAAX,EAAqC;AACnCA,IAAAA,cAAc,GAAGd,OAAO,CAACc,cAAzB;AACAtG,IAAAA,KAAK,GAAGsG,cAAc,CAACtG,KAAvB;AACD,GAHD,MAGO;AACLA,IAAAA,KAAK,GAAG,IAAI/C,KAAJ,EAAR;AACAqJ,IAAAA,cAAc,GAAG,IAAIvH,cAAJ,CAAmBiB,KAAnB,CAAjB;AACAuG,IAAAA,qBAAqB,GAAG,IAAxB;AACD;;AAED,MAAIpJ,OAAO,CAACqI,OAAO,CAACrF,aAAT,CAAX,EAAoC;AAClCH,IAAAA,KAAK,CAACG,aAAN,GAAsBqF,OAAO,CAACrF,aAA9B;AACD,GAvEiC,CAyElC;;;AACA,MAAIqG,YAAY,GAAG,IAAI1H,YAAJ,CAAiBqH,qBAAjB,EAAwC;AACzDM,IAAAA,eAAe,EACbf,qBAAqB,IAAIvI,OAAO,CAACqI,OAAO,CAACiB,eAAT,CAAhC,GACI,KADJ,GAEIC,SAJmD;AAKzD1G,IAAAA,KAAK,EAAEA,KALkD;AAMzD2G,IAAAA,MAAM,EAAEnB,OAAO,CAACmB,MANyC;AAOzDC,IAAAA,aAAa,EAAEpB,OAAO,CAACoB,aAPkC;AAQzDC,IAAAA,SAAS,EAAErB,OAAO,CAACqB,SARsC;AASzDC,IAAAA,aAAa,EAAEtB,OAAO,CAACsB,aATkC;AAUzDjF,IAAAA,KAAK,EAAE2D,OAAO,CAAC3D,KAV0C;AAWzDkF,IAAAA,4BAA4B,EAAEvB,OAAO,CAACuB,4BAXmB;AAYzDC,IAAAA,cAAc,EAAExB,OAAO,CAACwB,cAZiC;AAazDC,IAAAA,oBAAoB,EAAEzB,OAAO,CAACyB,oBAb2B;AAczDC,IAAAA,eAAe,EAAE1B,OAAO,CAAC0B,eAdgC;AAezDC,IAAAA,oBAAoB,EAAE3B,OAAO,CAAC2B,oBAf2B;AAgBzDC,IAAAA,+BAA+B,EAAE5B,OAAO,CAAC4B,+BAhBgB;AAiBzDC,IAAAA,eAAe,EAAElK,OAAO,CAACqI,OAAO,CAAC6B,eAAT,CAAP,GACb7B,OAAO,CAAC6B,eADK,GAEbjB,eAnBqD;AAoBzDkB,IAAAA,cAAc,EAAE9B,OAAO,CAAC8B,cApBiC;AAqBzDjB,IAAAA,WAAW,EAAEA,WArB4C;AAsBzDkB,IAAAA,mBAAmB,EAAE/B,OAAO,CAAC+B,mBAtB4B;AAuBzDC,IAAAA,OAAO,EAAEhC,OAAO,CAACgC,OAvBwC;AAwBzDC,IAAAA,cAAc,EAAEjC,OAAO,CAACiC,cAxBiC;AAyBzDC,IAAAA,SAAS,EAAElC,OAAO,CAACkC,SAzBsC;AA0BzDC,IAAAA,iBAAiB,EAAEnC,OAAO,CAACmC,iBA1B8B;AA2BzDC,IAAAA,uBAAuB,EAAEpC,OAAO,CAACoC;AA3BwB,GAAxC,CAAnB;AA8BA,MAAIC,oBAAoB,GAAGrC,OAAO,CAACsC,WAAnC;AACA,MAAIC,2BAA2B,GAAG,KAAlC;;AACA,MAAI,CAAC5K,OAAO,CAAC0K,oBAAD,CAAZ,EAAoC;AAClCA,IAAAA,oBAAoB,GAAG,IAAIhK,oBAAJ,EAAvB;AACAkK,IAAAA,2BAA2B,GAAG,IAA9B;AACD;;AAED,MAAIzG,KAAK,GAAGkF,YAAY,CAAClF,KAAzB;AAEA,MAAI0G,iBAAiB,GAAG,IAAIlK,iBAAJ,CAAsB;AAC5CwD,IAAAA,KAAK,EAAEA,KADqC;AAE5CuG,IAAAA,oBAAoB,EAAEA;AAFsB,GAAtB,CAAxB;AAKA,MAAII,WAAW,GAAG,IAAI1K,WAAJ,EAAlB;AAEA0K,EAAAA,WAAW,CAACC,GAAZ,CAAgBlI,KAAK,CAACmI,MAAtB,EAA8B5C,MAAM,CAAC6C,SAAP,CAAiBC,OAA/C,EAAwD,IAAxD;AACAJ,EAAAA,WAAW,CAACC,GAAZ,CAAgB5G,KAAK,CAACgH,UAAtB,EAAkC/C,MAAM,CAAC6C,SAAP,CAAiBG,mBAAnD,EAAwE,IAAxE,EAzHkC,CA2HlC;;AACA,MAAI5D,kBAAJ;;AACA,MACE,CAACxH,OAAO,CAACqI,OAAO,CAACb,kBAAT,CAAR,IACAa,OAAO,CAACb,kBAAR,KAA+B,KAFjC,EAGE;AACA,QAAI6D,2BAA2B,GAAGzC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlC;AACAwC,IAAAA,2BAA2B,CAACvC,SAA5B,GACE,2CADF;AAEAH,IAAAA,eAAe,CAACI,WAAhB,CAA4BsC,2BAA5B;AACA7D,IAAAA,kBAAkB,GAAG,IAAInF,kBAAJ,CACnBgJ,2BADmB,EAEnBlH,KAFmB,CAArB;AAID,GAzIiC,CA2IlC;;;AACA,MAAImD,OAAJ;;AACA,MAAI,CAACtH,OAAO,CAACqI,OAAO,CAACf,OAAT,CAAR,IAA6Be,OAAO,CAACf,OAAR,KAAoB,KAArD,EAA4D;AAC1D,QAAIgE,gBAAgB,GAAG1C,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAvB;AACAyC,IAAAA,gBAAgB,CAACxC,SAAjB,GAA6B,gCAA7B;AACAH,IAAAA,eAAe,CAACI,WAAhB,CAA4BuC,gBAA5B;AACAhE,IAAAA,OAAO,GAAG,IAAIrF,OAAJ,CAAYqJ,gBAAZ,CAAV;AAEA,QAAIC,gBAAgB,GAAGjE,OAAO,CAACO,SAA/B;AACAiD,IAAAA,WAAW,CAACC,GAAZ,CACEQ,gBAAgB,CAACC,aADnB,EAEEpD,MAAM,CAAC6C,SAAP,CAAiBQ,uBAFnB,EAGE,IAHF;AAKAX,IAAAA,WAAW,CAACC,GAAZ,CACEQ,gBAAgB,CAACG,YADnB,EAEEtD,MAAM,CAAC6C,SAAP,CAAiBU,sBAFnB,EAGE,IAHF;AAKD,GA9JiC,CAgKlC;;;AACA,MAAIC,OAAO,GAAGhD,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA+C,EAAAA,OAAO,CAAC9C,SAAR,GAAoB,uBAApB;AACAH,EAAAA,eAAe,CAACI,WAAhB,CAA4B6C,OAA5B,EAnKkC,CAqKlC;;AACA,MAAIrF,QAAJ;;AACA,MAAI,CAACvG,OAAO,CAACqI,OAAO,CAAC9B,QAAT,CAAR,IAA8B8B,OAAO,CAAC9B,QAAR,KAAqB,KAAvD,EAA8D;AAC5D,QAAIsF,iBAAiB,GAAGjD,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAxB;AACAgD,IAAAA,iBAAiB,CAAC/C,SAAlB,GAA8B,iCAA9B;AACA8C,IAAAA,OAAO,CAAC7C,WAAR,CAAoB8C,iBAApB;AACA,QAAIC,eAAJ;;AACA,QAAI9L,OAAO,CAACqI,OAAO,CAAC9B,QAAT,CAAP,IAA6B,OAAO8B,OAAO,CAAC9B,QAAf,KAA4B,SAA7D,EAAwE;AACtEuF,MAAAA,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAc3D,OAAO,CAAC9B,QAAtB,IACd8B,OAAO,CAAC9B,QADM,GAEd,CAAC8B,OAAO,CAAC9B,QAAT,CAFJ;AAGD;;AACDA,IAAAA,QAAQ,GAAG,IAAIzE,QAAJ,CAAa;AACtB6F,MAAAA,SAAS,EAAEkE,iBADW;AAEtBI,MAAAA,gBAAgB,EAAEH,eAFI;AAGtB3H,MAAAA,KAAK,EAAEA;AAHe,KAAb,CAAX,CAV4D,CAe5D;;AACA2G,IAAAA,WAAW,CAACC,GAAZ,CACExE,QAAQ,CAACsB,SAAT,CAAmBqE,MAAnB,CAA0BC,aAD5B,EAEE/D,MAAM,CAAC6C,SAAP,CAAiBmB,aAFnB,EAGE,IAHF;AAKD,GA5LiC,CA8LlC;;;AACA,MAAI3F,UAAJ;;AACA,MAAI,CAACzG,OAAO,CAACqI,OAAO,CAAC5B,UAAT,CAAR,IAAgC4B,OAAO,CAAC5B,UAAR,KAAuB,KAA3D,EAAkE;AAChEA,IAAAA,UAAU,GAAG,IAAIzE,UAAJ,CAAe4J,OAAf,EAAwBzH,KAAxB,CAAb;;AACA,QAAInE,OAAO,CAACuG,QAAD,CAAX,EAAuB;AACrBuE,MAAAA,WAAW,CAACC,GAAZ,CAAgBtE,UAAU,CAACoB,SAAX,CAAqBwE,OAArB,CAA6BC,YAA7C,EAA2D,YAAY;AACrE,YAAIzE,SAAS,GAAGtB,QAAQ,CAACsB,SAAzB;AACAA,QAAAA,SAAS,CAAC0E,UAAV,GAAuB,EAAvB;;AACA,YAAI1E,SAAS,CAAC2E,kBAAd,EAAkC;AAChC3E,UAAAA,SAAS,CAACqE,MAAV;AACD;AACF,OAND;AAOD,KAV+D,CAWhE;;;AACApB,IAAAA,WAAW,CAACC,GAAZ,CACEtE,UAAU,CAACoB,SAAX,CAAqBwE,OAArB,CAA6BF,aAD/B,EAEE/D,MAAM,CAAC6C,SAAP,CAAiBG,mBAFnB,EAGE,IAHF;AAKD,GAjNiC,CAmNlC;AACA;AACA;AACA;;;AACA,MAAI/C,OAAO,CAAC1B,eAAR,KAA4B,IAA5B,IAAoCuC,WAAxC,EAAqD;AACnD,UAAM,IAAIhJ,cAAJ,CACJ,mFADI,CAAN;AAGD,GA3NiC,CA4NlC;;;AAEA,MAAIyG,eAAJ;;AACA,MACE,CAACuC,WAAD,KACC,CAAClJ,OAAO,CAACqI,OAAO,CAAC1B,eAAT,CAAR,IAAqC0B,OAAO,CAAC1B,eAAR,KAA4B,KADlE,CADF,EAGE;AACAA,IAAAA,eAAe,GAAG,IAAIvE,eAAJ,CAAoBwJ,OAApB,EAA6BzH,KAA7B,CAAlB;AACD;;AAED,MAAI0C,gBAAJ;;AACA,MAAIwB,OAAO,CAACxB,gBAAZ,EAA8B;AAC5BA,IAAAA,gBAAgB,GAAG,IAAI1E,gBAAJ,CAAqByJ,OAArB,EAA8BzH,KAA9B,CAAnB;AACD,GAzOiC,CA2OlC;;;AACA,MAAI4C,eAAJ;AACA,MAAI0F,uBAAJ;;AACA,MAAIlE,qBAAJ,EAA2B;AACzB,QAAImE,yBAAyB,GAAG3M,YAAY,CAC1CsI,OAAO,CAACqE,yBADkC,EAE1CjL,sCAAsC,EAFI,CAA5C;AAIA,QAAIkL,yBAAyB,GAAG5M,YAAY,CAC1CsI,OAAO,CAACsE,yBADkC,EAE1CjL,sCAAsC,EAFI,CAA5C;AAKAqF,IAAAA,eAAe,GAAG,IAAIvF,eAAJ,CAAoBoK,OAApB,EAA6B;AAC7ClH,MAAAA,KAAK,EAAEP,KAAK,CAACO,KADgC;AAE7CgI,MAAAA,yBAAyB,EAAEA,yBAFkB;AAG7ClE,MAAAA,gCAAgC,EAC9BH,OAAO,CAACG,gCAJmC;AAK7CmE,MAAAA,yBAAyB,EAAEA,yBALkB;AAM7ClE,MAAAA,gCAAgC,EAC9BJ,OAAO,CAACI;AAPmC,KAA7B,CAAlB,CAVyB,CAoBzB;;AACA,QAAImE,QAAQ,GAAGhB,OAAO,CAACiB,sBAAR,CACb,iCADa,CAAf;AAGAJ,IAAAA,uBAAuB,GAAGG,QAAQ,CAAC,CAAD,CAAlC;AACD,GAvQiC,CAyQlC;;;AACA,MAAI5M,OAAO,CAACqI,OAAO,CAACiB,eAAT,CAAP,IAAoCjB,OAAO,CAACiB,eAAR,KAA4B,KAApE,EAA2E;AACzE,QAAIf,qBAAJ,EAA2B;AACzBxB,MAAAA,eAAe,CAACc,SAAhB,CAA0BiF,eAA1B,GAA4CvD,SAA5C;AACD;;AACDpF,IAAAA,KAAK,CAACwB,aAAN,CAAoBoH,SAApB;AACA5I,IAAAA,KAAK,CAACwB,aAAN,CAAoBqH,kBAApB,CAAuC3E,OAAO,CAACiB,eAA/C;AACD;;AACD,MAAItJ,OAAO,CAACqI,OAAO,CAAC4E,eAAT,CAAX,EAAsC;AACpC,QAAI1E,qBAAJ,EAA2B;AACzBxB,MAAAA,eAAe,CAACc,SAAhB,CAA0BqF,eAA1B,GAA4C3D,SAA5C;AACD;;AACDpF,IAAAA,KAAK,CAAC8I,eAAN,GAAwB5E,OAAO,CAAC4E,eAAhC;AACD,GAtRiC,CAwRlC;;;AACA,MAAIE,oBAAJ;;AACA,MACE,CAACnN,OAAO,CAACqI,OAAO,CAAC8E,oBAAT,CAAR,IACA9E,OAAO,CAAC8E,oBAAR,KAAiC,KAFnC,EAGE;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAI;AACF;AACA,UAAIpN,OAAO,CAACqN,MAAM,CAACC,YAAR,CAAX,EAAkC;AAChC,YAAIC,cAAc,GAAGF,MAAM,CAACC,YAAP,CAAoBE,OAApB,CACnB,uBADmB,CAArB;;AAGA,YAAIxN,OAAO,CAACuN,cAAD,CAAP,IAA2BE,OAAO,CAACF,cAAD,CAAtC,EAAwD;AACtDH,UAAAA,WAAW,GAAG,KAAd;AACD,SAFD,MAEO;AACLC,UAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,uBAA5B,EAAqD,MAArD;AACD;AACF;AACF,KAZD,CAYE,OAAO9K,CAAP,EAAU,CACV;AACA;AACD;;AACDuK,IAAAA,oBAAoB,GAAG,IAAIjL,oBAAJ,CAAyB;AAC9CyF,MAAAA,SAAS,EAAEiE,OADmC;AAE9C+B,MAAAA,4BAA4B,EAAE5N,YAAY,CACxCsI,OAAO,CAACuF,sCADgC,EAExCR,WAFwC;AAFI,KAAzB,CAAvB;AAOD,GAtTiC,CAwTlC;;;AACA,MAAInG,SAAJ;;AACA,MAAI,CAACjH,OAAO,CAACqI,OAAO,CAACpB,SAAT,CAAR,IAA+BoB,OAAO,CAACpB,SAAR,KAAsB,KAAzD,EAAgE;AAC9D,QAAI4G,kBAAkB,GAAGjF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAzB;AACAgF,IAAAA,kBAAkB,CAAC/E,SAAnB,GAA+B,kCAA/B;AACAH,IAAAA,eAAe,CAACI,WAAhB,CAA4B8E,kBAA5B;AACA5G,IAAAA,SAAS,GAAG,IAAI3F,SAAJ,CACVuM,kBADU,EAEV,IAAItM,kBAAJ,CAAuB4H,cAAvB,CAFU,CAAZ;AAID,GAlUiC,CAoUlC;;;AACA,MAAItE,QAAJ;;AACA,MAAI,CAAC7E,OAAO,CAACqI,OAAO,CAACxD,QAAT,CAAR,IAA8BwD,OAAO,CAACxD,QAAR,KAAqB,KAAvD,EAA8D;AAC5D,QAAIiJ,iBAAiB,GAAGlF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAxB;AACAiF,IAAAA,iBAAiB,CAAChF,SAAlB,GAA8B,iCAA9B;AACAH,IAAAA,eAAe,CAACI,WAAhB,CAA4B+E,iBAA5B;AACAjJ,IAAAA,QAAQ,GAAG,IAAItC,QAAJ,CAAauL,iBAAb,EAAgCjL,KAAhC,CAAX;AACAgC,IAAAA,QAAQ,CAACkJ,gBAAT,CAA0B,SAA1B,EAAqCpL,uBAArC,EAA8D,KAA9D;AACAkC,IAAAA,QAAQ,CAACK,MAAT,CAAgBrC,KAAK,CAACsC,SAAtB,EAAiCtC,KAAK,CAACuC,QAAvC;AACD,GA7UiC,CA+UlC;;;AACA,MAAIgC,gBAAJ;AACA,MAAI4G,sBAAJ;AACA,MAAIC,mBAAJ;;AACA,MACE,CAACjO,OAAO,CAACqI,OAAO,CAACjB,gBAAT,CAAR,IACAiB,OAAO,CAACjB,gBAAR,KAA6B,KAF/B,EAGE;AACA6G,IAAAA,mBAAmB,GAAGrF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAoF,IAAAA,mBAAmB,CAACnF,SAApB,GAAgC,mCAAhC;AACAH,IAAAA,eAAe,CAACI,WAAhB,CAA4BkF,mBAA5B;AACA7G,IAAAA,gBAAgB,GAAG,IAAIvF,gBAAJ,CACjBoM,mBADiB,EAEjB5F,OAAO,CAAC6F,iBAFS,CAAnB,CAJA,CASA;AACA;;AACAF,IAAAA,sBAAsB,GAAG1L,oBAAoB,CAC3C8E,gBAAgB,CAACS,SAD0B,EAE3C,qBAF2C,EAG3C,UAAUC,mBAAV,EAA+B;AAC7BmG,MAAAA,mBAAmB,CAACrG,KAApB,CAA0BuG,OAA1B,GAAoCrG,mBAAmB,GACnD,OADmD,GAEnD,MAFJ;;AAGA,UAAI9H,OAAO,CAAC6E,QAAD,CAAX,EAAuB;AACrBA,QAAAA,QAAQ,CAAC8C,SAAT,CAAmBC,KAAnB,CAAyBI,KAAzB,GACEiG,mBAAmB,CAAChG,WAApB,GAAkC,IADpC;AAEApD,QAAAA,QAAQ,CAACuJ,MAAT;AACD;AACF,KAZ0C,CAA7C;AAcD,GA/WiC,CAiXlC;;;AACA,MAAIC,QAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,kBAAJ;;AACA,MAAIlG,OAAO,CAACgG,QAAZ,EAAsB;AACpB,QAAIG,WAAW,GAAG5F,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACA2F,IAAAA,WAAW,CAAC1F,SAAZ,GAAwB,2BAAxB;AACAH,IAAAA,eAAe,CAACI,WAAhB,CAA4ByF,WAA5B;AACAH,IAAAA,QAAQ,GAAG,IAAI7L,QAAJ,CAAagM,WAAb,EAA0BrK,KAA1B,EAAiCkE,OAAO,CAACoG,iBAAzC,CAAX;AAEAH,IAAAA,cAAc,GAAGhM,oBAAoB,CACnC+L,QAAQ,CAACxG,SAD0B,EAEnC,aAFmC,EAGnC,UAAU6G,WAAV,EAAuB;AACrBF,MAAAA,WAAW,CAAC5G,KAAZ,CAAkBuG,OAAlB,GAA4BO,WAAW,GAAG,OAAH,GAAa,MAApD;;AACA,UAAI1O,OAAO,CAACoH,gBAAD,CAAX,EAA+B;AAC7BoH,QAAAA,WAAW,CAAC5G,KAAZ,CAAkBI,KAAlB,GAA0BiG,mBAAmB,CAAChG,WAApB,GAAkC,IAA5D;AACD;;AACD,UAAIjI,OAAO,CAAC6E,QAAD,CAAX,EAAuB;AACrBA,QAAAA,QAAQ,CAAC8C,SAAT,CAAmBC,KAAnB,CAAyBI,KAAzB,GAAiCwG,WAAW,CAACvG,WAAZ,GAA0B,IAA3D;AACApD,QAAAA,QAAQ,CAACuJ,MAAT;AACD;AACF,KAZkC,CAArC;AAeAG,IAAAA,kBAAkB,GAAGjM,oBAAoB,CACvC+L,QAAQ,CAACxG,SAD8B,EAEvC,UAFuC,EAGvC,UAAU8G,QAAV,EAAoB;AAClBtI,MAAAA,UAAU,CAACqC,IAAD,EAAOiG,QAAP,CAAV;AACD,KALsC,CAAzC;AAOD,GAjZiC,CAmZlC;AACA;;;AACA,OAAKC,wBAAL,GAAgCnC,uBAAhC;AACA,OAAKoC,uBAAL,GAA+Bb,sBAA/B;AACA,OAAKc,eAAL,GAAuBR,cAAvB;AACA,OAAKS,mBAAL,GAA2BR,kBAA3B;AACA,OAAKS,2BAAL,GAAmC,EAAnC;AACA,OAAKC,mCAAL,GAA2ClP,YAAY,CACrDsI,OAAO,CAAC6G,kCAD6C,EAErD,IAFqD,CAAvD;AAIA,OAAKnH,UAAL,GAAkBJ,SAAlB;AACA,OAAKwH,gBAAL,GAAwBlG,eAAxB;AACA,OAAKmG,QAAL,GAAgBzG,eAAhB;AACA,OAAK0G,aAAL,GAAqBhG,YAArB;AACA,OAAK5B,mBAAL,GAA2BD,kBAA3B;AACA,OAAKD,QAAL,GAAgBD,OAAhB;AACA,OAAKgI,qBAAL,GAA6B5E,oBAA7B;AACA,OAAK6E,4BAAL,GAAoC3E,2BAApC;AACA,OAAK4E,kBAAL,GAA0B3E,iBAA1B;AACA,OAAK4E,eAAL,GAAuBtG,cAAvB;AACA,OAAKuG,sBAAL,GAA8BtG,qBAA9B;AACA,OAAKuG,QAAL,GAAgB/D,OAAhB;AACA,OAAKlF,WAAL,GAAmBD,UAAnB;AACA,OAAKG,gBAAL,GAAwBD,eAAxB;AACA,OAAKG,iBAAL,GAAyBD,gBAAzB;AACA,OAAKG,gBAAL,GAAwBD,eAAxB;AACA,OAAK6I,qBAAL,GAA6BzC,oBAA7B;AACA,OAAKjG,UAAL,GAAkBD,SAAlB;AACA,OAAKE,SAAL,GAAiBtC,QAAjB;AACA,OAAKwC,iBAAL,GAAyBD,gBAAzB;AACA,OAAKc,SAAL,GAAiBmG,QAAjB;AACA,OAAK7H,SAAL,GAAiBD,QAAjB;AACA,OAAKsJ,YAAL,GAAoB/E,WAApB;AACA,OAAKgF,UAAL,GAAkB,CAAlB;AACA,OAAKC,WAAL,GAAmB,CAAnB;AACA,OAAKC,mCAAL,GAA2C,IAA3C;AACA,OAAKC,WAAL,GAAmB1G,SAAnB;AACA,OAAK2G,sBAAL,GAA8BlQ,OAAO,CAACsH,OAAD,CAAP,IAAoBtH,OAAO,CAACwH,kBAAD,CAAzD;AACA,OAAK2I,uBAAL,GAA+B5G,SAA/B;AACA,OAAK6G,cAAL,GAAsB7G,SAAtB;AACA,OAAK8G,wBAAL,GAAgC,KAAhC;AACA,OAAKC,eAAL,GAAuB/G,SAAvB;AACA,OAAK4G,uBAAL,GAA+B5G,SAA/B;AACA,OAAKgH,aAAL,GAAqB,KAArB;AACA,OAAKC,WAAL,GAAmBjH,SAAnB;AACA,OAAKkH,YAAL,GAAoBlH,SAApB;AACA,OAAKmH,YAAL,GAAoBnH,SAApB;AACA,OAAKoH,sBAAL,GAA8B,IAAIxQ,KAAJ,EAA9B;AACA,OAAKyQ,qBAAL,GAA6B,IAAIzQ,KAAJ,EAA7B;AAEAiB,EAAAA,QAAQ,CAACyP,KAAT,CAAe,IAAf,EAAqB,CACnB,gBADmB,EAEnB,iBAFmB,EAGnB,yBAHmB,CAArB,EAtckC,CA4clC;;AACA/F,EAAAA,WAAW,CAACC,GAAZ,CACEL,oBAAoB,CAACoG,eADvB,EAEE1I,MAAM,CAAC6C,SAAP,CAAiB8F,kBAFnB,EAGE,IAHF;AAKAjG,EAAAA,WAAW,CAACC,GAAZ,CACEL,oBAAoB,CAACsG,iBADvB,EAEE5I,MAAM,CAAC6C,SAAP,CAAiBgG,oBAFnB,EAGE,IAHF,EAldkC,CAwdlC;;AACAnG,EAAAA,WAAW,CAACC,GAAZ,CAAgB5G,KAAK,CAAC+M,UAAtB,EAAkC9I,MAAM,CAAC6C,SAAP,CAAiBmD,MAAnD,EAA2D,IAA3D;AACAtD,EAAAA,WAAW,CAACC,GAAZ,CAAgB5G,KAAK,CAACgN,UAAtB,EAAkC/I,MAAM,CAAC6C,SAAP,CAAiBmG,WAAnD,EAAgE,IAAhE,EA1dkC,CA4dlC;AACA;AACA;;AACA,MAAIC,gBAAgB,GAAG3G,oBAAoB,CAAChH,MAA5C;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyN,gBAApB,EAAsCzN,CAAC,EAAvC,EAA2C;AACzC,SAAK0N,gBAAL,CAAsB5G,oBAAtB,EAA4CA,oBAAoB,CAAC6G,GAArB,CAAyB3N,CAAzB,CAA5C;AACD;;AACD,OAAK0N,gBAAL,CAAsB/H,SAAtB,EAAiCsB,iBAAiB,CAAC2G,iBAAnD,EAnekC,CAqelC;;;AACA1G,EAAAA,WAAW,CAACC,GAAZ,CACEL,oBAAoB,CAACoG,eADvB,EAEE1I,MAAM,CAAC6C,SAAP,CAAiBqG,gBAFnB,EAGE,IAHF;AAKAxG,EAAAA,WAAW,CAACC,GAAZ,CACEL,oBAAoB,CAACsG,iBADvB,EAEE5I,MAAM,CAAC6C,SAAP,CAAiBwG,kBAFnB,EAGE,IAHF,EA3ekC,CAiflC;;AACA,WAASC,kBAAT,CAA4B9O,CAA5B,EAA+B;AAC7B,QAAIqD,MAAM,GAAGjC,UAAU,CAAC0E,IAAD,EAAO9F,CAAP,CAAvB;;AACA,QAAI5C,OAAO,CAACiG,MAAD,CAAX,EAAqB;AACnB;AACA,UACEnF,QAAQ,CAAC6Q,mBAAT,CAA6B1L,MAAM,CAAC5B,QAApC,EAA8CqE,IAAI,CAAC7F,KAAL,CAAWC,WAAzD,CADF,EAEE;AACA4F,QAAAA,IAAI,CAACkJ,aAAL,GAAqB3L,MAArB;AACD,OAJD,MAIO;AACLyC,QAAAA,IAAI,CAACxD,MAAL,CAAYe,MAAZ;AACD;AACF,KATD,MASO,IAAIjG,OAAO,CAAC0I,IAAI,CAACkJ,aAAN,CAAX,EAAiC;AACtClJ,MAAAA,IAAI,CAACkJ,aAAL,GAAqBrI,SAArB;AACD;AACF;;AAED,WAASsI,mBAAT,CAA6BjP,CAA7B,EAAgC;AAC9B8F,IAAAA,IAAI,CAAC3C,cAAL,GAAsB/B,UAAU,CAAC0E,IAAD,EAAO9F,CAAP,CAAhC;AACD;;AAEDyG,EAAAA,YAAY,CAACyI,uBAAb,CAAqCC,cAArC,CACEF,mBADF,EAEEtR,oBAAoB,CAACyR,UAFvB;AAIA3I,EAAAA,YAAY,CAACyI,uBAAb,CAAqCC,cAArC,CACEL,kBADF,EAEEnR,oBAAoB,CAAC0R,iBAFvB;AAID;;AAEDC,MAAM,CAACC,gBAAP,CAAwB/J,MAAM,CAAC6C,SAA/B,EAA0C;AACxC;AACF;AACA;AACA;AACA;AACA;AACEtD,EAAAA,SAAS,EAAE;AACT4J,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKxJ,UAAZ;AACD;AAHQ,GAP6B;;AAaxC;AACF;AACA;AACA;AACA;AACA;AACA;AACEkB,EAAAA,eAAe,EAAE;AACfsI,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpC,gBAAZ;AACD;AAHc,GApBuB;;AA0BxC;AACF;AACA;AACA;AACA;AACA;AACE9F,EAAAA,YAAY,EAAE;AACZkI,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAZ;AACD;AAHW,GAhC0B;;AAsCxC;AACF;AACA;AACA;AACA;AACA;AACE7H,EAAAA,kBAAkB,EAAE;AAClB+J,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK9J,mBAAZ;AACD;AAHiB,GA5CoB;;AAkDxC;AACF;AACA;AACA;AACA;AACA;AACEH,EAAAA,OAAO,EAAE;AACPiK,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKhK,QAAZ;AACD;AAHM,GAxD+B;;AA8DxC;AACF;AACA;AACA;AACA;AACA;AACEhB,EAAAA,QAAQ,EAAE;AACRgL,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK/K,SAAZ;AACD;AAHO,GApE8B;;AA0ExC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,UAAU,EAAE;AACV8K,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK7K,WAAZ;AACD;AAHS,GAhF4B;;AAsFxC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE;AACf4K,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK3K,gBAAZ;AACD;AAHc,GA5FuB;;AAkGxC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAE;AAChB0K,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKzK,iBAAZ;AACD;AAHe,GAxGsB;;AA8GxC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE;AACfwK,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKvK,gBAAZ;AACD;AAHc,GApHuB;;AA0HxC;AACF;AACA;AACA;AACA;AACA;AACEmG,EAAAA,oBAAoB,EAAE;AACpBoE,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK3B,qBAAZ;AACD;AAHmB,GAhIkB;;AAsIxC;AACF;AACA;AACA;AACA;AACA;AACE3I,EAAAA,SAAS,EAAE;AACTsK,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKrK,UAAZ;AACD;AAHQ,GA5I6B;;AAkJxC;AACF;AACA;AACA;AACA;AACA;AACErC,EAAAA,QAAQ,EAAE;AACR0M,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpK,SAAZ;AACD;AAHO,GAxJ8B;;AA8JxC;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAE;AAChBmK,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlK,iBAAZ;AACD;AAHe,GApKsB;;AA0KxC;AACF;AACA;AACA;AACA;AACA;AACEgH,EAAAA,QAAQ,EAAE;AACRkD,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKrJ,SAAZ;AACD;AAHO,GAhL8B;;AAsLxC;AACF;AACA;AACA;AACA;AACA;AACE2C,EAAAA,iBAAiB,EAAE;AACjB0G,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK/B,kBAAZ;AACD;AAHgB,GA5LqB;;AAkMxC;AACF;AACA;AACA;AACA;AACA;AACA;AACE4C,EAAAA,QAAQ,EAAE;AACRb,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK/B,kBAAL,CAAwBgC,iBAAxB,CAA0CY,QAAjD;AACD;AAHO,GAzM8B;;AA+MxC;AACF;AACA;AACA;AACA;AACA;AACEzH,EAAAA,WAAW,EAAE;AACX4G,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKjC,qBAAZ;AACD;AAHU,GArN2B;;AA2NxC;AACF;AACA;AACA;AACA;AACA;AACE+C,EAAAA,MAAM,EAAE;AACNd,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBgD,MAA1B;AACD;AAHK,GAjOgC;;AAuOxC;AACF;AACA;AACA;AACA;AACA;AACElO,EAAAA,KAAK,EAAE;AACLoN,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBlL,KAA1B;AACD;AAHI,GA7OiC;;AAmPxC;AACF;AACA;AACA;AACA;AACEkG,EAAAA,OAAO,EAAE;AACPkH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWmO,SAAX,CAAqBhM,OAA5B;AACD,KAHM;AAIPiM,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAKW,KAAL,CAAWmO,SAAX,CAAqBhM,OAArB,GAA+B9C,KAA/B;AACD;AANM,GAxP+B;;AAiQxC;AACF;AACA;AACA;AACA;AACE8G,EAAAA,cAAc,EAAE;AACdiH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWO,KAAX,CAAiB2F,OAAxB;AACD,KAHa;AAIdkI,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAKW,KAAL,CAAWO,KAAX,CAAiB2F,OAAjB,GAA2B7G,KAA3B;AACD;AANa,GAtQwB;;AA+QxC;AACF;AACA;AACA;AACA;AACA;AACE8O,EAAAA,SAAS,EAAE;AACTf,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWmO,SAAlB;AACD;AAHQ,GArR6B;;AA2RxC;AACF;AACA;AACA;AACA;AACA;AACA;AACE3M,EAAAA,aAAa,EAAE;AACb4L,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWwB,aAAlB;AACD;AAHY,GAlSyB;;AAwSxC;AACF;AACA;AACA;AACA;AACA;AACEsH,EAAAA,eAAe,EAAE;AACfsE,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAW8I,eAAlB;AACD,KAHc;AAIfsF,IAAAA,GAAG,EAAE,UAAUtF,eAAV,EAA2B;AAC9B,WAAK9I,KAAL,CAAW8I,eAAX,GAA6BA,eAA7B;AACD;AANc,GA9SuB;;AAuTxC;AACF;AACA;AACA;AACA;AACA;AACA;AACEzH,EAAAA,MAAM,EAAE;AACN+L,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWqB,MAAlB;AACD;AAHK,GA9TgC;;AAoUxC;AACF;AACA;AACA;AACA;AACA;AACA;AACEgN,EAAAA,iBAAiB,EAAE;AACjBjB,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpN,KAAL,CAAWqO,iBAAlB;AACD;AAHgB,GA3UqB;;AAiVxC;AACF;AACA;AACA;AACA;AACA;AACE3P,EAAAA,KAAK,EAAE;AACL0O,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK9B,eAAL,CAAqB5M,KAA5B;AACD;AAHI,GAvViC;;AA6VxC;AACF;AACA;AACA;AACA;AACA;AACEsG,EAAAA,cAAc,EAAE;AACdoI,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAK9B,eAAZ;AACD;AAHa,GAnWwB;;AAyWxC;AACF;AACA;AACA;AACA;AACA;AACEqC,EAAAA,uBAAuB,EAAE;AACvBP,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmByC,uBAA1B;AACD;AAHsB,GA/We;;AAqXxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE/H,EAAAA,eAAe,EAAE;AACfwH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBtF,eAA1B;AACD,KAHc;AAIfwI,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAK6L,aAAL,CAAmBtF,eAAnB,GAAqCvG,KAArC;AACD;AANc,GA9XuB;;AAuYxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEsG,EAAAA,oBAAoB,EAAE;AACpByH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBvF,oBAA1B;AACD,KAHmB;AAIpByI,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAK6L,aAAL,CAAmBvF,oBAAnB,GAA0CtG,KAA1C;AACD;AANmB,GArZkB;;AA8ZxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEiP,EAAAA,eAAe,EAAE;AACflB,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBoD,eAA1B;AACD,KAHc;AAIfF,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAK6L,aAAL,CAAmBoD,eAAnB,GAAqCjP,KAArC;AACD;AANc,GA1auB;;AAmbxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEyG,EAAAA,+BAA+B,EAAE;AAC/BsH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKlC,aAAL,CAAmBpF,+BAA1B;AACD,KAH8B;AAI/BsI,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAK6L,aAAL,CAAmBpF,+BAAnB,GAAqDzG,KAArD;AACD;AAN8B,GA/bO;;AAwcxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEkP,EAAAA,kCAAkC,EAAE;AAClCnB,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKvB,mCAAZ;AACD,KAHiC;AAIlCuC,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,WAAKwM,mCAAL,GAA2CxM,KAA3C;AACD;AANiC,GAldI;;AA2dxC;AACF;AACA;AACA;AACA;AACEoO,EAAAA,aAAa,EAAE;AACbL,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKnB,cAAZ;AACD,KAHY;AAIbmC,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,UAAI,KAAK4M,cAAL,KAAwB5M,KAA5B,EAAmC;AACjC,aAAK4M,cAAL,GAAsB5M,KAAtB,CADiC,CAGjC;;AACAmP,QAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAIxO,KAAK,GAAG,KAAKA,KAAjB;AACA,YAAIuF,SAAS,GAAGvF,KAAK,CAACyO,IAAtB,CAPiC,CASjC;;AACA,YAAI,CAAC5S,OAAO,CAACwD,KAAD,CAAR,IAAmB,CAACxD,OAAO,CAACwD,KAAK,CAACa,QAAP,CAA/B,EAAiD;AAC/C,eAAKgM,wBAAL,GAAgC,KAAhC;;AACA,cACE3G,SAAS,KAAKxI,SAAS,CAAC2R,aAAxB,IACAnJ,SAAS,KAAKxI,SAAS,CAAC4R,OAF1B,EAGE;AACA3O,YAAAA,KAAK,CAAC4O,2BAAN,CAAkCC,eAAlC,GAAoD,IAApD;AACD;;AAED,cACEtJ,SAAS,KAAKxI,SAAS,CAAC2R,aAAxB,IACAnJ,SAAS,KAAKxI,SAAS,CAAC+R,OAF1B,EAGE;AACA9O,YAAAA,KAAK,CAAC4O,2BAAN,CAAkCG,UAAlC,GAA+C,IAA/C;AACD;;AAED,eAAKjD,WAAL,GAAmB1G,SAAnB;AACA,eAAK/D,MAAL,CAAY2N,eAAZ,CAA4B7S,OAAO,CAAC8S,QAApC;AACD,SAlBD,MAkBO;AACL;AACA;AACA,eAAK/C,wBAAL,GAAgC,IAAhC;AACD;;AAED,aAAKO,qBAAL,CAA2ByC,UAA3B,CAAsC7P,KAAtC;;AACA,aAAKW,KAAL,CAAWmP,aAAX;AACD;AACF;AA1CY,GAheyB;;AA4gBxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEvN,EAAAA,cAAc,EAAE;AACdwL,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKjB,eAAZ;AACD,KAHa;AAIdiC,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,UAAI,KAAK8M,eAAL,KAAyB9M,KAA7B,EAAoC;AAClC,aAAK8M,eAAL,GAAuB9M,KAAvB;AACA,YAAI+P,2BAA2B,GAAGvT,OAAO,CAAC,KAAKyH,mBAAN,CAAP,GAC9B,KAAKA,mBAAL,CAAyBI,SADK,GAE9B0B,SAFJ;;AAGA,YAAIvJ,OAAO,CAACwD,KAAD,CAAX,EAAoB;AAClB,cAAIxD,OAAO,CAACuT,2BAAD,CAAX,EAA0C;AACxCA,YAAAA,2BAA2B,CAACC,aAA5B;AACD;AACF,SAJD,MAIO,IAAIxT,OAAO,CAACuT,2BAAD,CAAX,EAA0C;AAC/C;AACAA,UAAAA,2BAA2B,CAACE,aAA5B;AACD;;AACD,aAAK9C,sBAAL,CAA4B0C,UAA5B,CAAuC7P,KAAvC;AACD;AACF;AApBa,GArhBwB;;AA2iBxC;AACF;AACA;AACA;AACA;AACA;AACEkQ,EAAAA,qBAAqB,EAAE;AACrBnC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKZ,sBAAZ;AACD;AAHoB,GAjjBiB;;AAsjBxC;AACF;AACA;AACA;AACA;AACA;AACEgD,EAAAA,oBAAoB,EAAE;AACpBpC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKX,qBAAZ;AACD;AAHmB,GA5jBkB;;AAikBxC;AACF;AACA;AACA;AACA;AACEgD,EAAAA,sBAAsB,EAAE;AACtBrC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKpB,uBAAZ;AACD,KAHqB;AAItBoC,IAAAA,GAAG,EAAE,UAAU/O,KAAV,EAAiB;AACpB,UAAI,KAAK2M,uBAAL,KAAiC3M,KAArC,EAA4C;AAC1C,aAAK2M,uBAAL,GAA+B3M,KAA/B;AACAoB,QAAAA,oBAAoB,CAAC,KAAKuC,SAAN,EAAiB,KAAKtE,KAAtB,EAA6BW,KAA7B,CAApB;AACD;AACF;AATqB;AAtkBgB,CAA1C;AAmlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4E,MAAM,CAAC6C,SAAP,CAAiB4I,MAAjB,GAA0B,UAAUC,KAAV,EAAiBzL,OAAjB,EAA0B;AAClD;AACA,MAAI,CAACrI,OAAO,CAAC8T,KAAD,CAAZ,EAAqB;AACnB,UAAM,IAAI5T,cAAJ,CAAmB,oBAAnB,CAAN;AACD,GAJiD,CAKlD;;;AAEA4T,EAAAA,KAAK,CAAC,IAAD,EAAOzL,OAAP,CAAL;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;;;AACAD,MAAM,CAAC6C,SAAP,CAAiBmD,MAAjB,GAA0B,YAAY;AACpC,MAAI/E,YAAY,GAAG,KAAKgG,aAAxB;AACA,MAAI1H,SAAS,GAAG,KAAKI,UAArB;AACA,MAAIgM,KAAK,GAAGpM,SAAS,CAACM,WAAtB;AACA,MAAI+L,MAAM,GAAGrM,SAAS,CAACsM,YAAvB;AACA,MAAIC,eAAe,GAAGlU,OAAO,CAAC,KAAKkH,UAAN,CAA7B;AACA,MAAIiN,cAAc,GAAGnU,OAAO,CAAC,KAAKmH,SAAN,CAA5B;AAEAkC,EAAAA,YAAY,CAAC+E,MAAb;;AAEA,MAAI2F,KAAK,KAAK,KAAKjE,UAAf,IAA6BkE,MAAM,KAAK,KAAKjE,WAAjD,EAA8D;AAC5D;AACD;;AAED,MAAIqE,cAAc,GAAGJ,MAAM,GAAG,GAA9B;AACA,MAAIvH,uBAAuB,GAAG,KAAKmC,wBAAnC;;AAEA,MAAI5O,OAAO,CAACyM,uBAAD,CAAX,EAAsC;AACpCA,IAAAA,uBAAuB,CAAC7E,KAAxB,CAA8ByM,SAA9B,GAA0CD,cAAc,GAAG,IAA3D;AACD;;AAED,MAAIpU,OAAO,CAAC,KAAKwG,SAAN,CAAX,EAA6B;AAC3B,QAAI8N,mBAAmB,GAAG,KAAK9N,SAAL,CAAe+N,0BAAzC;AACAD,IAAAA,mBAAmB,CAAC1M,KAApB,CAA0ByM,SAA1B,GAAsCD,cAAc,GAAG,IAAvD;AACD;;AAED,MAAIpU,OAAO,CAAC,KAAKuH,QAAN,CAAX,EAA4B;AAC1B,SAAKA,QAAL,CAAcM,SAAd,CAAwBwM,SAAxB,GAAoCD,cAApC;AACD;;AAED,MAAIvP,QAAQ,GAAG,KAAKsC,SAApB;AACA,MAAI0G,kBAAJ;AACA,MAAI2G,cAAc,GAAG,CAArB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,YAAY,GAAG,CAAnB;;AAEA,MACER,eAAe,IACf7G,MAAM,CAACsH,gBAAP,CAAwB,KAAKzN,UAAL,CAAgBS,SAAxC,EAAmDD,UAAnD,KAAkE,QAFpE,EAGE;AACA,QAAIkN,SAAS,GAAG,KAAK9E,UAArB;AACAjC,IAAAA,kBAAkB,GAAG,KAAK3G,UAAL,CAAgBS,SAArC;;AACA,QAAIoM,KAAK,GAAG,GAAZ,EAAiB;AACfS,MAAAA,cAAc,GAAG,GAAjB;;AACA,UAAII,SAAS,IAAI,GAAjB,EAAsB;AACpB/G,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBmM,KAAzB,GAAiC,OAAjC;AACAlG,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBoM,MAAzB,GAAkC,OAAlC;;AACA,aAAK9M,UAAL,CAAgBkH,MAAhB;AACD;AACF,KAPD,MAOO,IAAI2F,KAAK,IAAI,GAAb,EAAkB;AACvBS,MAAAA,cAAc,GAAG,GAAjB;;AACA,UAAII,SAAS,GAAG,GAAZ,IAAmBA,SAAS,GAAG,GAAnC,EAAwC;AACtC/G,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBmM,KAAzB,GAAiC,OAAjC;AACAlG,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBoM,MAAzB,GAAkC,MAAlC;;AACA,aAAK9M,UAAL,CAAgBkH,MAAhB;AACD;AACF,KAPM,MAOA;AACLoG,MAAAA,cAAc,GAAG,GAAjB;;AACA,UAAII,SAAS,GAAG,GAAZ,IAAmBA,SAAS,KAAK,CAArC,EAAwC;AACtC/G,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBmM,KAAzB,GAAiC,OAAjC;AACAlG,QAAAA,kBAAkB,CAACjG,KAAnB,CAAyBoM,MAAzB,GAAkC,MAAlC;;AACA,aAAK9M,UAAL,CAAgBkH,MAAhB;AACD;AACF;;AACDqG,IAAAA,UAAU,GAAGD,cAAc,GAAG,CAA9B;AACD;;AAED,MACEL,cAAc,IACd9G,MAAM,CAACsH,gBAAP,CAAwB,KAAKxN,SAAL,CAAeQ,SAAvC,EAAkDD,UAAlD,KAAiE,QAFnE,EAGE;AACA,QAAIN,gBAAgB,GAAG,KAAKC,iBAA5B;AACA,QAAIgH,QAAQ,GAAG,KAAKnG,SAApB;AACA,QAAI4F,iBAAiB,GAAGjJ,QAAQ,CAAC8C,SAAjC;AACA,QAAIkN,aAAa,GAAG/G,iBAAiB,CAAClG,KAAtC;AAEA8M,IAAAA,YAAY,GAAG5G,iBAAiB,CAACmG,YAAlB,GAAiC,CAAhD;AACAY,IAAAA,aAAa,CAACC,IAAd,GAAqBN,cAAc,GAAG,IAAtC;AAEA,QAAIO,MAAM,GAAG,CAAb;;AACA,QAAI/U,OAAO,CAACoH,gBAAD,CAAX,EAA+B;AAC7B2N,MAAAA,MAAM,IAAI3N,gBAAgB,CAACO,SAAjB,CAA2BM,WAArC;AACD;;AACD,QAAIjI,OAAO,CAACqO,QAAD,CAAX,EAAuB;AACrB0G,MAAAA,MAAM,IAAI1G,QAAQ,CAAC1G,SAAT,CAAmBM,WAA7B;AACD;;AAED4M,IAAAA,aAAa,CAAC7M,KAAd,GAAsB+M,MAAM,GAAG,IAA/B;AACAlQ,IAAAA,QAAQ,CAACuJ,MAAT;AACD;;AAED,OAAKe,gBAAL,CAAsBvH,KAAtB,CAA4BkN,IAA5B,GAAmCL,UAAU,GAAG,IAAhD;AACA,OAAKtF,gBAAL,CAAsBvH,KAAtB,CAA4BoN,MAA5B,GAAqCN,YAAY,GAAG,IAApD;AAEA,OAAK5E,UAAL,GAAkBiE,KAAlB;AACA,OAAKhE,WAAL,GAAmBiE,MAAnB;AACD,CAhGD;AAkGA;AACA;AACA;AACA;;;AACA5L,MAAM,CAAC6C,SAAP,CAAiB9C,WAAjB,GAA+B,YAAY;AACzC,OAAK2H,UAAL,GAAkB,CAAlB;AACA,OAAK1B,MAAL;AACD,CAHD;AAKA;AACA;AACA;AACA;;;AACAhG,MAAM,CAAC6C,SAAP,CAAiBgK,MAAjB,GAA0B,YAAY;AACpC,OAAK5F,aAAL,CAAmB4F,MAAnB;AACD,CAFD;AAIA;AACA;AACA;;;AACA7M,MAAM,CAAC6C,SAAP,CAAiBiK,WAAjB,GAA+B,YAAY;AACzC,SAAO,KAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;;;AACA9M,MAAM,CAAC6C,SAAP,CAAiBkK,OAAjB,GAA2B,YAAY;AACrC,MAAIvR,CAAJ;AAEA,OAAKkO,uBAAL,CAA6BsD,iBAA7B,CACE7U,oBAAoB,CAACyR,UADvB;AAGA,OAAKF,uBAAL,CAA6BsD,iBAA7B,CACE7U,oBAAoB,CAAC0R,iBADvB,EANqC,CAUrC;;AACA,MAAItH,WAAW,GAAG,KAAKA,WAAvB;AACA,MAAI0G,gBAAgB,GAAG1G,WAAW,CAACjH,MAAnC;;AACA,OAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyN,gBAAhB,EAAkCzN,CAAC,EAAnC,EAAuC;AACrC,SAAK6N,kBAAL,CAAwB9G,WAAxB,EAAqCA,WAAW,CAAC4G,GAAZ,CAAgB3N,CAAhB,CAArC;AACD;;AACD,OAAK6N,kBAAL,CAAwBlI,SAAxB,EAAmC,KAAKiG,kBAAL,CAAwBgC,iBAA3D;;AAEA,OAAKzJ,UAAL,CAAgBsN,WAAhB,CAA4B,KAAKjG,QAAjC;;AACA,OAAKA,QAAL,CAAciG,WAAd,CAA0B,KAAK1F,QAA/B;;AAEA,OAAKE,YAAL,CAAkB9C,SAAlB;;AAEA,MAAI/M,OAAO,CAAC,KAAKwG,SAAN,CAAX,EAA6B;AAC3B,SAAKA,SAAL,GAAiB,KAAKA,SAAL,CAAe2O,OAAf,EAAjB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAK0G,WAAN,CAAX,EAA+B;AAC7B,SAAKA,WAAL,GAAmB,KAAKA,WAAL,CAAiByO,OAAjB,EAAnB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAK4G,gBAAN,CAAX,EAAoC;AAClC,SAAKA,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBuO,OAAtB,EAAxB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAK8G,iBAAN,CAAX,EAAqC;AACnC,SAAKA,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBqO,OAAvB,EAAzB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKgH,gBAAN,CAAX,EAAoC;AAClC,SAAKA,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBmO,OAAtB,EAAxB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKkH,UAAN,CAAX,EAA8B;AAC5B,SAAKkI,QAAL,CAAciG,WAAd,CAA0B,KAAKnO,UAAL,CAAgBS,SAA1C;;AACA,SAAKT,UAAL,GAAkB,KAAKA,UAAL,CAAgBiO,OAAhB,EAAlB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKmH,SAAN,CAAX,EAA6B;AAC3B,SAAKA,SAAL,CAAemO,mBAAf,CACE,SADF,EAEE3S,uBAFF,EAGE,KAHF;;AAKA,SAAKyM,QAAL,CAAciG,WAAd,CAA0B,KAAKlO,SAAL,CAAeQ,SAAzC;;AACA,SAAKR,SAAL,GAAiB,KAAKA,SAAL,CAAegO,OAAf,EAAjB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKqH,iBAAN,CAAX,EAAqC;AACnC,SAAKwH,uBAAL,CAA6B0G,OAA7B;;AACA,SAAKnG,QAAL,CAAciG,WAAd,CAA0B,KAAKhO,iBAAL,CAAuBM,SAAjD;;AACA,SAAKN,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB8N,OAAvB,EAAzB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKkI,SAAN,CAAX,EAA6B;AAC3B,SAAK4G,eAAL,CAAqByG,OAArB;;AACA,SAAKxG,mBAAL,CAAyBwG,OAAzB;;AACA,SAAKnG,QAAL,CAAciG,WAAd,CAA0B,KAAKnN,SAAL,CAAeP,SAAzC;;AACA,SAAKO,SAAL,GAAiB,KAAKA,SAAL,CAAeiN,OAAf,EAAjB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKuH,QAAN,CAAX,EAA4B;AAC1B,SAAK6H,QAAL,CAAciG,WAAd,CAA0B,KAAK9N,QAAL,CAAcI,SAAxC;;AACA,SAAKJ,QAAL,GAAgB,KAAKA,QAAL,CAAc4N,OAAd,EAAhB;AACD;;AAED,MAAInV,OAAO,CAAC,KAAKyH,mBAAN,CAAX,EAAuC;AACrC,SAAK2H,QAAL,CAAciG,WAAd,CAA0B,KAAK5N,mBAAL,CAAyBE,SAAnD;;AACA,SAAKF,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB0N,OAAzB,EAA3B;AACD;;AAED,MAAI,KAAKzF,sBAAT,EAAiC;AAC/B,SAAKD,eAAL,GAAuB,KAAKA,eAAL,CAAqB0F,OAArB,EAAvB;AACD;;AACD,OAAK3F,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB2F,OAAxB,EAA1B;AACA,OAAK9F,aAAL,GAAqB,KAAKA,aAAL,CAAmB8F,OAAnB,EAArB;;AAEA,MAAI,KAAK5F,4BAAT,EAAuC;AACrC,SAAKD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2B6F,OAA3B,EAA7B;AACD;;AAED,SAAOlV,aAAa,CAAC,IAAD,CAApB;AACD,CA5FD;AA8FA;AACA;AACA;;;AACAmI,MAAM,CAAC6C,SAAP,CAAiBqG,gBAAjB,GAAoC,UAClC5G,oBADkC,EAElC5F,UAFkC,EAGlC;AACA,MAAI0Q,gBAAgB,GAAG1Q,UAAU,CAACsN,QAAlC;AACAoD,EAAAA,gBAAgB,CAACC,iBAAjB,CAAmC1H,gBAAnC,CACE3F,MAAM,CAAC6C,SAAP,CAAiByK,0BADnB,EAEE,IAFF;AAID,CATD;AAWA;AACA;AACA;;;AACAtN,MAAM,CAAC6C,SAAP,CAAiBwG,kBAAjB,GAAsC,UACpC/G,oBADoC,EAEpC5F,UAFoC,EAGpC;AACA,MAAI0Q,gBAAgB,GAAG1Q,UAAU,CAACsN,QAAlC;AACAoD,EAAAA,gBAAgB,CAACC,iBAAjB,CAAmCH,mBAAnC,CACElN,MAAM,CAAC6C,SAAP,CAAiByK,0BADnB,EAEE,IAFF;;AAKA,MAAI1V,OAAO,CAAC,KAAK4R,aAAN,CAAX,EAAiC;AAC/B,QACE4D,gBAAgB,CAACG,OAAjB,CAAyB,KAAK/D,aAAL,CAAmBtN,EAA5C,MAAoD,KAAKsN,aAD3D,EAEE;AACA,WAAKA,aAAL,GAAqBrI,SAArB;AACD;AACF;;AAED,MAAIvJ,OAAO,CAAC,KAAK+F,cAAN,CAAX,EAAkC;AAChC,QACEyP,gBAAgB,CAACG,OAAjB,CAAyB,KAAK5P,cAAL,CAAoBzB,EAA7C,MAAqD,KAAKyB,cAD5D,EAEE;AACA,WAAKA,cAAL,GAAsBwD,SAAtB;AACD;AACF;AACF,CAzBD;AA2BA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiBC,OAAjB,GAA2B,UAAUrI,KAAV,EAAiB;AAC1C,MAAI+S,IAAI,GAAG/S,KAAK,CAACC,WAAjB;;AAEA,MAAI+S,SAAS,GAAG,KAAKrG,kBAAL,CAAwBsG,MAAxB,CAA+BF,IAA/B,CAAhB;;AACA,MAAI,KAAK5F,mCAAT,EAA8C;AAC5C,SAAKP,eAAL,CAAqBsG,UAArB,GAAkCF,SAAlC;AACD;;AAED,MAAIG,UAAU,GAAG,KAAK/F,WAAtB;;AACA,MAAIjQ,OAAO,CAACgW,UAAD,CAAX,EAAyB;AACvB,QAAIpE,aAAa,GAAG,KAAKxB,cAAzB;;AACA,QAAI6F,YAAY,GAAG,KAAKzG,kBAAL,CAAwB0G,iBAAxB,CACjBtE,aADiB,EAEjB,KAFiB,EAGjBlP,qBAHiB,CAAnB;;AAKA,QAAIuT,YAAY,KAAKzV,mBAAmB,CAAC2V,IAAzC,EAA+C;AAC7CH,MAAAA,UAAU,CAACF,MAAX,CAAkBF,IAAlB,EAAwBlT,qBAAxB;AACD;AACF;;AAED,MAAI2B,QAAJ;AACA,MAAI+R,YAAY,GAAG,KAAnB;AACA,MAAIrQ,cAAc,GAAG,KAAKA,cAA1B;;AACA,MAAIsQ,aAAa,GAAGrW,OAAO,CAAC+F,cAAD,CAAP,IAA2B,KAAKmK,sBAApD;;AAEA,MACEmG,aAAa,IACbtQ,cAAc,CAACuQ,SADf,IAEAvQ,cAAc,CAACwQ,WAAf,CAA2BX,IAA3B,CAHF,EAIE;AACA,QAAIY,KAAK,GAAG,KAAKhH,kBAAL,CAAwB0G,iBAAxB,CACVnQ,cADU,EAEV,IAFU,EAGVrD,qBAHU,CAAZ;;AAKA,QAAI8T,KAAK,KAAKhW,mBAAmB,CAACiW,MAAlC,EAA0C;AACxCpS,MAAAA,QAAQ,GAAG3B,qBAAqB,CAACgU,MAAjC;AACD,KAFD,MAEO,IAAI1W,OAAO,CAAC+F,cAAc,CAAC1B,QAAhB,CAAX,EAAsC;AAC3CA,MAAAA,QAAQ,GAAG0B,cAAc,CAAC1B,QAAf,CAAwBW,QAAxB,CAAiC4Q,IAAjC,EAAuCvR,QAAvC,CAAX;AACD;;AACD+R,IAAAA,YAAY,GAAGpW,OAAO,CAACqE,QAAD,CAAtB;AACD;;AAED,MAAIkP,2BAA2B,GAAGvT,OAAO,CAAC,KAAKyH,mBAAN,CAAP,GAC9B,KAAKA,mBAAL,CAAyBI,SADK,GAE9B0B,SAFJ;;AAGA,MAAIvJ,OAAO,CAACuT,2BAAD,CAAX,EAA0C;AACxCA,IAAAA,2BAA2B,CAAClP,QAA5B,GAAuCzE,UAAU,CAAC+W,KAAX,CACrCtS,QADqC,EAErCkP,2BAA2B,CAAClP,QAFS,CAAvC;AAIAkP,IAAAA,2BAA2B,CAAC8C,aAA5B,GAA4CA,aAAa,IAAID,YAA7D;AACA7C,IAAAA,2BAA2B,CAACuC,MAA5B;AACD;;AAED,MAAIvK,gBAAgB,GAAGvL,OAAO,CAAC,KAAKuH,QAAN,CAAP,GACnB,KAAKA,QAAL,CAAcM,SADK,GAEnB0B,SAFJ;;AAGA,MAAIvJ,OAAO,CAACuL,gBAAD,CAAX,EAA+B;AAC7BA,IAAAA,gBAAgB,CAACqL,QAAjB,GAA4BP,aAA5B;AACA9K,IAAAA,gBAAgB,CAAC6K,YAAjB,GAAgCA,YAAhC;AACA7K,IAAAA,gBAAgB,CAACsL,gBAAjB,GACE,KAAKjF,aAAL,KAAuB,KAAK7L,cAD9B;;AAGA,QAAIsQ,aAAJ,EAAmB;AACjB9K,MAAAA,gBAAgB,CAACuL,SAAjB,GAA6B/W,YAAY,CACvCgG,cAAc,CAACvB,IADwB,EAEvCuB,cAAc,CAACzB,EAFwB,CAAzC;AAIAiH,MAAAA,gBAAgB,CAAC9G,WAAjB,GAA+B3D,QAAQ,CAACiW,iBAAT,CAC7BhR,cAAc,CAACtB,WADc,EAE7BmR,IAF6B,EAG7B,EAH6B,CAA/B;AAKD,KAVD,MAUO;AACLrK,MAAAA,gBAAgB,CAACuL,SAAjB,GAA6B,EAA7B;AACAvL,MAAAA,gBAAgB,CAAC9G,WAAjB,GAA+B,EAA/B;AACD;AACF;AACF,CAhFD;AAkFA;AACA;AACA;;;AACA2D,MAAM,CAAC6C,SAAP,CAAiByK,0BAAjB,GAA8C,UAC5CsB,UAD4C,EAE5CC,KAF4C,EAG5CC,OAH4C,EAI5C;AACA,MAAIxT,MAAM,GAAGwT,OAAO,CAACxT,MAArB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/B,QAAIuT,aAAa,GAAGD,OAAO,CAACtT,CAAD,CAA3B;;AACA,QAAI,KAAKgO,aAAL,KAAuBuF,aAA3B,EAA0C;AACxC,WAAKvF,aAAL,GAAqBrI,SAArB;AACD;;AACD,QAAI,KAAKxD,cAAL,KAAwBoR,aAA5B,EAA2C;AACzC,WAAKpR,cAAL,GAAsBwD,SAAtB;AACD;AACF;AACF,CAfD;AAiBA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiBQ,uBAAjB,GAA2C,UAAUF,gBAAV,EAA4B;AACrE,MACEA,gBAAgB,CAACsL,gBAAjB,IACA,KAAKjF,aAAL,KAAuB,KAAK7L,cAF9B,EAGE;AACA,SAAK6L,aAAL,GAAqBrI,SAArB;AACD,GALD,MAKO;AACL,QAAIxD,cAAc,GAAG,KAAKA,cAA1B;AACA,QAAI1B,QAAQ,GAAG0B,cAAc,CAAC1B,QAA9B;;AACA,QAAIrE,OAAO,CAACqE,QAAD,CAAX,EAAuB;AACrB,WAAKuN,aAAL,GAAqB,KAAK7L,cAA1B;AACD,KAFD,MAEO;AACL,WAAKb,MAAL,CAAY,KAAKa,cAAjB;AACD;AACF;AACF,CAfD;AAiBA;AACA;AACA;;;AACAqC,MAAM,CAAC6C,SAAP,CAAiBG,mBAAjB,GAAuC,YAAY;AACjD,OAAKwG,aAAL,GAAqBrI,SAArB;AACD,CAFD;AAIA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiBU,sBAAjB,GAA0C,UAAUJ,gBAAV,EAA4B;AACpE,OAAKxF,cAAL,GAAsBwD,SAAtB;AACD,CAFD;AAIA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiBmB,aAAjB,GAAiC,YAAY;AAC3C,OAAKwF,aAAL,GAAqBrI,SAArB;AACA,OAAKxD,cAAL,GAAsBwD,SAAtB;AACD,CAHD;AAKA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiBmM,oBAAjB,GAAwC,UAAUtS,UAAV,EAAsB;AAC5D,MAAI,KAAK8O,sBAAL,KAAgC9O,UAApC,EAAgD;AAC9CF,IAAAA,oBAAoB,CAAC,KAAKC,QAAN,EAAgB,KAAKhC,KAArB,EAA4BiC,UAA5B,CAApB;AACD;AACF,CAJD;AAMA;AACA;AACA;;;AACAsD,MAAM,CAAC6C,SAAP,CAAiB8F,kBAAjB,GAAsC,UACpCrG,oBADoC,EAEpC5F,UAFoC,EAGpC;AACA,MAAI,KAAKmK,mCAAT,EAA8C;AAC5C,SAAK2E,sBAAL,GAA8B9O,UAA9B;AACD;;AACD,MAAIR,EAAE,GAAGQ,UAAU,CAACsN,QAAX,CAAoB9N,EAA7B;;AACA,MAAI+S,WAAW,GAAG,KAAKxH,YAAL,CAAkB9E,GAAlB,CAChBjG,UAAU,CAACwS,YADK,EAEhBlP,MAAM,CAAC6C,SAAP,CAAiBmM,oBAFD,EAGhB,IAHgB,CAAlB;;AAKA,OAAKpI,2BAAL,CAAiC1K,EAAjC,IAAuC+S,WAAvC;AACD,CAdD;AAgBA;AACA;AACA;;;AACAjP,MAAM,CAAC6C,SAAP,CAAiBgG,oBAAjB,GAAwC,UACtCvG,oBADsC,EAEtC5F,UAFsC,EAGtC;AACA,MAAIyS,UAAU,GAAG,KAAK3D,sBAAL,KAAgC9O,UAAjD;AACA,MAAIR,EAAE,GAAGQ,UAAU,CAACsN,QAAX,CAAoB9N,EAA7B;;AACA,OAAK0K,2BAAL,CAAiC1K,EAAjC;;AACA,OAAK0K,2BAAL,CAAiC1K,EAAjC,IAAuCiF,SAAvC;;AACA,MAAIgO,UAAJ,EAAgB;AACd,QAAIC,cAAc,GAAG9M,oBAAoB,CAAChH,MAA1C;;AACA,QAAI,KAAKuL,mCAAL,IAA4CuI,cAAc,GAAG,CAAjE,EAAoE;AAClE,WAAK5D,sBAAL,GAA8BlJ,oBAAoB,CAAC6G,GAArB,CAC5BiG,cAAc,GAAG,CADW,CAA9B;AAGD,KAJD,MAIO;AACL,WAAK5D,sBAAL,GAA8BrK,SAA9B;AACD;AACF;AACF,CAlBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnB,MAAM,CAAC6C,SAAP,CAAiB/F,MAAjB,GAA0B,UAAUuS,MAAV,EAAkBC,MAAlB,EAA0B;AAClD,MAAIrP,OAAO,GAAG;AACZqP,IAAAA,MAAM,EAAEA;AADI,GAAd;AAGA,SAAOC,WAAW,CAAC,IAAD,EAAOF,MAAP,EAAepP,OAAf,EAAwB,KAAxB,CAAlB;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,MAAM,CAAC6C,SAAP,CAAiB2M,KAAjB,GAAyB,UAAUH,MAAV,EAAkBpP,OAAlB,EAA2B;AAClD,SAAOsP,WAAW,CAAC,IAAD,EAAOF,MAAP,EAAepP,OAAf,EAAwB,IAAxB,CAAlB;AACD,CAFD;;AAIA,SAASsP,WAAT,CAAqBjP,IAArB,EAA2BmP,UAA3B,EAAuCxP,OAAvC,EAAgDyP,QAAhD,EAA0D;AACxD;AACA,MAAI,CAAC9X,OAAO,CAAC6X,UAAD,CAAZ,EAA0B;AACxB,UAAM,IAAI3X,cAAJ,CAAmB,yBAAnB,CAAN;AACD,GAJuD,CAKxD;;;AAEAyS,EAAAA,UAAU,CAACjK,IAAD,CAAV,CAPwD,CASxD;AACA;AACA;AACA;;AACA,MAAIqP,WAAW,GAAG1W,IAAI,CAAC2W,KAAL,EAAlB;AACAtP,EAAAA,IAAI,CAAC+H,YAAL,GAAoBsH,WAApB;AACArP,EAAAA,IAAI,CAAC6H,aAAL,GAAqBuH,QAArB;AACApP,EAAAA,IAAI,CAACgI,YAAL,GAAoBrI,OAApB;AAEAhH,EAAAA,IAAI,CAACwW,UAAD,EAAa,UAAUA,UAAV,EAAsB;AACrC;AACA,QAAInP,IAAI,CAAC+H,YAAL,KAAsBsH,WAA1B,EAAuC;AACrC;AACD,KAJoC,CAMrC;;;AACA,QAAIF,UAAU,YAAY5W,YAA1B,EAAwC;AACtC4W,MAAAA,UAAU,CACPI,oBADH,GAEGC,IAFH,CAEQ,UAAUC,SAAV,EAAqB;AACzB,eAAOnX,gCAAgC,CAACmX,SAAD,EAAYzP,IAAI,CAACvE,KAAjB,CAAvC;AACD,OAJH,EAKG+T,IALH,CAKQ,UAAU7T,QAAV,EAAoB;AACxB;AACA,YAAIqE,IAAI,CAAC+H,YAAL,KAAsBsH,WAA1B,EAAuC;AACrCrP,UAAAA,IAAI,CAAC8H,WAAL,GAAmBnM,QAAnB;AACD;AACF,OAVH;AAWA;AACD,KApBoC,CAsBrC;;;AACA,QAAIwT,UAAU,YAAY9W,eAA1B,EAA2C;AACzC2H,MAAAA,IAAI,CAAC8H,WAAL,GAAmBqH,UAAnB;AACA;AACD,KA1BoC,CA4BrC;;;AACA,QAAIA,UAAU,YAAY1W,qBAA1B,EAAiD;AAC/CuH,MAAAA,IAAI,CAAC8H,WAAL,GAAmBqH,UAAnB;AACA;AACD,KAhCoC,CAkCrC;;;AACA,QAAIA,UAAU,CAACO,SAAX,IAAwBpY,OAAO,CAAC6X,UAAU,CAACQ,YAAZ,CAAnC,EAA8D;AAC5D,UAAIC,WAAW,GAAGT,UAAU,CAACQ,YAAX,CAAwBtK,gBAAxB,CAAyC,YAAY;AACrEuK,QAAAA,WAAW,GAD0D,CAGrE;;AACA,YAAI5P,IAAI,CAAC+H,YAAL,KAAsBsH,WAA1B,EAAuC;AACrCrP,UAAAA,IAAI,CAAC8H,WAAL,GAAmBqH,UAAU,CAACzF,QAAX,CAAoBmG,MAApB,CAA2BC,KAA3B,CAAiC,CAAjC,CAAnB;AACD;AACF,OAPiB,CAAlB;AAQA;AACD,KA7CoC,CA+CrC;;;AACA,QAAIzM,KAAK,CAACC,OAAN,CAAc6L,UAAd,CAAJ,EAA+B;AAC7BnP,MAAAA,IAAI,CAAC8H,WAAL,GAAmBqH,UAAU,CAACW,KAAX,CAAiB,CAAjB,CAAnB;AACA;AACD,KAnDoC,CAqDrC;;;AACAX,IAAAA,UAAU,GAAG9X,YAAY,CAAC8X,UAAU,CAACU,MAAZ,EAAoBV,UAApB,CAAzB,CAtDqC,CAwDrC;;AACA,QAAI7X,OAAO,CAAC6X,UAAU,CAACzF,QAAZ,CAAX,EAAkC;AAChCyF,MAAAA,UAAU,GAAGA,UAAU,CAACzF,QAAX,CAAoBmG,MAAjC;AACD,KA3DoC,CA6DrC;;;AACA,QAAIxM,KAAK,CAACC,OAAN,CAAc6L,UAAd,CAAJ,EAA+B;AAC7BnP,MAAAA,IAAI,CAAC8H,WAAL,GAAmBqH,UAAU,CAACW,KAAX,CAAiB,CAAjB,CAAnB;AACD,KAFD,MAEO;AACL;AACA9P,MAAAA,IAAI,CAAC8H,WAAL,GAAmB,CAACqH,UAAD,CAAnB;AACD;AACF,GApEG,CAAJ;AAsEAnP,EAAAA,IAAI,CAACvE,KAAL,CAAWmP,aAAX;AACA,SAAOyE,WAAW,CAACU,OAAnB;AACD;;AAED,SAASC,SAAT,CAAmBzU,MAAnB,EAA2B;AACzBA,EAAAA,MAAM,CAACwM,YAAP,GAAsBlH,SAAtB;AACAtF,EAAAA,MAAM,CAACuM,WAAP,GAAqBjH,SAArB;AACAtF,EAAAA,MAAM,CAACyM,YAAP,GAAsBnH,SAAtB;AACD;;AAED,SAASoJ,UAAT,CAAoB1O,MAApB,EAA4B;AAC1B,MAAI8T,WAAW,GAAG9T,MAAM,CAACwM,YAAzB;;AACA,MAAIzQ,OAAO,CAAC+X,WAAD,CAAX,EAA0B;AACxBW,IAAAA,SAAS,CAACzU,MAAD,CAAT;AACA8T,IAAAA,WAAW,CAACY,OAAZ,CAAoB,KAApB;AACD;AACF;AAED;AACA;AACA;;;AACAvQ,MAAM,CAAC6C,SAAP,CAAiBmG,WAAjB,GAA+B,YAAY;AACzCwH,EAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,EAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,CAHD;;AAKA,SAASD,gBAAT,CAA0B3U,MAA1B,EAAkC;AAChC,MAAIwT,MAAM,GAAGxT,MAAM,CAACuM,WAApB;;AACA,MAAI,CAACxQ,OAAO,CAACyX,MAAD,CAAR,IAAoBxT,MAAM,CAACE,KAAP,CAAayO,IAAb,KAAsB1R,SAAS,CAAC4X,QAAxD,EAAkE;AAChE;AACD;;AAED,MAAI3U,KAAK,GAAGF,MAAM,CAACE,KAAnB;AACA,MAAIqB,MAAM,GAAGrB,KAAK,CAACqB,MAAnB;AACA,MAAIuS,WAAW,GAAG9T,MAAM,CAACwM,YAAzB;AACA,MAAIsI,WAAW,GAAGhZ,YAAY,CAACkE,MAAM,CAACyM,YAAR,EAAsB,EAAtB,CAA9B;AACA,MAAIrI,OAAJ;AACA,MAAI2Q,cAAJ,CAXgC,CAahC;;AACA,MAAIvB,MAAM,YAAY1W,eAAtB,EAAuC;AACrC,WAAO0W,MAAM,CAACwB,YAAP,CAAoBf,IAApB,CAAyB,YAAY;AAC1C,UAAIc,cAAc,GAAGvB,MAAM,CAACuB,cAA5B,CAD0C,CAE1C;;AACA,UAAI,CAAChZ,OAAO,CAAC+Y,WAAW,CAACrB,MAAb,CAAZ,EAAkC;AAChCqB,QAAAA,WAAW,CAACrB,MAAZ,GAAqB,IAAIrX,iBAAJ,CACnB,GADmB,EAEnB,CAAC,GAFkB,EAGnB2Y,cAAc,CAACE,MAHI,CAArB;AAKD;;AAED7Q,MAAAA,OAAO,GAAG;AACRqP,QAAAA,MAAM,EAAEqB,WAAW,CAACrB,MADZ;AAERyB,QAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAFd;AAGRC,QAAAA,aAAa,EAAEL,WAAW,CAACK,aAHnB;AAIRC,QAAAA,QAAQ,EAAE,YAAY;AACpBtB,UAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD,SANO;AAORW,QAAAA,MAAM,EAAE,YAAY;AAClBvB,UAAAA,WAAW,CAACY,OAAZ,CAAoB,KAApB;AACD;AATO,OAAV;;AAYA,UAAI1U,MAAM,CAACsM,aAAX,EAA0B;AACxB/K,QAAAA,MAAM,CAAC+T,mBAAP,CAA2B9B,MAAM,CAACuB,cAAlC,EAAkD3Q,OAAlD;AACD,OAFD,MAEO;AACL7C,QAAAA,MAAM,CAACgU,kBAAP,CAA0BR,cAA1B,EAA0CD,WAAW,CAACrB,MAAtD;AACAlS,QAAAA,MAAM,CAAC2N,eAAP,CAAuB7S,OAAO,CAAC8S,QAA/B,EAFK,CAIL;;AACA2E,QAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD;;AAEDD,MAAAA,SAAS,CAACzU,MAAD,CAAT;AACD,KAlCM,CAAP;AAmCD,GAlD+B,CAoDhC;;;AACA,MAAIwT,MAAM,YAAYtW,qBAAtB,EAA6C;AAC3C,WAAOsW,MAAM,CAACwB,YAAP,CAAoBf,IAApB,CAAyB,YAAY;AAC1C,UAAIc,cAAc,GAAGvB,MAAM,CAACuB,cAA5B,CAD0C,CAE1C;;AACA,UAAI,CAAChZ,OAAO,CAAC+Y,WAAW,CAACrB,MAAb,CAAZ,EAAkC;AAChCqB,QAAAA,WAAW,CAACrB,MAAZ,GAAqB,IAAIrX,iBAAJ,CACnB,GADmB,EAEnB,CAAC,GAFkB,EAGnB2Y,cAAc,CAACE,MAHI,CAArB;AAKD;;AAED7Q,MAAAA,OAAO,GAAG;AACRqP,QAAAA,MAAM,EAAEqB,WAAW,CAACrB,MADZ;AAERyB,QAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAFd;AAGRC,QAAAA,aAAa,EAAEL,WAAW,CAACK,aAHnB;AAIRC,QAAAA,QAAQ,EAAE,YAAY;AACpBtB,UAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD,SANO;AAORW,QAAAA,MAAM,EAAE,YAAY;AAClBvB,UAAAA,WAAW,CAACY,OAAZ,CAAoB,KAApB;AACD;AATO,OAAV;;AAYA,UAAI1U,MAAM,CAACsM,aAAX,EAA0B;AACxB/K,QAAAA,MAAM,CAAC+T,mBAAP,CAA2BP,cAA3B,EAA2C3Q,OAA3C;AACD,OAFD,MAEO;AACL7C,QAAAA,MAAM,CAACgU,kBAAP,CAA0BR,cAA1B,EAA0CD,WAAW,CAACrB,MAAtD;AACAlS,QAAAA,MAAM,CAAC2N,eAAP,CAAuB7S,OAAO,CAAC8S,QAA/B,EAFK,CAIL;;AACA2E,QAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD;;AAEDD,MAAAA,SAAS,CAACzU,MAAD,CAAT;AACD,KAlCM,CAAP;AAmCD,GAzF+B,CA2FhC;;;AACA,MAAIwT,MAAM,YAAY5X,YAAtB,EAAoC;AAClCwI,IAAAA,OAAO,GAAG;AACRoR,MAAAA,WAAW,EAAEtV,KAAK,CAACwF,aAAN,CAAoBxD,SAApB,CAA8BC,uBAA9B,CACXqR,MADW,CADL;AAIR0B,MAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAJd;AAKRC,MAAAA,aAAa,EAAEL,WAAW,CAACK,aALnB;AAMRC,MAAAA,QAAQ,EAAE,YAAY;AACpBtB,QAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD,OARO;AASRW,MAAAA,MAAM,EAAE,YAAY;AAClBvB,QAAAA,WAAW,CAACY,OAAZ,CAAoB,KAApB;AACD;AAXO,KAAV;;AAcA,QAAI1U,MAAM,CAACsM,aAAX,EAA0B;AACxB/K,MAAAA,MAAM,CAACoS,KAAP,CAAavP,OAAb;AACD,KAFD,MAEO;AACL7C,MAAAA,MAAM,CAACkU,OAAP,CAAerR,OAAf;AACA0P,MAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD;;AACDD,IAAAA,SAAS,CAACzU,MAAD,CAAT;AACA;AACD;;AAED,MAAImO,QAAQ,GAAGqF,MAAf;AAEA,MAAIkC,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAI/V,CAAC,GAAG,CAAR,EAAWgW,GAAG,GAAGxH,QAAQ,CAAC1O,MAA/B,EAAuCE,CAAC,GAAGgW,GAA3C,EAAgDhW,CAAC,EAAjD,EAAqD;AACnD,QAAI4S,KAAK,GAAGvS,MAAM,CAACuL,kBAAP,CAA0B0G,iBAA1B,CACV9D,QAAQ,CAACxO,CAAD,CADE,EAEV,KAFU,EAGVlB,qBAHU,CAAZ;;AAMA,QAAI8T,KAAK,KAAKhW,mBAAmB,CAACqZ,OAAlC,EAA2C;AACzC;AACD,KAFD,MAEO,IAAIrD,KAAK,KAAKhW,mBAAmB,CAACiW,MAAlC,EAA0C;AAC/CkD,MAAAA,eAAe,CAACG,IAAhB,CAAqBna,cAAc,CAACgX,KAAf,CAAqBjU,qBAArB,CAArB;AACD;AACF;;AAED,MAAIiX,eAAe,CAACjW,MAAhB,KAA2B,CAA/B,EAAkC;AAChCiP,IAAAA,UAAU,CAAC1O,MAAD,CAAV;AACA;AACD,GAzI+B,CA2IhC;;;AACAA,EAAAA,MAAM,CAAC2N,aAAP,GAAuBrI,SAAvB;AAEAyP,EAAAA,cAAc,GAAGrZ,cAAc,CAACoa,mBAAf,CAAmCJ,eAAnC,CAAjB;;AAEA,MAAI,CAAC1V,MAAM,CAACsM,aAAZ,EAA2B;AACzB/K,IAAAA,MAAM,CAACgU,kBAAP,CAA0BR,cAA1B,EAA0CD,WAAW,CAACrB,MAAtD;AACAlS,IAAAA,MAAM,CAAC2N,eAAP,CAAuB7S,OAAO,CAAC8S,QAA/B;AACAsF,IAAAA,SAAS,CAACzU,MAAD,CAAT;AACA8T,IAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD,GALD,MAKO;AACLD,IAAAA,SAAS,CAACzU,MAAD,CAAT;AACAuB,IAAAA,MAAM,CAAC+T,mBAAP,CAA2BP,cAA3B,EAA2C;AACzCG,MAAAA,QAAQ,EAAEJ,WAAW,CAACI,QADmB;AAEzCC,MAAAA,aAAa,EAAEL,WAAW,CAACK,aAFc;AAGzCC,MAAAA,QAAQ,EAAE,YAAY;AACpBtB,QAAAA,WAAW,CAACY,OAAZ,CAAoB,IAApB;AACD,OALwC;AAMzCW,MAAAA,MAAM,EAAE,YAAY;AAClBvB,QAAAA,WAAW,CAACY,OAAZ,CAAoB,KAApB;AACD,OARwC;AASzCjB,MAAAA,MAAM,EAAEqB,WAAW,CAACrB;AATqB,KAA3C;AAWD;AACF;;AAED,SAASmB,mBAAT,CAA6B5U,MAA7B,EAAqC;AACnC,MAAI,CAACA,MAAM,CAACoM,wBAAZ,EAAsC;AACpC;AACD;;AAED,MAAIuB,aAAa,GAAG3N,MAAM,CAACmM,cAA3B;AACA,MAAItN,WAAW,GAAGmB,MAAM,CAACpB,KAAP,CAAaC,WAA/B,CANmC,CAQnC;AACA;AACA;;AACA,MAAIkX,eAAe,GAAGlZ,QAAQ,CAAC6Q,mBAAT,CACpBC,aAAa,CAACvN,QADM,EAEpBvB,WAFoB,CAAtB;;AAKA,MAAI,CAAC9C,OAAO,CAACga,eAAD,CAAZ,EAA+B;AAC7B;AACD;;AAED,MAAI7V,KAAK,GAAGF,MAAM,CAACE,KAAnB;;AAEA,MAAIqS,KAAK,GAAGvS,MAAM,CAACuL,kBAAP,CAA0B0G,iBAA1B,CACVtE,aADU,EAEV,KAFU,EAGVlP,qBAHU,CAAZ;;AAKA,MAAI8T,KAAK,KAAKhW,mBAAmB,CAACqZ,OAAlC,EAA2C;AACzC;AACD;;AAED,MAAInQ,SAAS,GAAGvF,KAAK,CAACyO,IAAtB;;AACA,MACElJ,SAAS,KAAKxI,SAAS,CAAC2R,aAAxB,IACAnJ,SAAS,KAAKxI,SAAS,CAAC4R,OAF1B,EAGE;AACA3O,IAAAA,KAAK,CAAC4O,2BAAN,CAAkCC,eAAlC,GAAoD,KAApD;AACD;;AAED,MACEtJ,SAAS,KAAKxI,SAAS,CAAC2R,aAAxB,IACAnJ,SAAS,KAAKxI,SAAS,CAAC+R,OAF1B,EAGE;AACA9O,IAAAA,KAAK,CAAC4O,2BAAN,CAAkCG,UAAlC,GAA+C,KAA/C;AACD;;AAED,MAAI+G,EAAE,GACJzD,KAAK,KAAKhW,mBAAmB,CAACiW,MAA9B,GAAuC/T,qBAAvC,GAA+D6G,SADjE;AAEAtF,EAAAA,MAAM,CAACgM,WAAP,GAAqB,IAAIpP,UAAJ,CACnB+Q,aADmB,EAEnBzN,KAFmB,EAGnBA,KAAK,CAACwF,aAAN,CAAoBxD,SAHD,CAArB;;AAKAlC,EAAAA,MAAM,CAACgM,WAAP,CAAmB6F,MAAnB,CAA0BhT,WAA1B,EAAuCmX,EAAvC;;AACAhW,EAAAA,MAAM,CAACoM,wBAAP,GAAkC,KAAlC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAejI,MAAf","sourcesContent":["import BoundingSphere from \"../../Core/BoundingSphere.js\";\nimport Cartesian3 from \"../../Core/Cartesian3.js\";\nimport Cartographic from \"../../Core/Cartographic.js\";\nimport Clock from \"../../Core/Clock.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Event from \"../../Core/Event.js\";\nimport EventHelper from \"../../Core/EventHelper.js\";\nimport HeadingPitchRange from \"../../Core/HeadingPitchRange.js\";\nimport Matrix4 from \"../../Core/Matrix4.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport BoundingSphereState from \"../../DataSources/BoundingSphereState.js\";\nimport ConstantPositionProperty from \"../../DataSources/ConstantPositionProperty.js\";\nimport DataSourceCollection from \"../../DataSources/DataSourceCollection.js\";\nimport DataSourceDisplay from \"../../DataSources/DataSourceDisplay.js\";\nimport Entity from \"../../DataSources/Entity.js\";\nimport EntityView from \"../../DataSources/EntityView.js\";\nimport Property from \"../../DataSources/Property.js\";\nimport Cesium3DTileset from \"../../Scene/Cesium3DTileset.js\";\nimport computeFlyToLocationForRectangle from \"../../Scene/computeFlyToLocationForRectangle.js\";\nimport ImageryLayer from \"../../Scene/ImageryLayer.js\";\nimport SceneMode from \"../../Scene/SceneMode.js\";\nimport TimeDynamicPointCloud from \"../../Scene/TimeDynamicPointCloud.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport when from \"../../ThirdParty/when.js\";\nimport Animation from \"../Animation/Animation.js\";\nimport AnimationViewModel from \"../Animation/AnimationViewModel.js\";\nimport BaseLayerPicker from \"../BaseLayerPicker/BaseLayerPicker.js\";\nimport createDefaultImageryProviderViewModels from \"../BaseLayerPicker/createDefaultImageryProviderViewModels.js\";\nimport createDefaultTerrainProviderViewModels from \"../BaseLayerPicker/createDefaultTerrainProviderViewModels.js\";\nimport CesiumWidget from \"../CesiumWidget/CesiumWidget.js\";\nimport ClockViewModel from \"../ClockViewModel.js\";\nimport FullscreenButton from \"../FullscreenButton/FullscreenButton.js\";\nimport Geocoder from \"../Geocoder/Geocoder.js\";\nimport getElement from \"../getElement.js\";\nimport HomeButton from \"../HomeButton/HomeButton.js\";\nimport InfoBox from \"../InfoBox/InfoBox.js\";\nimport NavigationHelpButton from \"../NavigationHelpButton/NavigationHelpButton.js\";\nimport ProjectionPicker from \"../ProjectionPicker/ProjectionPicker.js\";\nimport SceneModePicker from \"../SceneModePicker/SceneModePicker.js\";\nimport SelectionIndicator from \"../SelectionIndicator/SelectionIndicator.js\";\nimport subscribeAndEvaluate from \"../subscribeAndEvaluate.js\";\nimport Timeline from \"../Timeline/Timeline.js\";\nimport VRButton from \"../VRButton/VRButton.js\";\nimport Cesium3DTileFeature from \"../../Scene/Cesium3DTileFeature.js\";\n\nvar boundingSphereScratch = new BoundingSphere();\n\nfunction onTimelineScrubfunction(e) {\n  var clock = e.clock;\n  clock.currentTime = e.timeJulian;\n  clock.shouldAnimate = false;\n}\n\nfunction getCesium3DTileFeatureDescription(feature) {\n  var propertyNames = feature.getPropertyNames();\n\n  var html = \"\";\n  propertyNames.forEach(function (propertyName) {\n    var value = feature.getProperty(propertyName);\n    if (defined(value)) {\n      html += \"<tr><th>\" + propertyName + \"</th><td>\" + value + \"</td></tr>\";\n    }\n  });\n\n  if (html.length > 0) {\n    html =\n      '<table class=\"cesium-infoBox-defaultTable\"><tbody>' +\n      html +\n      \"</tbody></table>\";\n  }\n\n  return html;\n}\n\nfunction getCesium3DTileFeatureName(feature) {\n  // We need to iterate all property names to find potential\n  // candidates, but since we prefer some property names\n  // over others, we store them in an indexed array\n  // and then use the first defined element in the array\n  // as the preferred choice.\n\n  var i;\n  var possibleNames = [];\n  var propertyNames = feature.getPropertyNames();\n  for (i = 0; i < propertyNames.length; i++) {\n    var propertyName = propertyNames[i];\n    if (/^name$/i.test(propertyName)) {\n      possibleNames[0] = feature.getProperty(propertyName);\n    } else if (/name/i.test(propertyName)) {\n      possibleNames[1] = feature.getProperty(propertyName);\n    } else if (/^title$/i.test(propertyName)) {\n      possibleNames[2] = feature.getProperty(propertyName);\n    } else if (/^(id|identifier)$/i.test(propertyName)) {\n      possibleNames[3] = feature.getProperty(propertyName);\n    } else if (/element/i.test(propertyName)) {\n      possibleNames[4] = feature.getProperty(propertyName);\n    } else if (/(id|identifier)$/i.test(propertyName)) {\n      possibleNames[5] = feature.getProperty(propertyName);\n    }\n  }\n\n  var length = possibleNames.length;\n  for (i = 0; i < length; i++) {\n    var item = possibleNames[i];\n    if (defined(item) && item !== \"\") {\n      return item;\n    }\n  }\n  return \"Unnamed Feature\";\n}\n\nfunction pickEntity(viewer, e) {\n  var picked = viewer.scene.pick(e.position);\n  if (defined(picked)) {\n    var id = defaultValue(picked.id, picked.primitive.id);\n    if (id instanceof Entity) {\n      return id;\n    }\n\n    if (picked instanceof Cesium3DTileFeature) {\n      return new Entity({\n        name: getCesium3DTileFeatureName(picked),\n        description: getCesium3DTileFeatureDescription(picked),\n        feature: picked,\n      });\n    }\n  }\n\n  // No regular entity picked.  Try picking features from imagery layers.\n  if (defined(viewer.scene.globe)) {\n    return pickImageryLayerFeature(viewer, e.position);\n  }\n}\n\nfunction trackDataSourceClock(timeline, clock, dataSource) {\n  if (defined(dataSource)) {\n    var dataSourceClock = dataSource.clock;\n    if (defined(dataSourceClock)) {\n      dataSourceClock.getValue(clock);\n      if (defined(timeline)) {\n        timeline.updateFromClock();\n        timeline.zoomTo(dataSourceClock.startTime, dataSourceClock.stopTime);\n      }\n    }\n  }\n}\n\nvar cartesian3Scratch = new Cartesian3();\n\nfunction pickImageryLayerFeature(viewer, windowPosition) {\n  var scene = viewer.scene;\n  var pickRay = scene.camera.getPickRay(windowPosition);\n  var imageryLayerFeaturePromise = scene.imageryLayers.pickImageryLayerFeatures(\n    pickRay,\n    scene\n  );\n  if (!defined(imageryLayerFeaturePromise)) {\n    return;\n  }\n\n  // Imagery layer feature picking is asynchronous, so put up a message while loading.\n  var loadingMessage = new Entity({\n    id: \"Loading...\",\n    description: \"Loading feature information...\",\n  });\n\n  when(\n    imageryLayerFeaturePromise,\n    function (features) {\n      // Has this async pick been superseded by a later one?\n      if (viewer.selectedEntity !== loadingMessage) {\n        return;\n      }\n\n      if (!defined(features) || features.length === 0) {\n        viewer.selectedEntity = createNoFeaturesEntity();\n        return;\n      }\n\n      // Select the first feature.\n      var feature = features[0];\n\n      var entity = new Entity({\n        id: feature.name,\n        description: feature.description,\n      });\n\n      if (defined(feature.position)) {\n        var ecfPosition = viewer.scene.globe.ellipsoid.cartographicToCartesian(\n          feature.position,\n          cartesian3Scratch\n        );\n        entity.position = new ConstantPositionProperty(ecfPosition);\n      }\n\n      viewer.selectedEntity = entity;\n    },\n    function () {\n      // Has this async pick been superseded by a later one?\n      if (viewer.selectedEntity !== loadingMessage) {\n        return;\n      }\n      viewer.selectedEntity = createNoFeaturesEntity();\n    }\n  );\n\n  return loadingMessage;\n}\n\nfunction createNoFeaturesEntity() {\n  return new Entity({\n    id: \"None\",\n    description: \"No features found.\",\n  });\n}\n\nfunction enableVRUI(viewer, enabled) {\n  var geocoder = viewer._geocoder;\n  var homeButton = viewer._homeButton;\n  var sceneModePicker = viewer._sceneModePicker;\n  var projectionPicker = viewer._projectionPicker;\n  var baseLayerPicker = viewer._baseLayerPicker;\n  var animation = viewer._animation;\n  var timeline = viewer._timeline;\n  var fullscreenButton = viewer._fullscreenButton;\n  var infoBox = viewer._infoBox;\n  var selectionIndicator = viewer._selectionIndicator;\n\n  var visibility = enabled ? \"hidden\" : \"visible\";\n\n  if (defined(geocoder)) {\n    geocoder.container.style.visibility = visibility;\n  }\n  if (defined(homeButton)) {\n    homeButton.container.style.visibility = visibility;\n  }\n  if (defined(sceneModePicker)) {\n    sceneModePicker.container.style.visibility = visibility;\n  }\n  if (defined(projectionPicker)) {\n    projectionPicker.container.style.visibility = visibility;\n  }\n  if (defined(baseLayerPicker)) {\n    baseLayerPicker.container.style.visibility = visibility;\n  }\n  if (defined(animation)) {\n    animation.container.style.visibility = visibility;\n  }\n  if (defined(timeline)) {\n    timeline.container.style.visibility = visibility;\n  }\n  if (\n    defined(fullscreenButton) &&\n    fullscreenButton.viewModel.isFullscreenEnabled\n  ) {\n    fullscreenButton.container.style.visibility = visibility;\n  }\n  if (defined(infoBox)) {\n    infoBox.container.style.visibility = visibility;\n  }\n  if (defined(selectionIndicator)) {\n    selectionIndicator.container.style.visibility = visibility;\n  }\n\n  if (viewer._container) {\n    var right =\n      enabled || !defined(fullscreenButton)\n        ? 0\n        : fullscreenButton.container.clientWidth;\n    viewer._vrButton.container.style.right = right + \"px\";\n\n    viewer.forceResize();\n  }\n}\n\n/**\n * @typedef {Object} Viewer.ConstructorOptions\n *\n * Initialization options for the Viewer constructor\n *\n * @property {Boolean} [animation=true] If set to false, the Animation widget will not be created.\n * @property {Boolean} [baseLayerPicker=true] If set to false, the BaseLayerPicker widget will not be created.\n * @property {Boolean} [fullscreenButton=true] If set to false, the FullscreenButton widget will not be created.\n * @property {Boolean} [vrButton=false] If set to true, the VRButton widget will be created.\n * @property {Boolean|GeocoderService[]} [geocoder=true] If set to false, the Geocoder widget will not be created.\n * @property {Boolean} [homeButton=true] If set to false, the HomeButton widget will not be created.\n * @property {Boolean} [infoBox=true] If set to false, the InfoBox widget will not be created.\n * @property {Boolean} [sceneModePicker=true] If set to false, the SceneModePicker widget will not be created.\n * @property {Boolean} [selectionIndicator=true] If set to false, the SelectionIndicator widget will not be created.\n * @property {Boolean} [timeline=true] If set to false, the Timeline widget will not be created.\n * @property {Boolean} [navigationHelpButton=true] If set to false, the navigation help button will not be created.\n * @property {Boolean} [navigationInstructionsInitiallyVisible=true] True if the navigation instructions should initially be visible, or false if the should not be shown until the user explicitly clicks the button.\n * @property {Boolean} [scene3DOnly=false] When <code>true</code>, each geometry instance will only be rendered in 3D to save GPU memory.\n * @property {Boolean} [shouldAnimate=false] <code>true</code> if the clock should attempt to advance simulation time by default, <code>false</code> otherwise.  This option takes precedence over setting {@link Viewer#clockViewModel}.\n * @property {ClockViewModel} [clockViewModel=new ClockViewModel(clock)] The clock view model to use to control current time.\n * @property {ProviderViewModel} [selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available base layer is used.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel[]} [imageryProviderViewModels=createDefaultImageryProviderViewModels()] The array of ProviderViewModels to be selectable from the BaseLayerPicker.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel} [selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available base layer is used.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ProviderViewModel[]} [terrainProviderViewModels=createDefaultTerrainProviderViewModels()] The array of ProviderViewModels to be selectable from the BaseLayerPicker.  This value is only valid if `baseLayerPicker` is set to true.\n * @property {ImageryProvider} [imageryProvider=createWorldImagery()] The imagery provider to use.  This value is only valid if `baseLayerPicker` is set to false.\n * @property {TerrainProvider} [terrainProvider=new EllipsoidTerrainProvider()] The terrain provider to use\n * @property {SkyBox|false} [skyBox] The skybox used to render the stars.  When <code>undefined</code>, the default stars are used. If set to <code>false</code>, no skyBox, Sun, or Moon will be added.\n * @property {SkyAtmosphere|false} [skyAtmosphere] Blue sky, and the glow around the Earth's limb.  Set to <code>false</code> to turn it off.\n * @property {Element|String} [fullscreenElement=document.body] The element or id to be placed into fullscreen mode when the full screen button is pressed.\n * @property {Boolean} [useDefaultRenderLoop=true] True if this widget should control the render loop, false otherwise.\n * @property {Number} [targetFrameRate] The target frame rate when using the default render loop.\n * @property {Boolean} [showRenderLoopErrors=true] If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.\n * @property {Boolean} [useBrowserRecommendedResolution=true] If true, render at the browser's recommended resolution and ignore <code>window.devicePixelRatio</code>.\n * @property {Boolean} [automaticallyTrackDataSourceClocks=true] If true, this widget will automatically track the clock settings of newly added DataSources, updating if the DataSource's clock changes.  Set this to false if you want to configure the clock independently.\n * @property {Object} [contextOptions] Context and WebGL creation properties corresponding to <code>options</code> passed to {@link Scene}.\n * @property {SceneMode} [sceneMode=SceneMode.SCENE3D] The initial scene mode.\n * @property {MapProjection} [mapProjection=new GeographicProjection()] The map projection to use in 2D and Columbus View modes.\n * @property {Globe|false} [globe=new Globe(mapProjection.ellipsoid)] The globe to use in the scene.  If set to <code>false</code>, no globe will be added.\n * @property {Boolean} [orderIndependentTranslucency=true] If true and the configuration supports it, use order independent translucency.\n * @property {Element|String} [creditContainer] The DOM element or ID that will contain the {@link CreditDisplay}.  If not specified, the credits are added to the bottom of the widget itself.\n * @property {Element|String} [creditViewport] The DOM element or ID that will contain the credit pop up created by the {@link CreditDisplay}.  If not specified, it will appear over the widget itself.\n * @property {DataSourceCollection} [dataSources=new DataSourceCollection()] The collection of data sources visualized by the widget.  If this parameter is provided,\n *                               the instance is assumed to be owned by the caller and will not be destroyed when the viewer is destroyed.\n * @property {Number} [terrainExaggeration=1.0] A scalar used to exaggerate the terrain. Note that terrain exaggeration will not modify any other primitive as they are positioned relative to the ellipsoid.\n * @property {Boolean} [shadows=false] Determines if shadows are cast by light sources.\n * @property {ShadowMode} [terrainShadows=ShadowMode.RECEIVE_ONLY] Determines if the terrain casts or receives shadows from light sources.\n * @property {MapMode2D} [mapMode2D=MapMode2D.INFINITE_SCROLL] Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.\n * @property {Boolean} [projectionPicker=false] If set to true, the ProjectionPicker widget will be created.\n * @property {Boolean} [requestRenderMode=false] If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling reduces the CPU/GPU usage of your application and uses less battery on mobile, but requires using {@link Scene#requestRender} to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n * @property {Number} [maximumRenderTimeChange=0.0] If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n */\n\n/**\n * A base widget for building applications.  It composites all of the standard Cesium widgets into one reusable package.\n * The widget can always be extended by using mixins, which add functionality useful for a variety of applications.\n *\n * @alias Viewer\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Viewer.ConstructorOptions} [options] Object describing initialization options\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n * @exception {DeveloperError} options.selectedImageryProviderViewModel is not available when not using the BaseLayerPicker widget, specify options.imageryProvider instead.\n * @exception {DeveloperError} options.selectedTerrainProviderViewModel is not available when not using the BaseLayerPicker widget, specify options.terrainProvider instead.\n *\n * @see Animation\n * @see BaseLayerPicker\n * @see CesiumWidget\n * @see FullscreenButton\n * @see HomeButton\n * @see SceneModePicker\n * @see Timeline\n * @see viewerDragDropMixin\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Hello%20World.html|Cesium Sandcastle Hello World Demo}\n *\n * @example\n * //Initialize the viewer widget with several custom options and mixins.\n * var viewer = new Cesium.Viewer('cesiumContainer', {\n *     //Start in Columbus Viewer\n *     sceneMode : Cesium.SceneMode.COLUMBUS_VIEW,\n *     //Use Cesium World Terrain\n *     terrainProvider : Cesium.createWorldTerrain(),\n *     //Hide the base layer picker\n *     baseLayerPicker : false,\n *     //Use OpenStreetMaps\n *     imageryProvider : new Cesium.OpenStreetMapImageryProvider({\n *         url : 'https://a.tile.openstreetmap.org/'\n *     }),\n *     skyBox : new Cesium.SkyBox({\n *         sources : {\n *           positiveX : 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\n *           negativeX : 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\n *           positiveY : 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\n *           negativeY : 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\n *           positiveZ : 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\n *           negativeZ : 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\n *         }\n *     }),\n *     // Show Columbus View map with Web Mercator projection\n *     mapProjection : new Cesium.WebMercatorProjection()\n * });\n *\n * //Add basic drag and drop functionality\n * viewer.extend(Cesium.viewerDragDropMixin);\n *\n * //Show a pop-up alert if we encounter an error when processing a dropped file\n * viewer.dropError.addEventListener(function(dropHandler, name, error) {\n *     console.log(error);\n *     window.alert(error);\n * });\n */\nfunction Viewer(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var createBaseLayerPicker =\n    (!defined(options.globe) || options.globe !== false) &&\n    (!defined(options.baseLayerPicker) || options.baseLayerPicker !== false);\n\n  //>>includeStart('debug', pragmas.debug);\n  // If not using BaseLayerPicker, selectedImageryProviderViewModel is an invalid option\n  if (\n    !createBaseLayerPicker &&\n    defined(options.selectedImageryProviderViewModel)\n  ) {\n    throw new DeveloperError(\n      \"options.selectedImageryProviderViewModel is not available when not using the BaseLayerPicker widget. \\\nEither specify options.imageryProvider instead or set options.baseLayerPicker to true.\"\n    );\n  }\n\n  // If not using BaseLayerPicker, selectedTerrainProviderViewModel is an invalid option\n  if (\n    !createBaseLayerPicker &&\n    defined(options.selectedTerrainProviderViewModel)\n  ) {\n    throw new DeveloperError(\n      \"options.selectedTerrainProviderViewModel is not available when not using the BaseLayerPicker widget. \\\nEither specify options.terrainProvider instead or set options.baseLayerPicker to true.\"\n    );\n  }\n  //>>includeEnd('debug')\n\n  var that = this;\n\n  var viewerContainer = document.createElement(\"div\");\n  viewerContainer.className = \"cesium-viewer\";\n  container.appendChild(viewerContainer);\n\n  // Cesium widget container\n  var cesiumWidgetContainer = document.createElement(\"div\");\n  cesiumWidgetContainer.className = \"cesium-viewer-cesiumWidgetContainer\";\n  viewerContainer.appendChild(cesiumWidgetContainer);\n\n  // Bottom container\n  var bottomContainer = document.createElement(\"div\");\n  bottomContainer.className = \"cesium-viewer-bottom\";\n\n  viewerContainer.appendChild(bottomContainer);\n\n  var scene3DOnly = defaultValue(options.scene3DOnly, false);\n\n  var clock;\n  var clockViewModel;\n  var destroyClockViewModel = false;\n  if (defined(options.clockViewModel)) {\n    clockViewModel = options.clockViewModel;\n    clock = clockViewModel.clock;\n  } else {\n    clock = new Clock();\n    clockViewModel = new ClockViewModel(clock);\n    destroyClockViewModel = true;\n  }\n\n  if (defined(options.shouldAnimate)) {\n    clock.shouldAnimate = options.shouldAnimate;\n  }\n\n  // Cesium widget\n  var cesiumWidget = new CesiumWidget(cesiumWidgetContainer, {\n    imageryProvider:\n      createBaseLayerPicker || defined(options.imageryProvider)\n        ? false\n        : undefined,\n    clock: clock,\n    skyBox: options.skyBox,\n    skyAtmosphere: options.skyAtmosphere,\n    sceneMode: options.sceneMode,\n    mapProjection: options.mapProjection,\n    globe: options.globe,\n    orderIndependentTranslucency: options.orderIndependentTranslucency,\n    contextOptions: options.contextOptions,\n    useDefaultRenderLoop: options.useDefaultRenderLoop,\n    targetFrameRate: options.targetFrameRate,\n    showRenderLoopErrors: options.showRenderLoopErrors,\n    useBrowserRecommendedResolution: options.useBrowserRecommendedResolution,\n    creditContainer: defined(options.creditContainer)\n      ? options.creditContainer\n      : bottomContainer,\n    creditViewport: options.creditViewport,\n    scene3DOnly: scene3DOnly,\n    terrainExaggeration: options.terrainExaggeration,\n    shadows: options.shadows,\n    terrainShadows: options.terrainShadows,\n    mapMode2D: options.mapMode2D,\n    requestRenderMode: options.requestRenderMode,\n    maximumRenderTimeChange: options.maximumRenderTimeChange,\n  });\n\n  var dataSourceCollection = options.dataSources;\n  var destroyDataSourceCollection = false;\n  if (!defined(dataSourceCollection)) {\n    dataSourceCollection = new DataSourceCollection();\n    destroyDataSourceCollection = true;\n  }\n\n  var scene = cesiumWidget.scene;\n\n  var dataSourceDisplay = new DataSourceDisplay({\n    scene: scene,\n    dataSourceCollection: dataSourceCollection,\n  });\n\n  var eventHelper = new EventHelper();\n\n  eventHelper.add(clock.onTick, Viewer.prototype._onTick, this);\n  eventHelper.add(scene.morphStart, Viewer.prototype._clearTrackedObject, this);\n\n  // Selection Indicator\n  var selectionIndicator;\n  if (\n    !defined(options.selectionIndicator) ||\n    options.selectionIndicator !== false\n  ) {\n    var selectionIndicatorContainer = document.createElement(\"div\");\n    selectionIndicatorContainer.className =\n      \"cesium-viewer-selectionIndicatorContainer\";\n    viewerContainer.appendChild(selectionIndicatorContainer);\n    selectionIndicator = new SelectionIndicator(\n      selectionIndicatorContainer,\n      scene\n    );\n  }\n\n  // Info Box\n  var infoBox;\n  if (!defined(options.infoBox) || options.infoBox !== false) {\n    var infoBoxContainer = document.createElement(\"div\");\n    infoBoxContainer.className = \"cesium-viewer-infoBoxContainer\";\n    viewerContainer.appendChild(infoBoxContainer);\n    infoBox = new InfoBox(infoBoxContainer);\n\n    var infoBoxViewModel = infoBox.viewModel;\n    eventHelper.add(\n      infoBoxViewModel.cameraClicked,\n      Viewer.prototype._onInfoBoxCameraClicked,\n      this\n    );\n    eventHelper.add(\n      infoBoxViewModel.closeClicked,\n      Viewer.prototype._onInfoBoxClockClicked,\n      this\n    );\n  }\n\n  // Main Toolbar\n  var toolbar = document.createElement(\"div\");\n  toolbar.className = \"cesium-viewer-toolbar\";\n  viewerContainer.appendChild(toolbar);\n\n  // Geocoder\n  var geocoder;\n  if (!defined(options.geocoder) || options.geocoder !== false) {\n    var geocoderContainer = document.createElement(\"div\");\n    geocoderContainer.className = \"cesium-viewer-geocoderContainer\";\n    toolbar.appendChild(geocoderContainer);\n    var geocoderService;\n    if (defined(options.geocoder) && typeof options.geocoder !== \"boolean\") {\n      geocoderService = Array.isArray(options.geocoder)\n        ? options.geocoder\n        : [options.geocoder];\n    }\n    geocoder = new Geocoder({\n      container: geocoderContainer,\n      geocoderServices: geocoderService,\n      scene: scene,\n    });\n    // Subscribe to search so that we can clear the trackedEntity when it is clicked.\n    eventHelper.add(\n      geocoder.viewModel.search.beforeExecute,\n      Viewer.prototype._clearObjects,\n      this\n    );\n  }\n\n  // HomeButton\n  var homeButton;\n  if (!defined(options.homeButton) || options.homeButton !== false) {\n    homeButton = new HomeButton(toolbar, scene);\n    if (defined(geocoder)) {\n      eventHelper.add(homeButton.viewModel.command.afterExecute, function () {\n        var viewModel = geocoder.viewModel;\n        viewModel.searchText = \"\";\n        if (viewModel.isSearchInProgress) {\n          viewModel.search();\n        }\n      });\n    }\n    // Subscribe to the home button beforeExecute event so that we can clear the trackedEntity.\n    eventHelper.add(\n      homeButton.viewModel.command.beforeExecute,\n      Viewer.prototype._clearTrackedObject,\n      this\n    );\n  }\n\n  // SceneModePicker\n  // By default, we silently disable the scene mode picker if scene3DOnly is true,\n  // but if sceneModePicker is explicitly set to true, throw an error.\n  //>>includeStart('debug', pragmas.debug);\n  if (options.sceneModePicker === true && scene3DOnly) {\n    throw new DeveloperError(\n      \"options.sceneModePicker is not available when options.scene3DOnly is set to true.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  var sceneModePicker;\n  if (\n    !scene3DOnly &&\n    (!defined(options.sceneModePicker) || options.sceneModePicker !== false)\n  ) {\n    sceneModePicker = new SceneModePicker(toolbar, scene);\n  }\n\n  var projectionPicker;\n  if (options.projectionPicker) {\n    projectionPicker = new ProjectionPicker(toolbar, scene);\n  }\n\n  // BaseLayerPicker\n  var baseLayerPicker;\n  var baseLayerPickerDropDown;\n  if (createBaseLayerPicker) {\n    var imageryProviderViewModels = defaultValue(\n      options.imageryProviderViewModels,\n      createDefaultImageryProviderViewModels()\n    );\n    var terrainProviderViewModels = defaultValue(\n      options.terrainProviderViewModels,\n      createDefaultTerrainProviderViewModels()\n    );\n\n    baseLayerPicker = new BaseLayerPicker(toolbar, {\n      globe: scene.globe,\n      imageryProviderViewModels: imageryProviderViewModels,\n      selectedImageryProviderViewModel:\n        options.selectedImageryProviderViewModel,\n      terrainProviderViewModels: terrainProviderViewModels,\n      selectedTerrainProviderViewModel:\n        options.selectedTerrainProviderViewModel,\n    });\n\n    //Grab the dropdown for resize code.\n    var elements = toolbar.getElementsByClassName(\n      \"cesium-baseLayerPicker-dropDown\"\n    );\n    baseLayerPickerDropDown = elements[0];\n  }\n\n  // These need to be set after the BaseLayerPicker is created in order to take effect\n  if (defined(options.imageryProvider) && options.imageryProvider !== false) {\n    if (createBaseLayerPicker) {\n      baseLayerPicker.viewModel.selectedImagery = undefined;\n    }\n    scene.imageryLayers.removeAll();\n    scene.imageryLayers.addImageryProvider(options.imageryProvider);\n  }\n  if (defined(options.terrainProvider)) {\n    if (createBaseLayerPicker) {\n      baseLayerPicker.viewModel.selectedTerrain = undefined;\n    }\n    scene.terrainProvider = options.terrainProvider;\n  }\n\n  // Navigation Help Button\n  var navigationHelpButton;\n  if (\n    !defined(options.navigationHelpButton) ||\n    options.navigationHelpButton !== false\n  ) {\n    var showNavHelp = true;\n    try {\n      //window.localStorage is null if disabled in Firefox or undefined in browsers with implementation\n      if (defined(window.localStorage)) {\n        var hasSeenNavHelp = window.localStorage.getItem(\n          \"cesium-hasSeenNavHelp\"\n        );\n        if (defined(hasSeenNavHelp) && Boolean(hasSeenNavHelp)) {\n          showNavHelp = false;\n        } else {\n          window.localStorage.setItem(\"cesium-hasSeenNavHelp\", \"true\");\n        }\n      }\n    } catch (e) {\n      //Accessing window.localStorage throws if disabled in Chrome\n      //window.localStorage.setItem throws if in Safari private browsing mode or in any browser if we are over quota.\n    }\n    navigationHelpButton = new NavigationHelpButton({\n      container: toolbar,\n      instructionsInitiallyVisible: defaultValue(\n        options.navigationInstructionsInitiallyVisible,\n        showNavHelp\n      ),\n    });\n  }\n\n  // Animation\n  var animation;\n  if (!defined(options.animation) || options.animation !== false) {\n    var animationContainer = document.createElement(\"div\");\n    animationContainer.className = \"cesium-viewer-animationContainer\";\n    viewerContainer.appendChild(animationContainer);\n    animation = new Animation(\n      animationContainer,\n      new AnimationViewModel(clockViewModel)\n    );\n  }\n\n  // Timeline\n  var timeline;\n  if (!defined(options.timeline) || options.timeline !== false) {\n    var timelineContainer = document.createElement(\"div\");\n    timelineContainer.className = \"cesium-viewer-timelineContainer\";\n    viewerContainer.appendChild(timelineContainer);\n    timeline = new Timeline(timelineContainer, clock);\n    timeline.addEventListener(\"settime\", onTimelineScrubfunction, false);\n    timeline.zoomTo(clock.startTime, clock.stopTime);\n  }\n\n  // Fullscreen\n  var fullscreenButton;\n  var fullscreenSubscription;\n  var fullscreenContainer;\n  if (\n    !defined(options.fullscreenButton) ||\n    options.fullscreenButton !== false\n  ) {\n    fullscreenContainer = document.createElement(\"div\");\n    fullscreenContainer.className = \"cesium-viewer-fullscreenContainer\";\n    viewerContainer.appendChild(fullscreenContainer);\n    fullscreenButton = new FullscreenButton(\n      fullscreenContainer,\n      options.fullscreenElement\n    );\n\n    //Subscribe to fullscreenButton.viewModel.isFullscreenEnabled so\n    //that we can hide/show the button as well as size the timeline.\n    fullscreenSubscription = subscribeAndEvaluate(\n      fullscreenButton.viewModel,\n      \"isFullscreenEnabled\",\n      function (isFullscreenEnabled) {\n        fullscreenContainer.style.display = isFullscreenEnabled\n          ? \"block\"\n          : \"none\";\n        if (defined(timeline)) {\n          timeline.container.style.right =\n            fullscreenContainer.clientWidth + \"px\";\n          timeline.resize();\n        }\n      }\n    );\n  }\n\n  // VR\n  var vrButton;\n  var vrSubscription;\n  var vrModeSubscription;\n  if (options.vrButton) {\n    var vrContainer = document.createElement(\"div\");\n    vrContainer.className = \"cesium-viewer-vrContainer\";\n    viewerContainer.appendChild(vrContainer);\n    vrButton = new VRButton(vrContainer, scene, options.fullScreenElement);\n\n    vrSubscription = subscribeAndEvaluate(\n      vrButton.viewModel,\n      \"isVREnabled\",\n      function (isVREnabled) {\n        vrContainer.style.display = isVREnabled ? \"block\" : \"none\";\n        if (defined(fullscreenButton)) {\n          vrContainer.style.right = fullscreenContainer.clientWidth + \"px\";\n        }\n        if (defined(timeline)) {\n          timeline.container.style.right = vrContainer.clientWidth + \"px\";\n          timeline.resize();\n        }\n      }\n    );\n\n    vrModeSubscription = subscribeAndEvaluate(\n      vrButton.viewModel,\n      \"isVRMode\",\n      function (isVRMode) {\n        enableVRUI(that, isVRMode);\n      }\n    );\n  }\n\n  //Assign all properties to this instance.  No \"this\" assignments should\n  //take place above this line.\n  this._baseLayerPickerDropDown = baseLayerPickerDropDown;\n  this._fullscreenSubscription = fullscreenSubscription;\n  this._vrSubscription = vrSubscription;\n  this._vrModeSubscription = vrModeSubscription;\n  this._dataSourceChangedListeners = {};\n  this._automaticallyTrackDataSourceClocks = defaultValue(\n    options.automaticallyTrackDataSourceClocks,\n    true\n  );\n  this._container = container;\n  this._bottomContainer = bottomContainer;\n  this._element = viewerContainer;\n  this._cesiumWidget = cesiumWidget;\n  this._selectionIndicator = selectionIndicator;\n  this._infoBox = infoBox;\n  this._dataSourceCollection = dataSourceCollection;\n  this._destroyDataSourceCollection = destroyDataSourceCollection;\n  this._dataSourceDisplay = dataSourceDisplay;\n  this._clockViewModel = clockViewModel;\n  this._destroyClockViewModel = destroyClockViewModel;\n  this._toolbar = toolbar;\n  this._homeButton = homeButton;\n  this._sceneModePicker = sceneModePicker;\n  this._projectionPicker = projectionPicker;\n  this._baseLayerPicker = baseLayerPicker;\n  this._navigationHelpButton = navigationHelpButton;\n  this._animation = animation;\n  this._timeline = timeline;\n  this._fullscreenButton = fullscreenButton;\n  this._vrButton = vrButton;\n  this._geocoder = geocoder;\n  this._eventHelper = eventHelper;\n  this._lastWidth = 0;\n  this._lastHeight = 0;\n  this._allowDataSourcesToSuspendAnimation = true;\n  this._entityView = undefined;\n  this._enableInfoOrSelection = defined(infoBox) || defined(selectionIndicator);\n  this._clockTrackedDataSource = undefined;\n  this._trackedEntity = undefined;\n  this._needTrackedEntityUpdate = false;\n  this._selectedEntity = undefined;\n  this._clockTrackedDataSource = undefined;\n  this._zoomIsFlight = false;\n  this._zoomTarget = undefined;\n  this._zoomPromise = undefined;\n  this._zoomOptions = undefined;\n  this._selectedEntityChanged = new Event();\n  this._trackedEntityChanged = new Event();\n\n  knockout.track(this, [\n    \"_trackedEntity\",\n    \"_selectedEntity\",\n    \"_clockTrackedDataSource\",\n  ]);\n\n  //Listen to data source events in order to track clock changes.\n  eventHelper.add(\n    dataSourceCollection.dataSourceAdded,\n    Viewer.prototype._onDataSourceAdded,\n    this\n  );\n  eventHelper.add(\n    dataSourceCollection.dataSourceRemoved,\n    Viewer.prototype._onDataSourceRemoved,\n    this\n  );\n\n  // Prior to each render, check if anything needs to be resized.\n  eventHelper.add(scene.postUpdate, Viewer.prototype.resize, this);\n  eventHelper.add(scene.postRender, Viewer.prototype._postRender, this);\n\n  // We need to subscribe to the data sources and collections so that we can clear the\n  // tracked object when it is removed from the scene.\n  // Subscribe to current data sources\n  var dataSourceLength = dataSourceCollection.length;\n  for (var i = 0; i < dataSourceLength; i++) {\n    this._dataSourceAdded(dataSourceCollection, dataSourceCollection.get(i));\n  }\n  this._dataSourceAdded(undefined, dataSourceDisplay.defaultDataSource);\n\n  // Hook up events so that we can subscribe to future sources.\n  eventHelper.add(\n    dataSourceCollection.dataSourceAdded,\n    Viewer.prototype._dataSourceAdded,\n    this\n  );\n  eventHelper.add(\n    dataSourceCollection.dataSourceRemoved,\n    Viewer.prototype._dataSourceRemoved,\n    this\n  );\n\n  // Subscribe to left clicks and zoom to the picked object.\n  function pickAndTrackObject(e) {\n    var entity = pickEntity(that, e);\n    if (defined(entity)) {\n      //Only track the entity if it has a valid position at the current time.\n      if (\n        Property.getValueOrUndefined(entity.position, that.clock.currentTime)\n      ) {\n        that.trackedEntity = entity;\n      } else {\n        that.zoomTo(entity);\n      }\n    } else if (defined(that.trackedEntity)) {\n      that.trackedEntity = undefined;\n    }\n  }\n\n  function pickAndSelectObject(e) {\n    that.selectedEntity = pickEntity(that, e);\n  }\n\n  cesiumWidget.screenSpaceEventHandler.setInputAction(\n    pickAndSelectObject,\n    ScreenSpaceEventType.LEFT_CLICK\n  );\n  cesiumWidget.screenSpaceEventHandler.setInputAction(\n    pickAndTrackObject,\n    ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n  );\n}\n\nObject.defineProperties(Viewer.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof Viewer.prototype\n   * @type {Element}\n   * @readonly\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the DOM element for the area at the bottom of the window containing the\n   * {@link CreditDisplay} and potentially other things.\n   * @memberof Viewer.prototype\n   * @type {Element}\n   * @readonly\n   */\n  bottomContainer: {\n    get: function () {\n      return this._bottomContainer;\n    },\n  },\n\n  /**\n   * Gets the CesiumWidget.\n   * @memberof Viewer.prototype\n   * @type {CesiumWidget}\n   * @readonly\n   */\n  cesiumWidget: {\n    get: function () {\n      return this._cesiumWidget;\n    },\n  },\n\n  /**\n   * Gets the selection indicator.\n   * @memberof Viewer.prototype\n   * @type {SelectionIndicator}\n   * @readonly\n   */\n  selectionIndicator: {\n    get: function () {\n      return this._selectionIndicator;\n    },\n  },\n\n  /**\n   * Gets the info box.\n   * @memberof Viewer.prototype\n   * @type {InfoBox}\n   * @readonly\n   */\n  infoBox: {\n    get: function () {\n      return this._infoBox;\n    },\n  },\n\n  /**\n   * Gets the Geocoder.\n   * @memberof Viewer.prototype\n   * @type {Geocoder}\n   * @readonly\n   */\n  geocoder: {\n    get: function () {\n      return this._geocoder;\n    },\n  },\n\n  /**\n   * Gets the HomeButton.\n   * @memberof Viewer.prototype\n   * @type {HomeButton}\n   * @readonly\n   */\n  homeButton: {\n    get: function () {\n      return this._homeButton;\n    },\n  },\n\n  /**\n   * Gets the SceneModePicker.\n   * @memberof Viewer.prototype\n   * @type {SceneModePicker}\n   * @readonly\n   */\n  sceneModePicker: {\n    get: function () {\n      return this._sceneModePicker;\n    },\n  },\n\n  /**\n   * Gets the ProjectionPicker.\n   * @memberof Viewer.prototype\n   * @type {ProjectionPicker}\n   * @readonly\n   */\n  projectionPicker: {\n    get: function () {\n      return this._projectionPicker;\n    },\n  },\n\n  /**\n   * Gets the BaseLayerPicker.\n   * @memberof Viewer.prototype\n   * @type {BaseLayerPicker}\n   * @readonly\n   */\n  baseLayerPicker: {\n    get: function () {\n      return this._baseLayerPicker;\n    },\n  },\n\n  /**\n   * Gets the NavigationHelpButton.\n   * @memberof Viewer.prototype\n   * @type {NavigationHelpButton}\n   * @readonly\n   */\n  navigationHelpButton: {\n    get: function () {\n      return this._navigationHelpButton;\n    },\n  },\n\n  /**\n   * Gets the Animation widget.\n   * @memberof Viewer.prototype\n   * @type {Animation}\n   * @readonly\n   */\n  animation: {\n    get: function () {\n      return this._animation;\n    },\n  },\n\n  /**\n   * Gets the Timeline widget.\n   * @memberof Viewer.prototype\n   * @type {Timeline}\n   * @readonly\n   */\n  timeline: {\n    get: function () {\n      return this._timeline;\n    },\n  },\n\n  /**\n   * Gets the FullscreenButton.\n   * @memberof Viewer.prototype\n   * @type {FullscreenButton}\n   * @readonly\n   */\n  fullscreenButton: {\n    get: function () {\n      return this._fullscreenButton;\n    },\n  },\n\n  /**\n   * Gets the VRButton.\n   * @memberof Viewer.prototype\n   * @type {VRButton}\n   * @readonly\n   */\n  vrButton: {\n    get: function () {\n      return this._vrButton;\n    },\n  },\n\n  /**\n   * Gets the display used for {@link DataSource} visualization.\n   * @memberof Viewer.prototype\n   * @type {DataSourceDisplay}\n   * @readonly\n   */\n  dataSourceDisplay: {\n    get: function () {\n      return this._dataSourceDisplay;\n    },\n  },\n\n  /**\n   * Gets the collection of entities not tied to a particular data source.\n   * This is a shortcut to [dataSourceDisplay.defaultDataSource.entities]{@link Viewer#dataSourceDisplay}.\n   * @memberof Viewer.prototype\n   * @type {EntityCollection}\n   * @readonly\n   */\n  entities: {\n    get: function () {\n      return this._dataSourceDisplay.defaultDataSource.entities;\n    },\n  },\n\n  /**\n   * Gets the set of {@link DataSource} instances to be visualized.\n   * @memberof Viewer.prototype\n   * @type {DataSourceCollection}\n   * @readonly\n   */\n  dataSources: {\n    get: function () {\n      return this._dataSourceCollection;\n    },\n  },\n\n  /**\n   * Gets the canvas.\n   * @memberof Viewer.prototype\n   * @type {HTMLCanvasElement}\n   * @readonly\n   */\n  canvas: {\n    get: function () {\n      return this._cesiumWidget.canvas;\n    },\n  },\n\n  /**\n   * Gets the scene.\n   * @memberof Viewer.prototype\n   * @type {Scene}\n   * @readonly\n   */\n  scene: {\n    get: function () {\n      return this._cesiumWidget.scene;\n    },\n  },\n\n  /**\n   * Determines if shadows are cast by light sources.\n   * @memberof Viewer.prototype\n   * @type {Boolean}\n   */\n  shadows: {\n    get: function () {\n      return this.scene.shadowMap.enabled;\n    },\n    set: function (value) {\n      this.scene.shadowMap.enabled = value;\n    },\n  },\n\n  /**\n   * Determines if the terrain casts or shadows from light sources.\n   * @memberof Viewer.prototype\n   * @type {ShadowMode}\n   */\n  terrainShadows: {\n    get: function () {\n      return this.scene.globe.shadows;\n    },\n    set: function (value) {\n      this.scene.globe.shadows = value;\n    },\n  },\n\n  /**\n   * Get the scene's shadow map\n   * @memberof Viewer.prototype\n   * @type {ShadowMap}\n   * @readonly\n   */\n  shadowMap: {\n    get: function () {\n      return this.scene.shadowMap;\n    },\n  },\n\n  /**\n   * Gets the collection of image layers that will be rendered on the globe.\n   * @memberof Viewer.prototype\n   *\n   * @type {ImageryLayerCollection}\n   * @readonly\n   */\n  imageryLayers: {\n    get: function () {\n      return this.scene.imageryLayers;\n    },\n  },\n\n  /**\n   * The terrain provider providing surface geometry for the globe.\n   * @memberof Viewer.prototype\n   *\n   * @type {TerrainProvider}\n   */\n  terrainProvider: {\n    get: function () {\n      return this.scene.terrainProvider;\n    },\n    set: function (terrainProvider) {\n      this.scene.terrainProvider = terrainProvider;\n    },\n  },\n\n  /**\n   * Gets the camera.\n   * @memberof Viewer.prototype\n   *\n   * @type {Camera}\n   * @readonly\n   */\n  camera: {\n    get: function () {\n      return this.scene.camera;\n    },\n  },\n\n  /**\n   * Gets the post-process stages.\n   * @memberof Viewer.prototype\n   *\n   * @type {PostProcessStageCollection}\n   * @readonly\n   */\n  postProcessStages: {\n    get: function () {\n      return this.scene.postProcessStages;\n    },\n  },\n\n  /**\n   * Gets the clock.\n   * @memberof Viewer.prototype\n   * @type {Clock}\n   * @readonly\n   */\n  clock: {\n    get: function () {\n      return this._clockViewModel.clock;\n    },\n  },\n\n  /**\n   * Gets the clock view model.\n   * @memberof Viewer.prototype\n   * @type {ClockViewModel}\n   * @readonly\n   */\n  clockViewModel: {\n    get: function () {\n      return this._clockViewModel;\n    },\n  },\n\n  /**\n   * Gets the screen space event handler.\n   * @memberof Viewer.prototype\n   * @type {ScreenSpaceEventHandler}\n   * @readonly\n   */\n  screenSpaceEventHandler: {\n    get: function () {\n      return this._cesiumWidget.screenSpaceEventHandler;\n    },\n  },\n\n  /**\n   * Gets or sets the target frame rate of the widget when <code>useDefaultRenderLoop</code>\n   * is true. If undefined, the browser's {@link requestAnimationFrame} implementation\n   * determines the frame rate.  If defined, this value must be greater than 0.  A value higher\n   * than the underlying requestAnimationFrame implementation will have no effect.\n   * @memberof Viewer.prototype\n   *\n   * @type {Number}\n   */\n  targetFrameRate: {\n    get: function () {\n      return this._cesiumWidget.targetFrameRate;\n    },\n    set: function (value) {\n      this._cesiumWidget.targetFrameRate = value;\n    },\n  },\n\n  /**\n   * Gets or sets whether or not this widget should control the render loop.\n   * If set to true the widget will use {@link requestAnimationFrame} to\n   * perform rendering and resizing of the widget, as well as drive the\n   * simulation clock. If set to false, you must manually call the\n   * <code>resize</code>, <code>render</code> methods\n   * as part of a custom render loop.  If an error occurs during rendering, {@link Scene}'s\n   * <code>renderError</code> event will be raised and this property\n   * will be set to false.  It must be set back to true to continue rendering\n   * after the error.\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   */\n  useDefaultRenderLoop: {\n    get: function () {\n      return this._cesiumWidget.useDefaultRenderLoop;\n    },\n    set: function (value) {\n      this._cesiumWidget.useDefaultRenderLoop = value;\n    },\n  },\n\n  /**\n   * Gets or sets a scaling factor for rendering resolution.  Values less than 1.0 can improve\n   * performance on less powerful devices while values greater than 1.0 will render at a higher\n   * resolution and then scale down, resulting in improved visual fidelity.\n   * For example, if the widget is laid out at a size of 640x480, setting this value to 0.5\n   * will cause the scene to be rendered at 320x240 and then scaled up while setting\n   * it to 2.0 will cause the scene to be rendered at 1280x960 and then scaled down.\n   * @memberof Viewer.prototype\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  resolutionScale: {\n    get: function () {\n      return this._cesiumWidget.resolutionScale;\n    },\n    set: function (value) {\n      this._cesiumWidget.resolutionScale = value;\n    },\n  },\n\n  /**\n   * Boolean flag indicating if the browser's recommended resolution is used.\n   * If true, the browser's device pixel ratio is ignored and 1.0 is used instead,\n   * effectively rendering based on CSS pixels instead of device pixels. This can improve\n   * performance on less powerful devices that have high pixel density. When false, rendering\n   * will be in device pixels. {@link Viewer#resolutionScale} will still take effect whether\n   * this flag is true or false.\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  useBrowserRecommendedResolution: {\n    get: function () {\n      return this._cesiumWidget.useBrowserRecommendedResolution;\n    },\n    set: function (value) {\n      this._cesiumWidget.useBrowserRecommendedResolution = value;\n    },\n  },\n\n  /**\n   * Gets or sets whether or not data sources can temporarily pause\n   * animation in order to avoid showing an incomplete picture to the user.\n   * For example, if asynchronous primitives are being processed in the\n   * background, the clock will not advance until the geometry is ready.\n   *\n   * @memberof Viewer.prototype\n   *\n   * @type {Boolean}\n   */\n  allowDataSourcesToSuspendAnimation: {\n    get: function () {\n      return this._allowDataSourcesToSuspendAnimation;\n    },\n    set: function (value) {\n      this._allowDataSourcesToSuspendAnimation = value;\n    },\n  },\n\n  /**\n   * Gets or sets the Entity instance currently being tracked by the camera.\n   * @memberof Viewer.prototype\n   * @type {Entity | undefined}\n   */\n  trackedEntity: {\n    get: function () {\n      return this._trackedEntity;\n    },\n    set: function (value) {\n      if (this._trackedEntity !== value) {\n        this._trackedEntity = value;\n\n        //Cancel any pending zoom\n        cancelZoom(this);\n\n        var scene = this.scene;\n        var sceneMode = scene.mode;\n\n        //Stop tracking\n        if (!defined(value) || !defined(value.position)) {\n          this._needTrackedEntityUpdate = false;\n          if (\n            sceneMode === SceneMode.COLUMBUS_VIEW ||\n            sceneMode === SceneMode.SCENE2D\n          ) {\n            scene.screenSpaceCameraController.enableTranslate = true;\n          }\n\n          if (\n            sceneMode === SceneMode.COLUMBUS_VIEW ||\n            sceneMode === SceneMode.SCENE3D\n          ) {\n            scene.screenSpaceCameraController.enableTilt = true;\n          }\n\n          this._entityView = undefined;\n          this.camera.lookAtTransform(Matrix4.IDENTITY);\n        } else {\n          //We can't start tracking immediately, so we set a flag and start tracking\n          //when the bounding sphere is ready (most likely next frame).\n          this._needTrackedEntityUpdate = true;\n        }\n\n        this._trackedEntityChanged.raiseEvent(value);\n        this.scene.requestRender();\n      }\n    },\n  },\n  /**\n   * Gets or sets the object instance for which to display a selection indicator.\n   *\n   * If a user interactively picks a Cesium3DTilesFeature instance, then this property\n   * will contain a transient Entity instance with a property named \"feature\" that is\n   * the instance that was picked.\n   * @memberof Viewer.prototype\n   * @type {Entity | undefined}\n   */\n  selectedEntity: {\n    get: function () {\n      return this._selectedEntity;\n    },\n    set: function (value) {\n      if (this._selectedEntity !== value) {\n        this._selectedEntity = value;\n        var selectionIndicatorViewModel = defined(this._selectionIndicator)\n          ? this._selectionIndicator.viewModel\n          : undefined;\n        if (defined(value)) {\n          if (defined(selectionIndicatorViewModel)) {\n            selectionIndicatorViewModel.animateAppear();\n          }\n        } else if (defined(selectionIndicatorViewModel)) {\n          // Leave the info text in place here, it is needed during the exit animation.\n          selectionIndicatorViewModel.animateDepart();\n        }\n        this._selectedEntityChanged.raiseEvent(value);\n      }\n    },\n  },\n  /**\n   * Gets the event that is raised when the selected entity changes.\n   * @memberof Viewer.prototype\n   * @type {Event}\n   * @readonly\n   */\n  selectedEntityChanged: {\n    get: function () {\n      return this._selectedEntityChanged;\n    },\n  },\n  /**\n   * Gets the event that is raised when the tracked entity changes.\n   * @memberof Viewer.prototype\n   * @type {Event}\n   * @readonly\n   */\n  trackedEntityChanged: {\n    get: function () {\n      return this._trackedEntityChanged;\n    },\n  },\n  /**\n   * Gets or sets the data source to track with the viewer's clock.\n   * @memberof Viewer.prototype\n   * @type {DataSource}\n   */\n  clockTrackedDataSource: {\n    get: function () {\n      return this._clockTrackedDataSource;\n    },\n    set: function (value) {\n      if (this._clockTrackedDataSource !== value) {\n        this._clockTrackedDataSource = value;\n        trackDataSourceClock(this._timeline, this.clock, value);\n      }\n    },\n  },\n});\n\n/**\n * Extends the base viewer functionality with the provided mixin.\n * A mixin may add additional properties, functions, or other behavior\n * to the provided viewer instance.\n *\n * @param {Viewer.ViewerMixin} mixin The Viewer mixin to add to this instance.\n * @param {Object} [options] The options object to be passed to the mixin function.\n *\n * @see viewerDragDropMixin\n */\nViewer.prototype.extend = function (mixin, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(mixin)) {\n    throw new DeveloperError(\"mixin is required.\");\n  }\n  //>>includeEnd('debug')\n\n  mixin(this, options);\n};\n\n/**\n * Resizes the widget to match the container size.\n * This function is called automatically as needed unless\n * <code>useDefaultRenderLoop</code> is set to false.\n */\nViewer.prototype.resize = function () {\n  var cesiumWidget = this._cesiumWidget;\n  var container = this._container;\n  var width = container.clientWidth;\n  var height = container.clientHeight;\n  var animationExists = defined(this._animation);\n  var timelineExists = defined(this._timeline);\n\n  cesiumWidget.resize();\n\n  if (width === this._lastWidth && height === this._lastHeight) {\n    return;\n  }\n\n  var panelMaxHeight = height - 125;\n  var baseLayerPickerDropDown = this._baseLayerPickerDropDown;\n\n  if (defined(baseLayerPickerDropDown)) {\n    baseLayerPickerDropDown.style.maxHeight = panelMaxHeight + \"px\";\n  }\n\n  if (defined(this._geocoder)) {\n    var geocoderSuggestions = this._geocoder.searchSuggestionsContainer;\n    geocoderSuggestions.style.maxHeight = panelMaxHeight + \"px\";\n  }\n\n  if (defined(this._infoBox)) {\n    this._infoBox.viewModel.maxHeight = panelMaxHeight;\n  }\n\n  var timeline = this._timeline;\n  var animationContainer;\n  var animationWidth = 0;\n  var creditLeft = 0;\n  var creditBottom = 0;\n\n  if (\n    animationExists &&\n    window.getComputedStyle(this._animation.container).visibility !== \"hidden\"\n  ) {\n    var lastWidth = this._lastWidth;\n    animationContainer = this._animation.container;\n    if (width > 900) {\n      animationWidth = 169;\n      if (lastWidth <= 900) {\n        animationContainer.style.width = \"169px\";\n        animationContainer.style.height = \"112px\";\n        this._animation.resize();\n      }\n    } else if (width >= 600) {\n      animationWidth = 136;\n      if (lastWidth < 600 || lastWidth > 900) {\n        animationContainer.style.width = \"136px\";\n        animationContainer.style.height = \"90px\";\n        this._animation.resize();\n      }\n    } else {\n      animationWidth = 106;\n      if (lastWidth > 600 || lastWidth === 0) {\n        animationContainer.style.width = \"106px\";\n        animationContainer.style.height = \"70px\";\n        this._animation.resize();\n      }\n    }\n    creditLeft = animationWidth + 5;\n  }\n\n  if (\n    timelineExists &&\n    window.getComputedStyle(this._timeline.container).visibility !== \"hidden\"\n  ) {\n    var fullscreenButton = this._fullscreenButton;\n    var vrButton = this._vrButton;\n    var timelineContainer = timeline.container;\n    var timelineStyle = timelineContainer.style;\n\n    creditBottom = timelineContainer.clientHeight + 3;\n    timelineStyle.left = animationWidth + \"px\";\n\n    var pixels = 0;\n    if (defined(fullscreenButton)) {\n      pixels += fullscreenButton.container.clientWidth;\n    }\n    if (defined(vrButton)) {\n      pixels += vrButton.container.clientWidth;\n    }\n\n    timelineStyle.right = pixels + \"px\";\n    timeline.resize();\n  }\n\n  this._bottomContainer.style.left = creditLeft + \"px\";\n  this._bottomContainer.style.bottom = creditBottom + \"px\";\n\n  this._lastWidth = width;\n  this._lastHeight = height;\n};\n\n/**\n * This forces the widget to re-think its layout, including\n * widget sizes and credit placement.\n */\nViewer.prototype.forceResize = function () {\n  this._lastWidth = 0;\n  this.resize();\n};\n\n/**\n * Renders the scene.  This function is called automatically\n * unless <code>useDefaultRenderLoop</code> is set to false;\n */\nViewer.prototype.render = function () {\n  this._cesiumWidget.render();\n};\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nViewer.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nViewer.prototype.destroy = function () {\n  var i;\n\n  this.screenSpaceEventHandler.removeInputAction(\n    ScreenSpaceEventType.LEFT_CLICK\n  );\n  this.screenSpaceEventHandler.removeInputAction(\n    ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n  );\n\n  // Unsubscribe from data sources\n  var dataSources = this.dataSources;\n  var dataSourceLength = dataSources.length;\n  for (i = 0; i < dataSourceLength; i++) {\n    this._dataSourceRemoved(dataSources, dataSources.get(i));\n  }\n  this._dataSourceRemoved(undefined, this._dataSourceDisplay.defaultDataSource);\n\n  this._container.removeChild(this._element);\n  this._element.removeChild(this._toolbar);\n\n  this._eventHelper.removeAll();\n\n  if (defined(this._geocoder)) {\n    this._geocoder = this._geocoder.destroy();\n  }\n\n  if (defined(this._homeButton)) {\n    this._homeButton = this._homeButton.destroy();\n  }\n\n  if (defined(this._sceneModePicker)) {\n    this._sceneModePicker = this._sceneModePicker.destroy();\n  }\n\n  if (defined(this._projectionPicker)) {\n    this._projectionPicker = this._projectionPicker.destroy();\n  }\n\n  if (defined(this._baseLayerPicker)) {\n    this._baseLayerPicker = this._baseLayerPicker.destroy();\n  }\n\n  if (defined(this._animation)) {\n    this._element.removeChild(this._animation.container);\n    this._animation = this._animation.destroy();\n  }\n\n  if (defined(this._timeline)) {\n    this._timeline.removeEventListener(\n      \"settime\",\n      onTimelineScrubfunction,\n      false\n    );\n    this._element.removeChild(this._timeline.container);\n    this._timeline = this._timeline.destroy();\n  }\n\n  if (defined(this._fullscreenButton)) {\n    this._fullscreenSubscription.dispose();\n    this._element.removeChild(this._fullscreenButton.container);\n    this._fullscreenButton = this._fullscreenButton.destroy();\n  }\n\n  if (defined(this._vrButton)) {\n    this._vrSubscription.dispose();\n    this._vrModeSubscription.dispose();\n    this._element.removeChild(this._vrButton.container);\n    this._vrButton = this._vrButton.destroy();\n  }\n\n  if (defined(this._infoBox)) {\n    this._element.removeChild(this._infoBox.container);\n    this._infoBox = this._infoBox.destroy();\n  }\n\n  if (defined(this._selectionIndicator)) {\n    this._element.removeChild(this._selectionIndicator.container);\n    this._selectionIndicator = this._selectionIndicator.destroy();\n  }\n\n  if (this._destroyClockViewModel) {\n    this._clockViewModel = this._clockViewModel.destroy();\n  }\n  this._dataSourceDisplay = this._dataSourceDisplay.destroy();\n  this._cesiumWidget = this._cesiumWidget.destroy();\n\n  if (this._destroyDataSourceCollection) {\n    this._dataSourceCollection = this._dataSourceCollection.destroy();\n  }\n\n  return destroyObject(this);\n};\n\n/**\n * @private\n */\nViewer.prototype._dataSourceAdded = function (\n  dataSourceCollection,\n  dataSource\n) {\n  var entityCollection = dataSource.entities;\n  entityCollection.collectionChanged.addEventListener(\n    Viewer.prototype._onEntityCollectionChanged,\n    this\n  );\n};\n\n/**\n * @private\n */\nViewer.prototype._dataSourceRemoved = function (\n  dataSourceCollection,\n  dataSource\n) {\n  var entityCollection = dataSource.entities;\n  entityCollection.collectionChanged.removeEventListener(\n    Viewer.prototype._onEntityCollectionChanged,\n    this\n  );\n\n  if (defined(this.trackedEntity)) {\n    if (\n      entityCollection.getById(this.trackedEntity.id) === this.trackedEntity\n    ) {\n      this.trackedEntity = undefined;\n    }\n  }\n\n  if (defined(this.selectedEntity)) {\n    if (\n      entityCollection.getById(this.selectedEntity.id) === this.selectedEntity\n    ) {\n      this.selectedEntity = undefined;\n    }\n  }\n};\n\n/**\n * @private\n */\nViewer.prototype._onTick = function (clock) {\n  var time = clock.currentTime;\n\n  var isUpdated = this._dataSourceDisplay.update(time);\n  if (this._allowDataSourcesToSuspendAnimation) {\n    this._clockViewModel.canAnimate = isUpdated;\n  }\n\n  var entityView = this._entityView;\n  if (defined(entityView)) {\n    var trackedEntity = this._trackedEntity;\n    var trackedState = this._dataSourceDisplay.getBoundingSphere(\n      trackedEntity,\n      false,\n      boundingSphereScratch\n    );\n    if (trackedState === BoundingSphereState.DONE) {\n      entityView.update(time, boundingSphereScratch);\n    }\n  }\n\n  var position;\n  var enableCamera = false;\n  var selectedEntity = this.selectedEntity;\n  var showSelection = defined(selectedEntity) && this._enableInfoOrSelection;\n\n  if (\n    showSelection &&\n    selectedEntity.isShowing &&\n    selectedEntity.isAvailable(time)\n  ) {\n    var state = this._dataSourceDisplay.getBoundingSphere(\n      selectedEntity,\n      true,\n      boundingSphereScratch\n    );\n    if (state !== BoundingSphereState.FAILED) {\n      position = boundingSphereScratch.center;\n    } else if (defined(selectedEntity.position)) {\n      position = selectedEntity.position.getValue(time, position);\n    }\n    enableCamera = defined(position);\n  }\n\n  var selectionIndicatorViewModel = defined(this._selectionIndicator)\n    ? this._selectionIndicator.viewModel\n    : undefined;\n  if (defined(selectionIndicatorViewModel)) {\n    selectionIndicatorViewModel.position = Cartesian3.clone(\n      position,\n      selectionIndicatorViewModel.position\n    );\n    selectionIndicatorViewModel.showSelection = showSelection && enableCamera;\n    selectionIndicatorViewModel.update();\n  }\n\n  var infoBoxViewModel = defined(this._infoBox)\n    ? this._infoBox.viewModel\n    : undefined;\n  if (defined(infoBoxViewModel)) {\n    infoBoxViewModel.showInfo = showSelection;\n    infoBoxViewModel.enableCamera = enableCamera;\n    infoBoxViewModel.isCameraTracking =\n      this.trackedEntity === this.selectedEntity;\n\n    if (showSelection) {\n      infoBoxViewModel.titleText = defaultValue(\n        selectedEntity.name,\n        selectedEntity.id\n      );\n      infoBoxViewModel.description = Property.getValueOrDefault(\n        selectedEntity.description,\n        time,\n        \"\"\n      );\n    } else {\n      infoBoxViewModel.titleText = \"\";\n      infoBoxViewModel.description = \"\";\n    }\n  }\n};\n\n/**\n * @private\n */\nViewer.prototype._onEntityCollectionChanged = function (\n  collection,\n  added,\n  removed\n) {\n  var length = removed.length;\n  for (var i = 0; i < length; i++) {\n    var removedObject = removed[i];\n    if (this.trackedEntity === removedObject) {\n      this.trackedEntity = undefined;\n    }\n    if (this.selectedEntity === removedObject) {\n      this.selectedEntity = undefined;\n    }\n  }\n};\n\n/**\n * @private\n */\nViewer.prototype._onInfoBoxCameraClicked = function (infoBoxViewModel) {\n  if (\n    infoBoxViewModel.isCameraTracking &&\n    this.trackedEntity === this.selectedEntity\n  ) {\n    this.trackedEntity = undefined;\n  } else {\n    var selectedEntity = this.selectedEntity;\n    var position = selectedEntity.position;\n    if (defined(position)) {\n      this.trackedEntity = this.selectedEntity;\n    } else {\n      this.zoomTo(this.selectedEntity);\n    }\n  }\n};\n\n/**\n * @private\n */\nViewer.prototype._clearTrackedObject = function () {\n  this.trackedEntity = undefined;\n};\n\n/**\n * @private\n */\nViewer.prototype._onInfoBoxClockClicked = function (infoBoxViewModel) {\n  this.selectedEntity = undefined;\n};\n\n/**\n * @private\n */\nViewer.prototype._clearObjects = function () {\n  this.trackedEntity = undefined;\n  this.selectedEntity = undefined;\n};\n\n/**\n * @private\n */\nViewer.prototype._onDataSourceChanged = function (dataSource) {\n  if (this.clockTrackedDataSource === dataSource) {\n    trackDataSourceClock(this.timeline, this.clock, dataSource);\n  }\n};\n\n/**\n * @private\n */\nViewer.prototype._onDataSourceAdded = function (\n  dataSourceCollection,\n  dataSource\n) {\n  if (this._automaticallyTrackDataSourceClocks) {\n    this.clockTrackedDataSource = dataSource;\n  }\n  var id = dataSource.entities.id;\n  var removalFunc = this._eventHelper.add(\n    dataSource.changedEvent,\n    Viewer.prototype._onDataSourceChanged,\n    this\n  );\n  this._dataSourceChangedListeners[id] = removalFunc;\n};\n\n/**\n * @private\n */\nViewer.prototype._onDataSourceRemoved = function (\n  dataSourceCollection,\n  dataSource\n) {\n  var resetClock = this.clockTrackedDataSource === dataSource;\n  var id = dataSource.entities.id;\n  this._dataSourceChangedListeners[id]();\n  this._dataSourceChangedListeners[id] = undefined;\n  if (resetClock) {\n    var numDataSources = dataSourceCollection.length;\n    if (this._automaticallyTrackDataSourceClocks && numDataSources > 0) {\n      this.clockTrackedDataSource = dataSourceCollection.get(\n        numDataSources - 1\n      );\n    } else {\n      this.clockTrackedDataSource = undefined;\n    }\n  }\n};\n\n/**\n * Asynchronously sets the camera to view the provided entity, entities, or data source.\n * If the data source is still in the process of loading or the visualization is otherwise still loading,\n * this method waits for the data to be ready before performing the zoom.\n *\n * <p>The offset is heading/pitch/range in the local east-north-up reference frame centered at the center of the bounding sphere.\n * The heading and the pitch angles are defined in the local east-north-up reference frame.\n * The heading is the angle from y axis and increasing towards the x axis. Pitch is the rotation from the xy-plane. Positive pitch\n * angles are above the plane. Negative pitch angles are below the plane. The range is the distance from the center. If the range is\n * zero, a range will be computed such that the whole bounding sphere is visible.</p>\n *\n * <p>In 2D, there must be a top down view. The camera will be placed above the target looking down. The height above the\n * target will be the range. The heading will be determined from the offset. If the heading cannot be\n * determined from the offset, the heading will be north.</p>\n *\n * @param {Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud|Promise.<Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud>} target The entity, array of entities, entity collection, data source, Cesium3DTileset, point cloud, or imagery layer to view. You can also pass a promise that resolves to one of the previously mentioned types.\n * @param {HeadingPitchRange} [offset] The offset from the center of the entity in the local east-north-up reference frame.\n * @returns {Promise.<Boolean>} A Promise that resolves to true if the zoom was successful or false if the target is not currently visualized in the scene or the zoom was cancelled.\n */\nViewer.prototype.zoomTo = function (target, offset) {\n  var options = {\n    offset: offset,\n  };\n  return zoomToOrFly(this, target, options, false);\n};\n\n/**\n * Flies the camera to the provided entity, entities, or data source.\n * If the data source is still in the process of loading or the visualization is otherwise still loading,\n * this method waits for the data to be ready before performing the flight.\n *\n * <p>The offset is heading/pitch/range in the local east-north-up reference frame centered at the center of the bounding sphere.\n * The heading and the pitch angles are defined in the local east-north-up reference frame.\n * The heading is the angle from y axis and increasing towards the x axis. Pitch is the rotation from the xy-plane. Positive pitch\n * angles are above the plane. Negative pitch angles are below the plane. The range is the distance from the center. If the range is\n * zero, a range will be computed such that the whole bounding sphere is visible.</p>\n *\n * <p>In 2D, there must be a top down view. The camera will be placed above the target looking down. The height above the\n * target will be the range. The heading will be determined from the offset. If the heading cannot be\n * determined from the offset, the heading will be north.</p>\n *\n * @param {Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud|Promise.<Entity|Entity[]|EntityCollection|DataSource|ImageryLayer|Cesium3DTileset|TimeDynamicPointCloud>} target The entity, array of entities, entity collection, data source, Cesium3DTileset, point cloud, or imagery layer to view. You can also pass a promise that resolves to one of the previously mentioned types.\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.duration=3.0] The duration of the flight in seconds.\n * @param {Number} [options.maximumHeight] The maximum height at the peak of the flight.\n * @param {HeadingPitchRange} [options.offset] The offset from the target in the local east-north-up reference frame centered at the target.\n * @returns {Promise.<Boolean>} A Promise that resolves to true if the flight was successful or false if the target is not currently visualized in the scene or the flight was cancelled. //TODO: Cleanup entity mentions\n */\nViewer.prototype.flyTo = function (target, options) {\n  return zoomToOrFly(this, target, options, true);\n};\n\nfunction zoomToOrFly(that, zoomTarget, options, isFlight) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(zoomTarget)) {\n    throw new DeveloperError(\"zoomTarget is required.\");\n  }\n  //>>includeEnd('debug');\n\n  cancelZoom(that);\n\n  //We can't actually perform the zoom until all visualization is ready and\n  //bounding spheres have been computed.  Therefore we create and return\n  //a deferred which will be resolved as part of the post-render step in the\n  //frame that actually performs the zoom\n  var zoomPromise = when.defer();\n  that._zoomPromise = zoomPromise;\n  that._zoomIsFlight = isFlight;\n  that._zoomOptions = options;\n\n  when(zoomTarget, function (zoomTarget) {\n    //Only perform the zoom if it wasn't cancelled before the promise resolved.\n    if (that._zoomPromise !== zoomPromise) {\n      return;\n    }\n\n    //If the zoom target is a rectangular imagery in an ImageLayer\n    if (zoomTarget instanceof ImageryLayer) {\n      zoomTarget\n        .getViewableRectangle()\n        .then(function (rectangle) {\n          return computeFlyToLocationForRectangle(rectangle, that.scene);\n        })\n        .then(function (position) {\n          //Only perform the zoom if it wasn't cancelled before the promise was resolved\n          if (that._zoomPromise === zoomPromise) {\n            that._zoomTarget = position;\n          }\n        });\n      return;\n    }\n\n    //If the zoom target is a Cesium3DTileset\n    if (zoomTarget instanceof Cesium3DTileset) {\n      that._zoomTarget = zoomTarget;\n      return;\n    }\n\n    //If the zoom target is a TimeDynamicPointCloud\n    if (zoomTarget instanceof TimeDynamicPointCloud) {\n      that._zoomTarget = zoomTarget;\n      return;\n    }\n\n    //If the zoom target is a data source, and it's in the middle of loading, wait for it to finish loading.\n    if (zoomTarget.isLoading && defined(zoomTarget.loadingEvent)) {\n      var removeEvent = zoomTarget.loadingEvent.addEventListener(function () {\n        removeEvent();\n\n        //Only perform the zoom if it wasn't cancelled before the data source finished.\n        if (that._zoomPromise === zoomPromise) {\n          that._zoomTarget = zoomTarget.entities.values.slice(0);\n        }\n      });\n      return;\n    }\n\n    //Zoom target is already an array, just copy it and return.\n    if (Array.isArray(zoomTarget)) {\n      that._zoomTarget = zoomTarget.slice(0);\n      return;\n    }\n\n    //If zoomTarget is an EntityCollection, this will retrieve the array\n    zoomTarget = defaultValue(zoomTarget.values, zoomTarget);\n\n    //If zoomTarget is a DataSource, this will retrieve the array.\n    if (defined(zoomTarget.entities)) {\n      zoomTarget = zoomTarget.entities.values;\n    }\n\n    //Zoom target is already an array, just copy it and return.\n    if (Array.isArray(zoomTarget)) {\n      that._zoomTarget = zoomTarget.slice(0);\n    } else {\n      //Single entity\n      that._zoomTarget = [zoomTarget];\n    }\n  });\n\n  that.scene.requestRender();\n  return zoomPromise.promise;\n}\n\nfunction clearZoom(viewer) {\n  viewer._zoomPromise = undefined;\n  viewer._zoomTarget = undefined;\n  viewer._zoomOptions = undefined;\n}\n\nfunction cancelZoom(viewer) {\n  var zoomPromise = viewer._zoomPromise;\n  if (defined(zoomPromise)) {\n    clearZoom(viewer);\n    zoomPromise.resolve(false);\n  }\n}\n\n/**\n * @private\n */\nViewer.prototype._postRender = function () {\n  updateZoomTarget(this);\n  updateTrackedEntity(this);\n};\n\nfunction updateZoomTarget(viewer) {\n  var target = viewer._zoomTarget;\n  if (!defined(target) || viewer.scene.mode === SceneMode.MORPHING) {\n    return;\n  }\n\n  var scene = viewer.scene;\n  var camera = scene.camera;\n  var zoomPromise = viewer._zoomPromise;\n  var zoomOptions = defaultValue(viewer._zoomOptions, {});\n  var options;\n  var boundingSphere;\n\n  // If zoomTarget was Cesium3DTileset\n  if (target instanceof Cesium3DTileset) {\n    return target.readyPromise.then(function () {\n      var boundingSphere = target.boundingSphere;\n      // If offset was originally undefined then give it base value instead of empty object\n      if (!defined(zoomOptions.offset)) {\n        zoomOptions.offset = new HeadingPitchRange(\n          0.0,\n          -0.5,\n          boundingSphere.radius\n        );\n      }\n\n      options = {\n        offset: zoomOptions.offset,\n        duration: zoomOptions.duration,\n        maximumHeight: zoomOptions.maximumHeight,\n        complete: function () {\n          zoomPromise.resolve(true);\n        },\n        cancel: function () {\n          zoomPromise.resolve(false);\n        },\n      };\n\n      if (viewer._zoomIsFlight) {\n        camera.flyToBoundingSphere(target.boundingSphere, options);\n      } else {\n        camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n        camera.lookAtTransform(Matrix4.IDENTITY);\n\n        // Finish the promise\n        zoomPromise.resolve(true);\n      }\n\n      clearZoom(viewer);\n    });\n  }\n\n  // If zoomTarget was TimeDynamicPointCloud\n  if (target instanceof TimeDynamicPointCloud) {\n    return target.readyPromise.then(function () {\n      var boundingSphere = target.boundingSphere;\n      // If offset was originally undefined then give it base value instead of empty object\n      if (!defined(zoomOptions.offset)) {\n        zoomOptions.offset = new HeadingPitchRange(\n          0.0,\n          -0.5,\n          boundingSphere.radius\n        );\n      }\n\n      options = {\n        offset: zoomOptions.offset,\n        duration: zoomOptions.duration,\n        maximumHeight: zoomOptions.maximumHeight,\n        complete: function () {\n          zoomPromise.resolve(true);\n        },\n        cancel: function () {\n          zoomPromise.resolve(false);\n        },\n      };\n\n      if (viewer._zoomIsFlight) {\n        camera.flyToBoundingSphere(boundingSphere, options);\n      } else {\n        camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n        camera.lookAtTransform(Matrix4.IDENTITY);\n\n        // Finish the promise\n        zoomPromise.resolve(true);\n      }\n\n      clearZoom(viewer);\n    });\n  }\n\n  // If zoomTarget was an ImageryLayer\n  if (target instanceof Cartographic) {\n    options = {\n      destination: scene.mapProjection.ellipsoid.cartographicToCartesian(\n        target\n      ),\n      duration: zoomOptions.duration,\n      maximumHeight: zoomOptions.maximumHeight,\n      complete: function () {\n        zoomPromise.resolve(true);\n      },\n      cancel: function () {\n        zoomPromise.resolve(false);\n      },\n    };\n\n    if (viewer._zoomIsFlight) {\n      camera.flyTo(options);\n    } else {\n      camera.setView(options);\n      zoomPromise.resolve(true);\n    }\n    clearZoom(viewer);\n    return;\n  }\n\n  var entities = target;\n\n  var boundingSpheres = [];\n  for (var i = 0, len = entities.length; i < len; i++) {\n    var state = viewer._dataSourceDisplay.getBoundingSphere(\n      entities[i],\n      false,\n      boundingSphereScratch\n    );\n\n    if (state === BoundingSphereState.PENDING) {\n      return;\n    } else if (state !== BoundingSphereState.FAILED) {\n      boundingSpheres.push(BoundingSphere.clone(boundingSphereScratch));\n    }\n  }\n\n  if (boundingSpheres.length === 0) {\n    cancelZoom(viewer);\n    return;\n  }\n\n  //Stop tracking the current entity.\n  viewer.trackedEntity = undefined;\n\n  boundingSphere = BoundingSphere.fromBoundingSpheres(boundingSpheres);\n\n  if (!viewer._zoomIsFlight) {\n    camera.viewBoundingSphere(boundingSphere, zoomOptions.offset);\n    camera.lookAtTransform(Matrix4.IDENTITY);\n    clearZoom(viewer);\n    zoomPromise.resolve(true);\n  } else {\n    clearZoom(viewer);\n    camera.flyToBoundingSphere(boundingSphere, {\n      duration: zoomOptions.duration,\n      maximumHeight: zoomOptions.maximumHeight,\n      complete: function () {\n        zoomPromise.resolve(true);\n      },\n      cancel: function () {\n        zoomPromise.resolve(false);\n      },\n      offset: zoomOptions.offset,\n    });\n  }\n}\n\nfunction updateTrackedEntity(viewer) {\n  if (!viewer._needTrackedEntityUpdate) {\n    return;\n  }\n\n  var trackedEntity = viewer._trackedEntity;\n  var currentTime = viewer.clock.currentTime;\n\n  //Verify we have a current position at this time. This is only triggered if a position\n  //has become undefined after trackedEntity is set but before the boundingSphere has been\n  //computed. In this case, we will track the entity once it comes back into existence.\n  var currentPosition = Property.getValueOrUndefined(\n    trackedEntity.position,\n    currentTime\n  );\n\n  if (!defined(currentPosition)) {\n    return;\n  }\n\n  var scene = viewer.scene;\n\n  var state = viewer._dataSourceDisplay.getBoundingSphere(\n    trackedEntity,\n    false,\n    boundingSphereScratch\n  );\n  if (state === BoundingSphereState.PENDING) {\n    return;\n  }\n\n  var sceneMode = scene.mode;\n  if (\n    sceneMode === SceneMode.COLUMBUS_VIEW ||\n    sceneMode === SceneMode.SCENE2D\n  ) {\n    scene.screenSpaceCameraController.enableTranslate = false;\n  }\n\n  if (\n    sceneMode === SceneMode.COLUMBUS_VIEW ||\n    sceneMode === SceneMode.SCENE3D\n  ) {\n    scene.screenSpaceCameraController.enableTilt = false;\n  }\n\n  var bs =\n    state !== BoundingSphereState.FAILED ? boundingSphereScratch : undefined;\n  viewer._entityView = new EntityView(\n    trackedEntity,\n    scene,\n    scene.mapProjection.ellipsoid\n  );\n  viewer._entityView.update(currentTime, bs);\n  viewer._needTrackedEntityUpdate = false;\n}\n\n/**\n * A function that augments a Viewer instance with additional functionality.\n * @callback Viewer.ViewerMixin\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} options Options object to be passed to the mixin function.\n *\n * @see Viewer#extend\n */\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}