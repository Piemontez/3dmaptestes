{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n      orientation: {\n        heading: Cesium.Math.toRadians(0.0),\n        pitch: Cesium.Math.toRadians(-15.0)\n      }\n    }); //teste fromid - funciona, mas depende do website\n\n    /* Cesium.IonResource.fromAssetId(353567)\n      .then(function (resource) {\n        viewer.entities.add({\n          position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n          model: {\n            uri: resource,\n            scale: 10.0\n          },\n        });\n      }) */\n    //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n\n    var position = Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100);\n    var heading = Cesium.Math.toRadians(135);\n    var pitch = 0;\n    var roll = 0;\n    var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n    var orientation = Cesium.Transforms.headingPitchRollQuaternion(position, hpr);\n    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(Cesium.Cartesian3.fromDegrees(-78.669713, -1.663594, 0.0));\n    var model = scene.primitives.add(Cesium.Model.fromGltf({\n      url: 'http://localhost:3000/object/teapot',\n      modelMatrix: modelMatrix,\n      scale: 5.0\n    }));\n    viewer.entities.add({\n      name: 'nice',\n      position: position,\n      orientation: orientation,\n      model: {\n        uri: 'http://localhost:3000/object/teapot',\n        minimumPixelSize: 128,\n        maximumScale: 20000\n      }\n    }); //viewer.entities.add({\n    //  position: Cesium.Cartesian3.fromDegrees(-21.937068, 64.128000, 100),\n    //  model: {\n    //    url: '../../../server/obj/teapot.gltf',\n    //    minimumPixelSize: 128,\n    //    maximumScale: 20000,\n    //  }\n    //}); \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx"],"names":["React","Map3D","Component","componentDidMount","Cesium","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","orientation","heading","Math","toRadians","pitch","position","roll","hpr","HeadingPitchRoll","Transforms","headingPitchRollQuaternion","modelMatrix","eastNorthUpToFixedFrame","model","Model","fromGltf","url","scale","entities","name","uri","minimumPixelSize","maximumScale","render","height","width"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAC/CC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,MAAM,CAACC,GAAP,CAAWC,kBAAX,GAAgC,sLAAhC;AAEA,UAAMC,MAAM,GAAG,IAAIH,MAAM,CAACI,MAAX,CAAkB,OAAlB,EAA2B;AACxCC,MAAAA,eAAe,EAAEL,MAAM,CAACM,kBAAP;AADuB,KAA3B,CAAf;AAIAH,IAAAA,MAAM,CAACI,KAAP,CAAaC,UAAb,CAAwBC,GAAxB,CAA4BT,MAAM,CAACU,kBAAP,EAA5B;AAEAP,IAAAA,MAAM,CAACQ,MAAP,CAAcC,KAAd,CAAoB;AAClBC,MAAAA,WAAW,EAAGb,MAAM,CAACc,UAAP,CAAkBC,WAAlB,CAA8B,CAAC,SAA/B,EAA0C,SAA1C,EAAqD,GAArD,CADI;AAElBC,MAAAA,WAAW,EAAG;AACZC,QAAAA,OAAO,EAAGjB,MAAM,CAACkB,IAAP,CAAYC,SAAZ,CAAsB,GAAtB,CADE;AAEZC,QAAAA,KAAK,EAAGpB,MAAM,CAACkB,IAAP,CAAYC,SAAZ,CAAsB,CAAC,IAAvB;AAFI;AAFI,KAApB,EATe,CAiBf;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ;;AACA,QAAIE,QAAQ,GAAGrB,MAAM,CAACc,UAAP,CAAkBC,WAAlB,CACb,CAAC,SADY,EAEb,SAFa,EAGb,GAHa,CAAf;AAKA,QAAIE,OAAO,GAAGjB,MAAM,CAACkB,IAAP,CAAYC,SAAZ,CAAsB,GAAtB,CAAd;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIE,IAAI,GAAG,CAAX;AACA,QAAIC,GAAG,GAAG,IAAIvB,MAAM,CAACwB,gBAAX,CAA4BP,OAA5B,EAAqCG,KAArC,EAA4CE,IAA5C,CAAV;AACA,QAAIN,WAAW,GAAGhB,MAAM,CAACyB,UAAP,CAAkBC,0BAAlB,CAChBL,QADgB,EAEhBE,GAFgB,CAAlB;AAKA,QAAII,WAAW,GAAG3B,MAAM,CAACyB,UAAP,CAAkBG,uBAAlB,CAA0C5B,MAAM,CAACc,UAAP,CAAkBC,WAAlB,CAA8B,CAAC,SAA/B,EAAyC,CAAC,QAA1C,EAAoD,GAApD,CAA1C,CAAlB;AAEA,QAAIc,KAAK,GAAGtB,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqBT,MAAM,CAAC8B,KAAP,CAAaC,QAAb,CAAsB;AACrDC,MAAAA,GAAG,EAAG,qCAD+C;AAErDL,MAAAA,WAAW,EAAGA,WAFuC;AAGrDM,MAAAA,KAAK,EAAE;AAH8C,KAAtB,CAArB,CAAZ;AAMA9B,IAAAA,MAAM,CAAC+B,QAAP,CAAgBzB,GAAhB,CAAoB;AAClB0B,MAAAA,IAAI,EAAE,MADY;AAElBd,MAAAA,QAAQ,EAAEA,QAFQ;AAGlBL,MAAAA,WAAW,EAAEA,WAHK;AAIlBa,MAAAA,KAAK,EAAE;AACLO,QAAAA,GAAG,EAAE,qCADA;AAELC,QAAAA,gBAAgB,EAAE,GAFb;AAGLC,QAAAA,YAAY,EAAE;AAHT;AAJW,KAApB,EApDe,CA+Df;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAZ;AAA4C,MAAA,EAAE,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA5E8C","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n          terrainProvider: Cesium.createWorldTerrain()\n        });    \n\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n          orientation : {\n            heading : Cesium.Math.toRadians(0.0),\n            pitch : Cesium.Math.toRadians(-15.0),\n          }\n        });\n\n        //teste fromid - funciona, mas depende do website\n        /* Cesium.IonResource.fromAssetId(353567)\n          .then(function (resource) {\n            viewer.entities.add({\n              position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n              model: {\n                uri: resource,\n                scale: 10.0\n              },\n            });\n          }) */\n\n        //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n        var position = Cesium.Cartesian3.fromDegrees(\n          -21.938068, \n          64.128000,\n          100\n        );\n        var heading = Cesium.Math.toRadians(135);\n        var pitch = 0;\n        var roll = 0;\n        var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n        var orientation = Cesium.Transforms.headingPitchRollQuaternion(\n          position,\n          hpr\n        );\n        \n        var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(Cesium.Cartesian3.fromDegrees(-78.669713,-1.663594, 0.0));\n\n        var model = scene.primitives.add(Cesium.Model.fromGltf({\n          url : 'http://localhost:3000/object/teapot',\n          modelMatrix : modelMatrix,\n          scale: 5.0\n        }));\n\n        viewer.entities.add({\n          name: 'nice',\n          position: position,\n          orientation: orientation,\n          model: {\n            uri: 'http://localhost:3000/object/teapot',\n            minimumPixelSize: 128,\n            maximumScale: 20000,\n          },\n        });\n\n        //viewer.entities.add({\n        //  position: Cesium.Cartesian3.fromDegrees(-21.937068, 64.128000, 100),\n        //  model: {\n        //    url: '../../../server/obj/teapot.gltf',\n        //    minimumPixelSize: 128,\n        //    maximumScale: 20000,\n        //  }\n        //}); \n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}