{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx\";\nimport * as Cesium from 'cesium';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positionArray = [[-21.938068, 64.128000], [-21.938268, 64.128100], [-21.938468, 64.128300], [-21.938568, 64.128700], [-21.938968, 64.129700], [-21.938768, 64.129700], [-21.938568, 64.129600], [-21.938268, 64.129300], [-21.937868, 64.128600], [-21.938468, 64.128000]];\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.shadows = true;\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400)\n    });\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n    function createPoint(worldPosition) {\n      return viewer.entities.add({\n        position: worldPosition,\n        point: {\n          color: Cesium.Color.WHITE,\n          pixelSize: 5,\n          heightReference: Cesium.HeightReference.CLAMP_TO_GROUND\n        }\n      });\n    }\n\n    function drawShape(positionData) {\n      return viewer.entities.add({\n        polyline: {\n          positions: positionData,\n          clampToGround: true,\n          width: 3\n        }\n      });\n    }\n\n    var activeShapePoints = [];\n    var floatingPoint;\n    var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n    positionArray.forEach(e => createPoint({\n      x: e[0],\n      y: e[1]\n    }));\n\n    function drawEarthShape(position) {\n      var earthPosition = viewer.scene.pickPosition(position);\n      console.log(activeShapePoints);\n\n      if (Cesium.defined(earthPosition)) {\n        if (activeShapePoints.length === 0) {\n          floatingPoint = createPoint(earthPosition);\n          activeShapePoints.push(earthPosition);\n          var dynamicPositions = new Cesium.CallbackProperty(function () {\n            return activeShapePoints;\n          }, false);\n          drawShape(dynamicPositions);\n        }\n\n        activeShapePoints.push(earthPosition);\n        createPoint(earthPosition);\n      }\n    }\n\n    function terminateShape() {\n      activeShapePoints.pop();\n      drawShape(activeShapePoints);\n      viewer.entities.remove(floatingPoint);\n      floatingPoint = undefined;\n      activeShapePoints = [];\n    } //bind mouse move\n\n\n    handler.setInputAction(function (event) {\n      if (Cesium.defined(floatingPoint)) {\n        var newPosition = viewer.scene.pickPosition(event.endPosition);\n\n        if (Cesium.defined(newPosition)) {\n          floatingPoint.position.setValue(newPosition);\n          activeShapePoints.pop();\n          activeShapePoints.push(newPosition);\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE); //bind left click\n\n    handler.setInputAction(function (event) {\n      drawEarthShape(event.position);\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK); //bind right click\n\n    handler.setInputAction(function () {\n      terminateShape();\n    }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/drawable_map3d.jsx"],"names":["Cesium","React","positionArray","Map3D","Component","componentDidMount","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","shadows","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","cesiumWidget","screenSpaceEventHandler","removeInputAction","ScreenSpaceEventType","LEFT_DOUBLE_CLICK","LEFT_CLICK","createPoint","worldPosition","entities","position","point","color","Color","WHITE","pixelSize","heightReference","HeightReference","CLAMP_TO_GROUND","drawShape","positionData","polyline","positions","clampToGround","width","activeShapePoints","floatingPoint","handler","ScreenSpaceEventHandler","canvas","forEach","e","x","y","drawEarthShape","earthPosition","pickPosition","console","log","defined","length","push","dynamicPositions","CallbackProperty","terminateShape","pop","remove","undefined","setInputAction","event","newPosition","endPosition","setValue","MOUSE_MOVE","RIGHT_CLICK","render","height"],"mappings":";AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAClB,CAAC,CAAC,SAAF,EAAa,SAAb,CADkB,EAElB,CAAC,CAAC,SAAF,EAAa,SAAb,CAFkB,EAGlB,CAAC,CAAC,SAAF,EAAa,SAAb,CAHkB,EAIlB,CAAC,CAAC,SAAF,EAAa,SAAb,CAJkB,EAKlB,CAAC,CAAC,SAAF,EAAa,SAAb,CALkB,EAMlB,CAAC,CAAC,SAAF,EAAa,SAAb,CANkB,EAOlB,CAAC,CAAC,SAAF,EAAa,SAAb,CAPkB,EAQlB,CAAC,CAAC,SAAF,EAAa,SAAb,CARkB,EASlB,CAAC,CAAC,SAAF,EAAa,SAAb,CATkB,EAUlB,CAAC,CAAC,SAAF,EAAa,SAAb,CAVkB,CAAtB;AAaA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC/CC,EAAAA,iBAAiB,GAAE;AACfL,IAAAA,MAAM,CAACM,GAAP,CAAWC,kBAAX,GAAgC,sLAAhC;AAEA,UAAMC,MAAM,GAAG,IAAIR,MAAM,CAACS,MAAX,CAAkB,OAAlB,EAA2B;AACtCC,MAAAA,eAAe,EAAEV,MAAM,CAACW,kBAAP;AADqB,KAA3B,CAAf;AAIAH,IAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACAJ,IAAAA,MAAM,CAACK,KAAP,CAAaC,UAAb,CAAwBC,GAAxB,CAA4Bf,MAAM,CAACgB,kBAAP,EAA5B;AAEAR,IAAAA,MAAM,CAACS,MAAP,CAAcC,KAAd,CAAoB;AAClBC,MAAAA,WAAW,EAAGnB,MAAM,CAACoB,UAAP,CAAkBC,WAAlB,CAA8B,CAAC,SAA/B,EAA0C,SAA1C,EAAqD,GAArD;AADI,KAApB;AAIAb,IAAAA,MAAM,CAACc,YAAP,CAAoBC,uBAApB,CAA4CC,iBAA5C,CACIxB,MAAM,CAACyB,oBAAP,CAA4BC,iBADhC;AAIAlB,IAAAA,MAAM,CAACc,YAAP,CAAoBC,uBAApB,CAA4CC,iBAA5C,CACIxB,MAAM,CAACyB,oBAAP,CAA4BE,UADhC;;AAIA,aAASC,WAAT,CAAqBC,aAArB,EAAoC;AAChC,aAAOrB,MAAM,CAACsB,QAAP,CAAgBf,GAAhB,CAAoB;AACvBgB,QAAAA,QAAQ,EAAEF,aADa;AAEvBG,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAEjC,MAAM,CAACkC,KAAP,CAAaC,KADjB;AAEHC,UAAAA,SAAS,EAAE,CAFR;AAGHC,UAAAA,eAAe,EAAErC,MAAM,CAACsC,eAAP,CAAuBC;AAHrC;AAFgB,OAApB,CAAP;AAQH;;AAED,aAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC7B,aAAOjC,MAAM,CAACsB,QAAP,CAAgBf,GAAhB,CAAoB;AACvB2B,QAAAA,QAAQ,EAAE;AACNC,UAAAA,SAAS,EAAEF,YADL;AAENG,UAAAA,aAAa,EAAE,IAFT;AAGNC,UAAAA,KAAK,EAAE;AAHD;AADa,OAApB,CAAP;AAOH;;AAED,QAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,aAAJ;AACA,QAAIC,OAAO,GAAG,IAAIhD,MAAM,CAACiD,uBAAX,CAAmCzC,MAAM,CAAC0C,MAA1C,CAAd;AAGAhD,IAAAA,aAAa,CAACiD,OAAd,CACKC,CAAD,IAAOxB,WAAW,CAAC;AAACyB,MAAAA,CAAC,EAAED,CAAC,CAAC,CAAD,CAAL;AAAUE,MAAAA,CAAC,EAAEF,CAAC,CAAC,CAAD;AAAd,KAAD,CADtB;;AAKA,aAASG,cAAT,CAAwBxB,QAAxB,EAAiC;AAC7B,UAAIyB,aAAa,GAAGhD,MAAM,CAACK,KAAP,CAAa4C,YAAb,CAA0B1B,QAA1B,CAApB;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYb,iBAAZ;;AACA,UAAI9C,MAAM,CAAC4D,OAAP,CAAeJ,aAAf,CAAJ,EAAmC;AAC/B,YAAIV,iBAAiB,CAACe,MAAlB,KAA6B,CAAjC,EAAoC;AAChCd,UAAAA,aAAa,GAAGnB,WAAW,CAAC4B,aAAD,CAA3B;AACAV,UAAAA,iBAAiB,CAACgB,IAAlB,CAAuBN,aAAvB;AACA,cAAIO,gBAAgB,GAAG,IAAI/D,MAAM,CAACgE,gBAAX,CAA4B,YAAY;AAC3D,mBAAOlB,iBAAP;AACH,WAFsB,EAEpB,KAFoB,CAAvB;AAGAN,UAAAA,SAAS,CAACuB,gBAAD,CAAT;AACH;;AACDjB,QAAAA,iBAAiB,CAACgB,IAAlB,CAAuBN,aAAvB;AACA5B,QAAAA,WAAW,CAAC4B,aAAD,CAAX;AACH;AACJ;;AAED,aAASS,cAAT,GAA0B;AACtBnB,MAAAA,iBAAiB,CAACoB,GAAlB;AACA1B,MAAAA,SAAS,CAACM,iBAAD,CAAT;AACAtC,MAAAA,MAAM,CAACsB,QAAP,CAAgBqC,MAAhB,CAAuBpB,aAAvB;AACAA,MAAAA,aAAa,GAAGqB,SAAhB;AACAtB,MAAAA,iBAAiB,GAAG,EAApB;AACH,KA5Ec,CA8Ef;;;AACAE,IAAAA,OAAO,CAACqB,cAAR,CAAuB,UAAUC,KAAV,EAAiB;AACpC,UAAItE,MAAM,CAAC4D,OAAP,CAAeb,aAAf,CAAJ,EAAmC;AAC/B,YAAIwB,WAAW,GAAG/D,MAAM,CAACK,KAAP,CAAa4C,YAAb,CAA0Ba,KAAK,CAACE,WAAhC,CAAlB;;AACA,YAAIxE,MAAM,CAAC4D,OAAP,CAAeW,WAAf,CAAJ,EAAiC;AAC7BxB,UAAAA,aAAa,CAAChB,QAAd,CAAuB0C,QAAvB,CAAgCF,WAAhC;AACAzB,UAAAA,iBAAiB,CAACoB,GAAlB;AACApB,UAAAA,iBAAiB,CAACgB,IAAlB,CAAuBS,WAAvB;AACH;AACJ;AACJ,KATD,EASGvE,MAAM,CAACyB,oBAAP,CAA4BiD,UAT/B,EA/Ee,CA0Ff;;AACA1B,IAAAA,OAAO,CAACqB,cAAR,CAAuB,UAAUC,KAAV,EAAiB;AACpCf,MAAAA,cAAc,CAACe,KAAK,CAACvC,QAAP,CAAd;AACH,KAFD,EAEG/B,MAAM,CAACyB,oBAAP,CAA4BE,UAF/B,EA3Fe,CA+Ff;;AACAqB,IAAAA,OAAO,CAACqB,cAAR,CAAuB,YAAY;AAC/BJ,MAAAA,cAAc;AACjB,KAFD,EAEGjE,MAAM,CAACyB,oBAAP,CAA4BkD,WAF/B;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBhC,QAAAA,KAAK,EAAE;AAAxB,OAAZ;AAA4C,MAAA,EAAE,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAxG8C","sourcesContent":["import * as Cesium from 'cesium';\nimport React from 'react';\n\nconst positionArray = [\n    [-21.938068, 64.128000],\n    [-21.938268, 64.128100],\n    [-21.938468, 64.128300],\n    [-21.938568, 64.128700],\n    [-21.938968, 64.129700],\n    [-21.938768, 64.129700],\n    [-21.938568, 64.129600],\n    [-21.938268, 64.129300],\n    [-21.937868, 64.128600],\n    [-21.938468, 64.128000],\n  ]\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n            terrainProvider: Cesium.createWorldTerrain(),\n        });    \n\n        viewer.shadows = true;\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n        });\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n        );\n\n        viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n\n        function createPoint(worldPosition) {\n            return viewer.entities.add({\n                position: worldPosition,\n                point: {\n                    color: Cesium.Color.WHITE,\n                    pixelSize: 5,\n                    heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                },\n            });\n        }\n\n        function drawShape(positionData) {\n            return viewer.entities.add({\n                polyline: {\n                    positions: positionData,\n                    clampToGround: true,\n                    width: 3,\n                },\n            });\n        }\n\n        var activeShapePoints = [];\n        var floatingPoint;\n        var handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas);\n\n\n        positionArray.forEach(\n            (e) => createPoint({x: e[0], y: e[1]}),\n        );\n\n\n        function drawEarthShape(position){\n            var earthPosition = viewer.scene.pickPosition(position);\n            console.log(activeShapePoints)\n            if (Cesium.defined(earthPosition)) {\n                if (activeShapePoints.length === 0) {\n                    floatingPoint = createPoint(earthPosition);\n                    activeShapePoints.push(earthPosition);\n                    var dynamicPositions = new Cesium.CallbackProperty(function () {\n                        return activeShapePoints;\n                    }, false);\n                    drawShape(dynamicPositions);\n                }\n                activeShapePoints.push(earthPosition);\n                createPoint(earthPosition);\n            }\n        }\n        \n        function terminateShape() {\n            activeShapePoints.pop();\n            drawShape(activeShapePoints);\n            viewer.entities.remove(floatingPoint);\n            floatingPoint = undefined;\n            activeShapePoints = [];\n        }\n\n        //bind mouse move\n        handler.setInputAction(function (event) {\n            if (Cesium.defined(floatingPoint)) {\n                var newPosition = viewer.scene.pickPosition(event.endPosition);\n                if (Cesium.defined(newPosition)) {\n                    floatingPoint.position.setValue(newPosition);\n                    activeShapePoints.pop();\n                    activeShapePoints.push(newPosition);\n                }\n            }\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        \n        //bind left click\n        handler.setInputAction(function (event) {\n            drawEarthShape(event.position)\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n\n        //bind right click\n        handler.setInputAction(function () {\n            terminateShape();\n        }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}