{"ast":null,"code":"import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport FrustumGeometry from \"../Core/FrustumGeometry.js\";\nimport FrustumOutlineGeometry from \"../Core/FrustumOutlineGeometry.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport OrthographicFrustum from \"../Core/OrthographicFrustum.js\";\nimport OrthographicOffCenterFrustum from \"../Core/OrthographicOffCenterFrustum.js\";\nimport PerspectiveFrustum from \"../Core/PerspectiveFrustum.js\";\nimport PerspectiveOffCenterFrustum from \"../Core/PerspectiveOffCenterFrustum.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n/**\n * Draws the outline of the camera's view frustum.\n *\n * @alias DebugCameraPrimitive\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Camera} options.camera The camera.\n * @param {Number[]} [options.frustumSplits] Distances to the near and far planes of the camera frustums. This overrides the camera's frustum near and far values.\n * @param {Color} [options.color=Color.CYAN] The color of the debug outline.\n * @param {Boolean} [options.updateOnChange=true] Whether the primitive updates when the underlying camera changes.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {Object} [options.id] A user-defined object to return when the instance is picked with {@link Scene#pick}.\n *\n * @example\n * primitives.add(new Cesium.DebugCameraPrimitive({\n *   camera : camera,\n *   color : Cesium.Color.YELLOW\n * }));\n */\n\nfunction DebugCameraPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT); //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(options.camera)) {\n    throw new DeveloperError(\"options.camera is required.\");\n  } //>>includeEnd('debug');\n\n\n  this._camera = options.camera;\n  this._frustumSplits = options.frustumSplits;\n  this._color = defaultValue(options.color, Color.CYAN);\n  this._updateOnChange = defaultValue(options.updateOnChange, true);\n  /**\n   * Determines if this primitive will be shown.\n   *\n   * @type Boolean\n   * @default true\n   */\n\n  this.show = defaultValue(options.show, true);\n  /**\n   * User-defined value returned when the primitive is picked.\n   *\n   * @type {*}\n   * @default undefined\n   *\n   * @see Scene#pick\n   */\n\n  this.id = options.id;\n  this._id = undefined;\n  this._outlinePrimitives = [];\n  this._planesPrimitives = [];\n}\n\nvar scratchRight = new Cartesian3();\nvar scratchRotation = new Matrix3();\nvar scratchOrientation = new Quaternion();\nvar scratchPerspective = new PerspectiveFrustum();\nvar scratchPerspectiveOffCenter = new PerspectiveOffCenterFrustum();\nvar scratchOrthographic = new OrthographicFrustum();\nvar scratchOrthographicOffCenter = new OrthographicOffCenterFrustum();\nvar scratchColor = new Color();\nvar scratchSplits = [1.0, 100000.0];\n/**\n * @private\n */\n\nDebugCameraPrimitive.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var planesPrimitives = this._planesPrimitives;\n  var outlinePrimitives = this._outlinePrimitives;\n  var i;\n  var length;\n\n  if (this._updateOnChange) {\n    // Recreate the primitive every frame\n    length = planesPrimitives.length;\n\n    for (i = 0; i < length; ++i) {\n      outlinePrimitives[i] = outlinePrimitives[i] && outlinePrimitives[i].destroy();\n      planesPrimitives[i] = planesPrimitives[i] && planesPrimitives[i].destroy();\n    }\n\n    planesPrimitives.length = 0;\n    outlinePrimitives.length = 0;\n  }\n\n  if (planesPrimitives.length === 0) {\n    var camera = this._camera;\n    var cameraFrustum = camera.frustum;\n    var frustum;\n\n    if (cameraFrustum instanceof PerspectiveFrustum) {\n      frustum = scratchPerspective;\n    } else if (cameraFrustum instanceof PerspectiveOffCenterFrustum) {\n      frustum = scratchPerspectiveOffCenter;\n    } else if (cameraFrustum instanceof OrthographicFrustum) {\n      frustum = scratchOrthographic;\n    } else {\n      frustum = scratchOrthographicOffCenter;\n    }\n\n    frustum = cameraFrustum.clone(frustum);\n    var numFrustums;\n    var frustumSplits = this._frustumSplits;\n\n    if (!defined(frustumSplits) || frustumSplits.length <= 1) {\n      // Use near and far planes if no splits created\n      frustumSplits = scratchSplits;\n      frustumSplits[0] = this._camera.frustum.near;\n      frustumSplits[1] = this._camera.frustum.far;\n      numFrustums = 1;\n    } else {\n      numFrustums = frustumSplits.length - 1;\n    }\n\n    var position = camera.positionWC;\n    var direction = camera.directionWC;\n    var up = camera.upWC;\n    var right = camera.rightWC;\n    right = Cartesian3.negate(right, scratchRight);\n    var rotation = scratchRotation;\n    Matrix3.setColumn(rotation, 0, right, rotation);\n    Matrix3.setColumn(rotation, 1, up, rotation);\n    Matrix3.setColumn(rotation, 2, direction, rotation);\n    var orientation = Quaternion.fromRotationMatrix(rotation, scratchOrientation);\n    planesPrimitives.length = outlinePrimitives.length = numFrustums;\n\n    for (i = 0; i < numFrustums; ++i) {\n      frustum.near = frustumSplits[i];\n      frustum.far = frustumSplits[i + 1];\n      planesPrimitives[i] = new Primitive({\n        geometryInstances: new GeometryInstance({\n          geometry: new FrustumGeometry({\n            origin: position,\n            orientation: orientation,\n            frustum: frustum,\n            _drawNearPlane: i === 0\n          }),\n          attributes: {\n            color: ColorGeometryInstanceAttribute.fromColor(Color.fromAlpha(this._color, 0.1, scratchColor))\n          },\n          id: this.id,\n          pickPrimitive: this\n        }),\n        appearance: new PerInstanceColorAppearance({\n          translucent: true,\n          flat: true\n        }),\n        asynchronous: false\n      });\n      outlinePrimitives[i] = new Primitive({\n        geometryInstances: new GeometryInstance({\n          geometry: new FrustumOutlineGeometry({\n            origin: position,\n            orientation: orientation,\n            frustum: frustum,\n            _drawNearPlane: i === 0\n          }),\n          attributes: {\n            color: ColorGeometryInstanceAttribute.fromColor(this._color)\n          },\n          id: this.id,\n          pickPrimitive: this\n        }),\n        appearance: new PerInstanceColorAppearance({\n          translucent: false,\n          flat: true\n        }),\n        asynchronous: false\n      });\n    }\n  }\n\n  length = planesPrimitives.length;\n\n  for (i = 0; i < length; ++i) {\n    outlinePrimitives[i].update(frameState);\n    planesPrimitives[i].update(frameState);\n  }\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see DebugCameraPrimitive#destroy\n */\n\n\nDebugCameraPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * p = p && p.destroy();\n *\n * @see DebugCameraPrimitive#isDestroyed\n */\n\n\nDebugCameraPrimitive.prototype.destroy = function () {\n  var length = this._planesPrimitives.length;\n\n  for (var i = 0; i < length; ++i) {\n    this._outlinePrimitives[i] = this._outlinePrimitives[i] && this._outlinePrimitives[i].destroy();\n    this._planesPrimitives[i] = this._planesPrimitives[i] && this._planesPrimitives[i].destroy();\n  }\n\n  return destroyObject(this);\n};\n\nexport default DebugCameraPrimitive;","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/node_modules/cesium/Source/Scene/DebugCameraPrimitive.js"],"names":["Cartesian3","Color","ColorGeometryInstanceAttribute","defaultValue","defined","destroyObject","DeveloperError","FrustumGeometry","FrustumOutlineGeometry","GeometryInstance","Matrix3","OrthographicFrustum","OrthographicOffCenterFrustum","PerspectiveFrustum","PerspectiveOffCenterFrustum","Quaternion","PerInstanceColorAppearance","Primitive","DebugCameraPrimitive","options","EMPTY_OBJECT","camera","_camera","_frustumSplits","frustumSplits","_color","color","CYAN","_updateOnChange","updateOnChange","show","id","_id","undefined","_outlinePrimitives","_planesPrimitives","scratchRight","scratchRotation","scratchOrientation","scratchPerspective","scratchPerspectiveOffCenter","scratchOrthographic","scratchOrthographicOffCenter","scratchColor","scratchSplits","prototype","update","frameState","planesPrimitives","outlinePrimitives","i","length","destroy","cameraFrustum","frustum","clone","numFrustums","near","far","position","positionWC","direction","directionWC","up","upWC","right","rightWC","negate","rotation","setColumn","orientation","fromRotationMatrix","geometryInstances","geometry","origin","_drawNearPlane","attributes","fromColor","fromAlpha","pickPrimitive","appearance","translucent","flat","asynchronous","isDestroyed"],"mappings":"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","sourcesContent":["import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport FrustumGeometry from \"../Core/FrustumGeometry.js\";\nimport FrustumOutlineGeometry from \"../Core/FrustumOutlineGeometry.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport OrthographicFrustum from \"../Core/OrthographicFrustum.js\";\nimport OrthographicOffCenterFrustum from \"../Core/OrthographicOffCenterFrustum.js\";\nimport PerspectiveFrustum from \"../Core/PerspectiveFrustum.js\";\nimport PerspectiveOffCenterFrustum from \"../Core/PerspectiveOffCenterFrustum.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n\n/**\n * Draws the outline of the camera's view frustum.\n *\n * @alias DebugCameraPrimitive\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Camera} options.camera The camera.\n * @param {Number[]} [options.frustumSplits] Distances to the near and far planes of the camera frustums. This overrides the camera's frustum near and far values.\n * @param {Color} [options.color=Color.CYAN] The color of the debug outline.\n * @param {Boolean} [options.updateOnChange=true] Whether the primitive updates when the underlying camera changes.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {Object} [options.id] A user-defined object to return when the instance is picked with {@link Scene#pick}.\n *\n * @example\n * primitives.add(new Cesium.DebugCameraPrimitive({\n *   camera : camera,\n *   color : Cesium.Color.YELLOW\n * }));\n */\nfunction DebugCameraPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.camera)) {\n    throw new DeveloperError(\"options.camera is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._camera = options.camera;\n  this._frustumSplits = options.frustumSplits;\n  this._color = defaultValue(options.color, Color.CYAN);\n  this._updateOnChange = defaultValue(options.updateOnChange, true);\n\n  /**\n   * Determines if this primitive will be shown.\n   *\n   * @type Boolean\n   * @default true\n   */\n  this.show = defaultValue(options.show, true);\n\n  /**\n   * User-defined value returned when the primitive is picked.\n   *\n   * @type {*}\n   * @default undefined\n   *\n   * @see Scene#pick\n   */\n  this.id = options.id;\n  this._id = undefined;\n\n  this._outlinePrimitives = [];\n  this._planesPrimitives = [];\n}\n\nvar scratchRight = new Cartesian3();\nvar scratchRotation = new Matrix3();\nvar scratchOrientation = new Quaternion();\nvar scratchPerspective = new PerspectiveFrustum();\nvar scratchPerspectiveOffCenter = new PerspectiveOffCenterFrustum();\nvar scratchOrthographic = new OrthographicFrustum();\nvar scratchOrthographicOffCenter = new OrthographicOffCenterFrustum();\n\nvar scratchColor = new Color();\nvar scratchSplits = [1.0, 100000.0];\n\n/**\n * @private\n */\nDebugCameraPrimitive.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var planesPrimitives = this._planesPrimitives;\n  var outlinePrimitives = this._outlinePrimitives;\n  var i;\n  var length;\n\n  if (this._updateOnChange) {\n    // Recreate the primitive every frame\n    length = planesPrimitives.length;\n    for (i = 0; i < length; ++i) {\n      outlinePrimitives[i] =\n        outlinePrimitives[i] && outlinePrimitives[i].destroy();\n      planesPrimitives[i] =\n        planesPrimitives[i] && planesPrimitives[i].destroy();\n    }\n    planesPrimitives.length = 0;\n    outlinePrimitives.length = 0;\n  }\n\n  if (planesPrimitives.length === 0) {\n    var camera = this._camera;\n    var cameraFrustum = camera.frustum;\n    var frustum;\n    if (cameraFrustum instanceof PerspectiveFrustum) {\n      frustum = scratchPerspective;\n    } else if (cameraFrustum instanceof PerspectiveOffCenterFrustum) {\n      frustum = scratchPerspectiveOffCenter;\n    } else if (cameraFrustum instanceof OrthographicFrustum) {\n      frustum = scratchOrthographic;\n    } else {\n      frustum = scratchOrthographicOffCenter;\n    }\n    frustum = cameraFrustum.clone(frustum);\n\n    var numFrustums;\n    var frustumSplits = this._frustumSplits;\n    if (!defined(frustumSplits) || frustumSplits.length <= 1) {\n      // Use near and far planes if no splits created\n      frustumSplits = scratchSplits;\n      frustumSplits[0] = this._camera.frustum.near;\n      frustumSplits[1] = this._camera.frustum.far;\n      numFrustums = 1;\n    } else {\n      numFrustums = frustumSplits.length - 1;\n    }\n\n    var position = camera.positionWC;\n    var direction = camera.directionWC;\n    var up = camera.upWC;\n    var right = camera.rightWC;\n    right = Cartesian3.negate(right, scratchRight);\n\n    var rotation = scratchRotation;\n    Matrix3.setColumn(rotation, 0, right, rotation);\n    Matrix3.setColumn(rotation, 1, up, rotation);\n    Matrix3.setColumn(rotation, 2, direction, rotation);\n\n    var orientation = Quaternion.fromRotationMatrix(\n      rotation,\n      scratchOrientation\n    );\n\n    planesPrimitives.length = outlinePrimitives.length = numFrustums;\n\n    for (i = 0; i < numFrustums; ++i) {\n      frustum.near = frustumSplits[i];\n      frustum.far = frustumSplits[i + 1];\n\n      planesPrimitives[i] = new Primitive({\n        geometryInstances: new GeometryInstance({\n          geometry: new FrustumGeometry({\n            origin: position,\n            orientation: orientation,\n            frustum: frustum,\n            _drawNearPlane: i === 0,\n          }),\n          attributes: {\n            color: ColorGeometryInstanceAttribute.fromColor(\n              Color.fromAlpha(this._color, 0.1, scratchColor)\n            ),\n          },\n          id: this.id,\n          pickPrimitive: this,\n        }),\n        appearance: new PerInstanceColorAppearance({\n          translucent: true,\n          flat: true,\n        }),\n        asynchronous: false,\n      });\n\n      outlinePrimitives[i] = new Primitive({\n        geometryInstances: new GeometryInstance({\n          geometry: new FrustumOutlineGeometry({\n            origin: position,\n            orientation: orientation,\n            frustum: frustum,\n            _drawNearPlane: i === 0,\n          }),\n          attributes: {\n            color: ColorGeometryInstanceAttribute.fromColor(this._color),\n          },\n          id: this.id,\n          pickPrimitive: this,\n        }),\n        appearance: new PerInstanceColorAppearance({\n          translucent: false,\n          flat: true,\n        }),\n        asynchronous: false,\n      });\n    }\n  }\n\n  length = planesPrimitives.length;\n  for (i = 0; i < length; ++i) {\n    outlinePrimitives[i].update(frameState);\n    planesPrimitives[i].update(frameState);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see DebugCameraPrimitive#destroy\n */\nDebugCameraPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * p = p && p.destroy();\n *\n * @see DebugCameraPrimitive#isDestroyed\n */\nDebugCameraPrimitive.prototype.destroy = function () {\n  var length = this._planesPrimitives.length;\n  for (var i = 0; i < length; ++i) {\n    this._outlinePrimitives[i] =\n      this._outlinePrimitives[i] && this._outlinePrimitives[i].destroy();\n    this._planesPrimitives[i] =\n      this._planesPrimitives[i] && this._planesPrimitives[i].destroy();\n  }\n  return destroyObject(this);\n};\nexport default DebugCameraPrimitive;\n"]},"metadata":{},"sourceType":"module"}