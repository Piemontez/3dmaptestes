{"ast":null,"code":"var _jsxFileName = \"/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx\";\nimport * as Cesium from 'cesium';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positionArray = [[-21.938068, 64.128000], [-21.938268, 64.128000], [-21.938468, 64.128000], [-21.938568, 64.128000], [-21.938968, 64.128000]];\nexport default class Map3D extends React.Component {\n  componentDidMount() {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n    const viewer = new Cesium.Viewer('map3d', {\n      terrainProvider: Cesium.createWorldTerrain()\n    });\n    viewer.shadows = true;\n    viewer.scene.primitives.add(Cesium.createOsmBuildings());\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400) //orientation : {\n      //  heading : Cesium.Math.toRadians(0.0),\n      //  pitch : Cesium.Math.toRadians(-15.0),\n      //}\n\n    }); //teste fromid - funciona, mas depende do website\n\n    Cesium.IonResource.fromAssetId(353567).then(function (resource) {\n      viewer.entities.add({\n        position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n        model: {\n          uri: resource,\n          scale: 10.0,\n          color: Cesium.Color[\"RED\"]\n        }\n      });\n    }); //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n\n    /* var position = Cesium.Cartesian3.fromDegrees(\n      -21.938068, \n      64.128000,\n      100\n    );\n    var heading = Cesium.Math.toRadians(135);\n    var pitch = 0;\n    var roll = 0;\n    var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n    var orientation = Cesium.Transforms.headingPitchRollQuaternion(\n      position,\n      hpr\n    );\n    \n    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\n     var model = viewer.scene.primitives.add(Cesium.Model.fromGltf({\n      url : 'http://localhost:3000/object/cow.glb',\n      modelMatrix : modelMatrix,\n      scale: 2e7\n    }));\n     viewer.entities.add({\n      name: 'nice',\n      position: position,\n      orientation: orientation,\n      model: {\n        uri: 'http://localhost:3000/object/cow.glb',\n        scale: 10.0\n      },\n    }); */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"54vh\",\n        width: \"50%\"\n      },\n      id: \"map3d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/davi/thalamus/wms/3dmaptestes/leaflet_cesium/client/src/map/map3d.jsx"],"names":["Cesium","React","positionArray","Map3D","Component","componentDidMount","Ion","defaultAccessToken","viewer","Viewer","terrainProvider","createWorldTerrain","shadows","scene","primitives","add","createOsmBuildings","camera","flyTo","destination","Cartesian3","fromDegrees","IonResource","fromAssetId","then","resource","entities","position","model","uri","scale","color","Color","render","height","width"],"mappings":";AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CACpB,CAAC,CAAC,SAAF,EAAa,SAAb,CADoB,EAEpB,CAAC,CAAC,SAAF,EAAa,SAAb,CAFoB,EAGpB,CAAC,CAAC,SAAF,EAAa,SAAb,CAHoB,EAIpB,CAAC,CAAC,SAAF,EAAa,SAAb,CAJoB,EAKpB,CAAC,CAAC,SAAF,EAAa,SAAb,CALoB,CAAtB;AAQA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC/CC,EAAAA,iBAAiB,GAAE;AACfL,IAAAA,MAAM,CAACM,GAAP,CAAWC,kBAAX,GAAgC,sLAAhC;AAEA,UAAMC,MAAM,GAAG,IAAIR,MAAM,CAACS,MAAX,CAAkB,OAAlB,EAA2B;AACxCC,MAAAA,eAAe,EAAEV,MAAM,CAACW,kBAAP;AADuB,KAA3B,CAAf;AAIAH,IAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACAJ,IAAAA,MAAM,CAACK,KAAP,CAAaC,UAAb,CAAwBC,GAAxB,CAA4Bf,MAAM,CAACgB,kBAAP,EAA5B;AAEAR,IAAAA,MAAM,CAACS,MAAP,CAAcC,KAAd,CAAoB;AAClBC,MAAAA,WAAW,EAAGnB,MAAM,CAACoB,UAAP,CAAkBC,WAAlB,CAA8B,CAAC,SAA/B,EAA0C,SAA1C,EAAqD,GAArD,CADI,CAElB;AACA;AACA;AACA;;AALkB,KAApB,EAVe,CAkBf;;AACArB,IAAAA,MAAM,CAACsB,WAAP,CAAmBC,WAAnB,CAA+B,MAA/B,EACGC,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxBjB,MAAAA,MAAM,CAACkB,QAAP,CAAgBX,GAAhB,CAAoB;AAClBY,QAAAA,QAAQ,EAAE3B,MAAM,CAACoB,UAAP,CAAkBC,WAAlB,CAA8B,CAAC,SAA/B,EAA0C,SAA1C,EAAqD,GAArD,CADQ;AAElBO,QAAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAEJ,QADA;AAELK,UAAAA,KAAK,EAAE,IAFF;AAGLC,UAAAA,KAAK,EAAE/B,MAAM,CAACgC,KAAP,CAAa,KAAb;AAHF;AAFW,OAApB;AAQD,KAVH,EAnBe,CA+Bf;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAZ;AAA4C,MAAA,EAAE,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AApE8C","sourcesContent":["import * as Cesium from 'cesium';\nimport React from 'react';\n\nconst positionArray = [\n  [-21.938068, 64.128000],\n  [-21.938268, 64.128000],\n  [-21.938468, 64.128000],\n  [-21.938568, 64.128000],\n  [-21.938968, 64.128000],\n]\n\nexport default class Map3D extends React.Component {\n    componentDidMount(){\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMTYwYTk1ZC00ZTQ5LTQxMmEtYjQyZi01YTgyMDRkNzkxMzQiLCJpZCI6NDU2NjksImlhdCI6MTYxNTMxMjMyN30.6Vqvf-4RtrFxzGFkdoAxokmcWWRkwsc7gw9-yBQL4S4';\n        \n        const viewer = new Cesium.Viewer('map3d', {\n          terrainProvider: Cesium.createWorldTerrain()\n        }); \n        \n        viewer.shadows = true;\n        viewer.scene.primitives.add(Cesium.createOsmBuildings());   \n\n        viewer.camera.flyTo({\n          destination : Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 400),\n          //orientation : {\n          //  heading : Cesium.Math.toRadians(0.0),\n          //  pitch : Cesium.Math.toRadians(-15.0),\n          //}\n        });\n\n        //teste fromid - funciona, mas depende do website\n        Cesium.IonResource.fromAssetId(353567)\n          .then(function (resource) {\n            viewer.entities.add({\n              position: Cesium.Cartesian3.fromDegrees(-21.938068, 64.128000, 100),\n              model: {\n                uri: resource,\n                scale: 10.0,\n                color: Cesium.Color[\"RED\"]\n              },\n            });\n          })\n\n        //teste com arquivos locais / do servidor, não funciona de jeito nenhum\n        /* var position = Cesium.Cartesian3.fromDegrees(\n          -21.938068, \n          64.128000,\n          100\n        );\n        var heading = Cesium.Math.toRadians(135);\n        var pitch = 0;\n        var roll = 0;\n        var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n        var orientation = Cesium.Transforms.headingPitchRollQuaternion(\n          position,\n          hpr\n        );\n        \n        var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\n\n        var model = viewer.scene.primitives.add(Cesium.Model.fromGltf({\n          url : 'http://localhost:3000/object/cow.glb',\n          modelMatrix : modelMatrix,\n          scale: 2e7\n        }));\n\n        viewer.entities.add({\n          name: 'nice',\n          position: position,\n          orientation: orientation,\n          model: {\n            uri: 'http://localhost:3000/object/cow.glb',\n            scale: 10.0\n          },\n        }); */\n    }\n\n    render(){\n        return <div style={{height: \"54vh\", width: \"50%\"}} id=\"map3d\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}